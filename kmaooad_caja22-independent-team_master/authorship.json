[{"path":".github/workflows/ci.yml","fileType":"yml","lines":[{"lineNumber":1,"author":{"gitId":"Anton Shabinskiy"},"content":"name: CI"},{"lineNumber":2,"author":{"gitId":"Anton Shabinskiy"},"content":""},{"lineNumber":3,"author":{"gitId":"Anton Shabinskiy"},"content":"on:"},{"lineNumber":4,"author":{"gitId":"Anton Shabinskiy"},"content":"  pull_request:"},{"lineNumber":5,"author":{"gitId":"Anton Shabinskiy"},"content":"  push:"},{"lineNumber":6,"author":{"gitId":"Anton Shabinskiy"},"content":"    branches:"},{"lineNumber":7,"author":{"gitId":"Anton Shabinskiy"},"content":"      - master"},{"lineNumber":8,"author":{"gitId":"Anton Shabinskiy"},"content":"  workflow_dispatch:"},{"lineNumber":9,"author":{"gitId":"Anton Shabinskiy"},"content":""},{"lineNumber":10,"author":{"gitId":"Anton Shabinskiy"},"content":"env:"},{"lineNumber":11,"author":{"gitId":"Anton Shabinskiy"},"content":"  PACKAGE_DIRECTORY: \u0027./kmaooad-functions\u0027 # set this to the directory which contains pom.xml file"},{"lineNumber":12,"author":{"gitId":"Anton Shabinskiy"},"content":"  JAVA_VERSION: \u002711\u0027 # set this to the java version to use"},{"lineNumber":13,"author":{"gitId":"Anton Shabinskiy"},"content":""},{"lineNumber":14,"author":{"gitId":"Anton Shabinskiy"},"content":"jobs:"},{"lineNumber":15,"author":{"gitId":"Anton Shabinskiy"},"content":"  build-and-test:"},{"lineNumber":16,"author":{"gitId":"Anton Shabinskiy"},"content":"    runs-on: windows-latest"},{"lineNumber":17,"author":{"gitId":"Anton Shabinskiy"},"content":"    steps:"},{"lineNumber":18,"author":{"gitId":"Anton Shabinskiy"},"content":"      - name: \u0027Checkout GitHub Action\u0027"},{"lineNumber":19,"author":{"gitId":"Anton Shabinskiy"},"content":"        uses: actions/checkout@v2"},{"lineNumber":20,"author":{"gitId":"Anton Shabinskiy"},"content":""},{"lineNumber":21,"author":{"gitId":"Anton Shabinskiy"},"content":"      - name: Setup Java Sdk ${{ env.JAVA_VERSION }}"},{"lineNumber":22,"author":{"gitId":"Anton Shabinskiy"},"content":"        uses: actions/setup-java@v1"},{"lineNumber":23,"author":{"gitId":"Anton Shabinskiy"},"content":"        with:"},{"lineNumber":24,"author":{"gitId":"Anton Shabinskiy"},"content":"          java-version: ${{ env.JAVA_VERSION }}"},{"lineNumber":25,"author":{"gitId":"Anton Shabinskiy"},"content":""},{"lineNumber":26,"author":{"gitId":"Anton Shabinskiy"},"content":"      - name: Install dependencies"},{"lineNumber":27,"author":{"gitId":"Anton Shabinskiy"},"content":"        shell: pwsh"},{"lineNumber":28,"author":{"gitId":"Anton Shabinskiy"},"content":"        run: |"},{"lineNumber":29,"author":{"gitId":"Anton Shabinskiy"},"content":"          pushd \u0027./${{ env.PACKAGE_DIRECTORY }}\u0027"},{"lineNumber":30,"author":{"gitId":"Anton Shabinskiy"},"content":"          mvn install -DskipTests\u003dtrue -B -V"},{"lineNumber":31,"author":{"gitId":"Anton Shabinskiy"},"content":"          popd"},{"lineNumber":32,"author":{"gitId":"Anton Shabinskiy"},"content":""},{"lineNumber":33,"author":{"gitId":"Anton Shabinskiy"},"content":"      - name: Run tests and collect coverage"},{"lineNumber":34,"author":{"gitId":"Anton Shabinskiy"},"content":"        shell: pwsh"},{"lineNumber":35,"author":{"gitId":"Anton Shabinskiy"},"content":"        run: |"},{"lineNumber":36,"author":{"gitId":"Anton Shabinskiy"},"content":"          pushd \u0027./${{ env.PACKAGE_DIRECTORY }}\u0027"},{"lineNumber":37,"author":{"gitId":"Anton Shabinskiy"},"content":"          mvn -B test"},{"lineNumber":38,"author":{"gitId":"Anton Shabinskiy"},"content":"          popd"},{"lineNumber":39,"author":{"gitId":"Anton Shabinskiy"},"content":"      "},{"lineNumber":40,"author":{"gitId":"Anton Shabinskiy"},"content":"      - name: Upload coverage to Codecov"},{"lineNumber":41,"author":{"gitId":"Anton Shabinskiy"},"content":"        uses: codecov/codecov-action@v3"},{"lineNumber":42,"author":{"gitId":"Anton Shabinskiy"},"content":"      "},{"lineNumber":43,"author":{"gitId":"Anton Shabinskiy"},"content":"      "}],"authorContributionMap":{"Anton Shabinskiy":43}},{"path":".github/workflows/deploy.yml","fileType":"yml","lines":[{"lineNumber":1,"author":{"gitId":"Anton Shabinskiy"},"content":"# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action"},{"lineNumber":2,"author":{"gitId":"Anton Shabinskiy"},"content":"# More GitHub Actions for Azure: https://github.com/Azure/actions"},{"lineNumber":3,"author":{"gitId":"Anton Shabinskiy"},"content":""},{"lineNumber":4,"author":{"gitId":"Anton Shabinskiy"},"content":"name: Deploy"},{"lineNumber":5,"author":{"gitId":"Anton Shabinskiy"},"content":""},{"lineNumber":6,"author":{"gitId":"Anton Shabinskiy"},"content":"on:"},{"lineNumber":7,"author":{"gitId":"Anton Shabinskiy"},"content":"  push:"},{"lineNumber":8,"author":{"gitId":"Anton Shabinskiy"},"content":"    branches:"},{"lineNumber":9,"author":{"gitId":"Anton Shabinskiy"},"content":"      - master"},{"lineNumber":10,"author":{"gitId":"Anton Shabinskiy"},"content":"  workflow_dispatch:"},{"lineNumber":11,"author":{"gitId":"Anton Shabinskiy"},"content":""},{"lineNumber":12,"author":{"gitId":"Anton Shabinskiy"},"content":"env:"},{"lineNumber":13,"author":{"gitId":"Anton Shabinskiy"},"content":"  AZURE_FUNCTIONAPP_NAME: kmaooad-independent-team # set this to your function app name on Azure"},{"lineNumber":14,"author":{"gitId":"Anton Shabinskiy"},"content":"  PACKAGE_DIRECTORY: \u0027./kmaooad-functions\u0027 # set this to the directory which contains pom.xml file"},{"lineNumber":15,"author":{"gitId":"Anton Shabinskiy"},"content":"  JAVA_VERSION: \u002711\u0027 # set this to the java version to use"},{"lineNumber":16,"author":{"gitId":"Anton Shabinskiy"},"content":""},{"lineNumber":17,"author":{"gitId":"Anton Shabinskiy"},"content":"jobs:"},{"lineNumber":18,"author":{"gitId":"Anton Shabinskiy"},"content":"  build-and-deploy:"},{"lineNumber":19,"author":{"gitId":"Anton Shabinskiy"},"content":"    runs-on: windows-latest"},{"lineNumber":20,"author":{"gitId":"Anton Shabinskiy"},"content":"    steps:"},{"lineNumber":21,"author":{"gitId":"Anton Shabinskiy"},"content":"      - name: \u0027Checkout GitHub Action\u0027"},{"lineNumber":22,"author":{"gitId":"Anton Shabinskiy"},"content":"        uses: actions/checkout@v2"},{"lineNumber":23,"author":{"gitId":"Anton Shabinskiy"},"content":""},{"lineNumber":24,"author":{"gitId":"Anton Shabinskiy"},"content":"      - name: Setup Java Sdk ${{ env.JAVA_VERSION }}"},{"lineNumber":25,"author":{"gitId":"Anton Shabinskiy"},"content":"        uses: actions/setup-java@v1"},{"lineNumber":26,"author":{"gitId":"Anton Shabinskiy"},"content":"        with:"},{"lineNumber":27,"author":{"gitId":"Anton Shabinskiy"},"content":"          java-version: ${{ env.JAVA_VERSION }}"},{"lineNumber":28,"author":{"gitId":"Anton Shabinskiy"},"content":""},{"lineNumber":29,"author":{"gitId":"Anton Shabinskiy"},"content":"      - name: \u0027Restore Project Dependencies Using Mvn\u0027"},{"lineNumber":30,"author":{"gitId":"Anton Shabinskiy"},"content":"        shell: pwsh"},{"lineNumber":31,"author":{"gitId":"Anton Shabinskiy"},"content":"        run: |"},{"lineNumber":32,"author":{"gitId":"Anton Shabinskiy"},"content":"          pushd \u0027./${{ env.PACKAGE_DIRECTORY }}\u0027"},{"lineNumber":33,"author":{"gitId":"Anton Shabinskiy"},"content":"          mvn clean package"},{"lineNumber":34,"author":{"gitId":"Anton Shabinskiy"},"content":"          popd"},{"lineNumber":35,"author":{"gitId":"Anton Shabinskiy"},"content":"      - name: \u0027Run Azure Functions Action\u0027"},{"lineNumber":36,"author":{"gitId":"Anton Shabinskiy"},"content":"        uses: Azure/functions-action@v1"},{"lineNumber":37,"author":{"gitId":"Anton Shabinskiy"},"content":"        id: fa"},{"lineNumber":38,"author":{"gitId":"Anton Shabinskiy"},"content":"        with:"},{"lineNumber":39,"author":{"gitId":"Anton Shabinskiy"},"content":"          app-name: \u0027kmaooad-independent-team\u0027"},{"lineNumber":40,"author":{"gitId":"Anton Shabinskiy"},"content":"          slot-name: \u0027Production\u0027"},{"lineNumber":41,"author":{"gitId":"Anton Shabinskiy"},"content":"          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_4E026641E7274333A039B2C7E3361023 }}"},{"lineNumber":42,"author":{"gitId":"Anton Shabinskiy"},"content":"          package: \u0027${{ env.PACKAGE_DIRECTORY }}\u0027"},{"lineNumber":43,"author":{"gitId":"Anton Shabinskiy"},"content":"          respect-pom-xml: true"}],"authorContributionMap":{"Anton Shabinskiy":43}},{"path":"LICENSE","fileType":"LICENSE","lines":[{"lineNumber":1,"author":{"gitId":"github-classroom[bot]"},"content":"MIT License"},{"lineNumber":2,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":3,"author":{"gitId":"github-classroom[bot]"},"content":"Copyright (c) 2022 NAUKMA OOAD 2022"},{"lineNumber":4,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":5,"author":{"gitId":"github-classroom[bot]"},"content":"Permission is hereby granted, free of charge, to any person obtaining a copy"},{"lineNumber":6,"author":{"gitId":"github-classroom[bot]"},"content":"of this software and associated documentation files (the \"Software\"), to deal"},{"lineNumber":7,"author":{"gitId":"github-classroom[bot]"},"content":"in the Software without restriction, including without limitation the rights"},{"lineNumber":8,"author":{"gitId":"github-classroom[bot]"},"content":"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"},{"lineNumber":9,"author":{"gitId":"github-classroom[bot]"},"content":"copies of the Software, and to permit persons to whom the Software is"},{"lineNumber":10,"author":{"gitId":"github-classroom[bot]"},"content":"furnished to do so, subject to the following conditions:"},{"lineNumber":11,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":12,"author":{"gitId":"github-classroom[bot]"},"content":"The above copyright notice and this permission notice shall be included in all"},{"lineNumber":13,"author":{"gitId":"github-classroom[bot]"},"content":"copies or substantial portions of the Software."},{"lineNumber":14,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":15,"author":{"gitId":"github-classroom[bot]"},"content":"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"},{"lineNumber":16,"author":{"gitId":"github-classroom[bot]"},"content":"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"},{"lineNumber":17,"author":{"gitId":"github-classroom[bot]"},"content":"FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE"},{"lineNumber":18,"author":{"gitId":"github-classroom[bot]"},"content":"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"},{"lineNumber":19,"author":{"gitId":"github-classroom[bot]"},"content":"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"},{"lineNumber":20,"author":{"gitId":"github-classroom[bot]"},"content":"OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE"},{"lineNumber":21,"author":{"gitId":"github-classroom[bot]"},"content":"SOFTWARE."}],"authorContributionMap":{"github-classroom[bot]":21}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"github-classroom[bot]"},"content":"[![Open in Visual Studio Code](https://classroom.github.com/assets/open-in-vscode-c66648af7eb3fe8bc4f294546bfd86ef473780cde1dea487d3c4ff354943c9ae.svg)](https://classroom.github.com/online_ide?assignment_repo_id\u003d8719918\u0026assignment_repo_type\u003dAssignmentRepo)"}],"authorContributionMap":{"github-classroom[bot]":1}},{"path":"kmaooad-functions/.gitignore","fileType":"gitignore","lines":[{"lineNumber":1,"author":{"gitId":"github-classroom[bot]"},"content":"# Build output"},{"lineNumber":2,"author":{"gitId":"github-classroom[bot]"},"content":"target/"},{"lineNumber":3,"author":{"gitId":"github-classroom[bot]"},"content":"*.class"},{"lineNumber":4,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":5,"author":{"gitId":"github-classroom[bot]"},"content":"# Log file"},{"lineNumber":6,"author":{"gitId":"github-classroom[bot]"},"content":"*.log"},{"lineNumber":7,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":8,"author":{"gitId":"github-classroom[bot]"},"content":"# BlueJ files"},{"lineNumber":9,"author":{"gitId":"github-classroom[bot]"},"content":"*.ctxt"},{"lineNumber":10,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":11,"author":{"gitId":"github-classroom[bot]"},"content":"# Mobile Tools for Java (J2ME)"},{"lineNumber":12,"author":{"gitId":"github-classroom[bot]"},"content":".mtj.tmp/"},{"lineNumber":13,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":14,"author":{"gitId":"github-classroom[bot]"},"content":"# Package Files #"},{"lineNumber":15,"author":{"gitId":"github-classroom[bot]"},"content":"*.jar"},{"lineNumber":16,"author":{"gitId":"github-classroom[bot]"},"content":"*.war"},{"lineNumber":17,"author":{"gitId":"github-classroom[bot]"},"content":"*.ear"},{"lineNumber":18,"author":{"gitId":"github-classroom[bot]"},"content":"*.zip"},{"lineNumber":19,"author":{"gitId":"github-classroom[bot]"},"content":"*.tar.gz"},{"lineNumber":20,"author":{"gitId":"github-classroom[bot]"},"content":"*.rar"},{"lineNumber":21,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":22,"author":{"gitId":"github-classroom[bot]"},"content":"# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml"},{"lineNumber":23,"author":{"gitId":"github-classroom[bot]"},"content":"hs_err_pid*"},{"lineNumber":24,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":25,"author":{"gitId":"github-classroom[bot]"},"content":"# IDE"},{"lineNumber":26,"author":{"gitId":"github-classroom[bot]"},"content":".idea/"},{"lineNumber":27,"author":{"gitId":"github-classroom[bot]"},"content":"*.iml"},{"lineNumber":28,"author":{"gitId":"github-classroom[bot]"},"content":".settings/"},{"lineNumber":29,"author":{"gitId":"github-classroom[bot]"},"content":".project"},{"lineNumber":30,"author":{"gitId":"github-classroom[bot]"},"content":".classpath"},{"lineNumber":31,"author":{"gitId":"github-classroom[bot]"},"content":".vscode/"},{"lineNumber":32,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":33,"author":{"gitId":"github-classroom[bot]"},"content":"# macOS"},{"lineNumber":34,"author":{"gitId":"github-classroom[bot]"},"content":".DS_Store"},{"lineNumber":35,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":36,"author":{"gitId":"github-classroom[bot]"},"content":"# Azure Functions"},{"lineNumber":37,"author":{"gitId":"github-classroom[bot]"},"content":"local.settings.json"},{"lineNumber":38,"author":{"gitId":"github-classroom[bot]"},"content":"bin/"},{"lineNumber":39,"author":{"gitId":"github-classroom[bot]"},"content":"obj/"}],"authorContributionMap":{"github-classroom[bot]":39}},{"path":"kmaooad-functions/host.json","fileType":"json","lines":[{"lineNumber":1,"author":{"gitId":"github-classroom[bot]"},"content":"{"},{"lineNumber":2,"author":{"gitId":"github-classroom[bot]"},"content":"  \"version\": \"2.0\","},{"lineNumber":3,"author":{"gitId":"github-classroom[bot]"},"content":"  \"extensionBundle\": {"},{"lineNumber":4,"author":{"gitId":"github-classroom[bot]"},"content":"    \"id\": \"Microsoft.Azure.Functions.ExtensionBundle\","},{"lineNumber":5,"author":{"gitId":"github-classroom[bot]"},"content":"    \"version\": \"[3.*, 4.0.0)\""},{"lineNumber":6,"author":{"gitId":"github-classroom[bot]"},"content":"  }"},{"lineNumber":7,"author":{"gitId":"github-classroom[bot]"},"content":"}"}],"authorContributionMap":{"github-classroom[bot]":7}},{"path":"kmaooad-functions/pom.xml","fileType":"xml","lines":[{"lineNumber":1,"author":{"gitId":"github-classroom[bot]"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\" ?\u003e"},{"lineNumber":2,"author":{"gitId":"github-classroom[bot]"},"content":"\u003cproject xmlns\u003d\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi\u003d\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation\u003d\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\u003e"},{"lineNumber":3,"author":{"gitId":"github-classroom[bot]"},"content":"    \u003cmodelVersion\u003e4.0.0\u003c/modelVersion\u003e"},{"lineNumber":4,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":5,"author":{"gitId":"github-classroom[bot]"},"content":"    \u003cgroupId\u003eedu.kmaooad\u003c/groupId\u003e"},{"lineNumber":6,"author":{"gitId":"github-classroom[bot]"},"content":"    \u003cartifactId\u003ekmaooad-functions\u003c/artifactId\u003e"},{"lineNumber":7,"author":{"gitId":"github-classroom[bot]"},"content":"    \u003cversion\u003e1.0-SNAPSHOT\u003c/version\u003e"},{"lineNumber":8,"author":{"gitId":"github-classroom[bot]"},"content":"    \u003cpackaging\u003ejar\u003c/packaging\u003e"},{"lineNumber":9,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":10,"author":{"gitId":"github-classroom[bot]"},"content":"    \u003cname\u003eAzure Java Functions\u003c/name\u003e"},{"lineNumber":11,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":12,"author":{"gitId":"Anastasiia Bezruka"},"content":"    \u003cparent\u003e"},{"lineNumber":13,"author":{"gitId":"Anastasiia Bezruka"},"content":"        \u003cgroupId\u003eorg.springframework.boot\u003c/groupId\u003e"},{"lineNumber":14,"author":{"gitId":"Anastasiia Bezruka"},"content":"        \u003cartifactId\u003espring-boot-starter-parent\u003c/artifactId\u003e"},{"lineNumber":15,"author":{"gitId":"Anastasiia Bezruka"},"content":"        \u003cversion\u003e2.6.6\u003c/version\u003e"},{"lineNumber":16,"author":{"gitId":"Anastasiia Bezruka"},"content":"        \u003crelativePath/\u003e"},{"lineNumber":17,"author":{"gitId":"Anastasiia Bezruka"},"content":"    \u003c/parent\u003e"},{"lineNumber":18,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":19,"author":{"gitId":"github-classroom[bot]"},"content":"    \u003cproperties\u003e"},{"lineNumber":20,"author":{"gitId":"github-classroom[bot]"},"content":"        \u003cproject.build.sourceEncoding\u003eUTF-8\u003c/project.build.sourceEncoding\u003e"},{"lineNumber":21,"author":{"gitId":"ivanmaister7"},"content":"        \u003cjava.version\u003e1.8\u003c/java.version\u003e"},{"lineNumber":22,"author":{"gitId":"github-classroom[bot]"},"content":"        \u003cazure.functions.maven.plugin.version\u003e1.20.0\u003c/azure.functions.maven.plugin.version\u003e"},{"lineNumber":23,"author":{"gitId":"github-classroom[bot]"},"content":"        \u003cazure.functions.java.library.version\u003e2.0.1\u003c/azure.functions.java.library.version\u003e"},{"lineNumber":24,"author":{"gitId":"github-classroom[bot]"},"content":"        \u003cfunctionAppName\u003ekmaooad-functions-20220927162321908\u003c/functionAppName\u003e"},{"lineNumber":25,"author":{"gitId":"Anastasiia Bezruka"},"content":"        \u003cstart-class\u003eedu.kmaooad.Application\u003c/start-class\u003e"},{"lineNumber":26,"author":{"gitId":"github-classroom[bot]"},"content":"    \u003c/properties\u003e"},{"lineNumber":27,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":28,"author":{"gitId":"Anastasiia Bezruka"},"content":"    \u003cdependencyManagement\u003e"},{"lineNumber":29,"author":{"gitId":"github-classroom[bot]"},"content":"        \u003cdependencies\u003e"},{"lineNumber":30,"author":{"gitId":"github-classroom[bot]"},"content":"            \u003cdependency\u003e"},{"lineNumber":31,"author":{"gitId":"Anastasiia Bezruka"},"content":"                \u003cgroupId\u003eorg.springframework.cloud\u003c/groupId\u003e"},{"lineNumber":32,"author":{"gitId":"Anastasiia Bezruka"},"content":"                \u003cartifactId\u003espring-cloud-function-dependencies\u003c/artifactId\u003e"},{"lineNumber":33,"author":{"gitId":"Anastasiia Bezruka"},"content":"                \u003cversion\u003e3.2.3\u003c/version\u003e"},{"lineNumber":34,"author":{"gitId":"Anastasiia Bezruka"},"content":"                \u003ctype\u003epom\u003c/type\u003e"},{"lineNumber":35,"author":{"gitId":"Anastasiia Bezruka"},"content":"                \u003cscope\u003eimport\u003c/scope\u003e"},{"lineNumber":36,"author":{"gitId":"github-classroom[bot]"},"content":"            \u003c/dependency\u003e"},{"lineNumber":37,"author":{"gitId":"Anastasiia Bezruka"},"content":"        \u003c/dependencies\u003e"},{"lineNumber":38,"author":{"gitId":"Anastasiia Bezruka"},"content":"    \u003c/dependencyManagement\u003e"},{"lineNumber":39,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":40,"author":{"gitId":"Anastasiia Bezruka"},"content":"    \u003cdependencies\u003e"},{"lineNumber":41,"author":{"gitId":"github-classroom[bot]"},"content":"        \u003cdependency\u003e"},{"lineNumber":42,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003cgroupId\u003eorg.springframework.cloud\u003c/groupId\u003e"},{"lineNumber":43,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003cartifactId\u003espring-cloud-function-adapter-azure\u003c/artifactId\u003e"},{"lineNumber":44,"author":{"gitId":"github-classroom[bot]"},"content":"        \u003c/dependency\u003e"},{"lineNumber":45,"author":{"gitId":"ivanmaister7"},"content":"\u003c!--        \u003cdependency\u003e--\u003e"},{"lineNumber":46,"author":{"gitId":"ivanmaister7"},"content":"\u003c!--            \u003cgroupId\u003eorg.springframework.cloud\u003c/groupId\u003e--\u003e"},{"lineNumber":47,"author":{"gitId":"ivanmaister7"},"content":"\u003c!--            \u003cartifactId\u003espring-cloud-starter-function-webflux\u003c/artifactId\u003e--\u003e"},{"lineNumber":48,"author":{"gitId":"ivanmaister7"},"content":"\u003c!--            \u003cscope\u003eprovided\u003c/scope\u003e--\u003e"},{"lineNumber":49,"author":{"gitId":"ivanmaister7"},"content":"\u003c!--        \u003c/dependency\u003e--\u003e"},{"lineNumber":50,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":51,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        \u003cdependency\u003e"},{"lineNumber":52,"author":{"gitId":"Марія-Валерія Гуза"},"content":"            \u003cgroupId\u003eorg.springframework.boot\u003c/groupId\u003e"},{"lineNumber":53,"author":{"gitId":"Марія-Валерія Гуза"},"content":"            \u003cartifactId\u003espring-boot-starter-data-mongodb\u003c/artifactId\u003e"},{"lineNumber":54,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        \u003c/dependency\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"ivanmaister7"},"content":"        \u003cdependency\u003e"},{"lineNumber":57,"author":{"gitId":"ivanmaister7"},"content":"            \u003cgroupId\u003eorg.springframework.boot\u003c/groupId\u003e"},{"lineNumber":58,"author":{"gitId":"ivanmaister7"},"content":"            \u003cartifactId\u003espring-boot-starter-web\u003c/artifactId\u003e"},{"lineNumber":59,"author":{"gitId":"ivanmaister7"},"content":"        \u003c/dependency\u003e"},{"lineNumber":60,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":61,"author":{"gitId":"ivanmaister7"},"content":"        \u003cdependency\u003e"},{"lineNumber":62,"author":{"gitId":"ivanmaister7"},"content":"            \u003cgroupId\u003eorg.springframework.boot\u003c/groupId\u003e"},{"lineNumber":63,"author":{"gitId":"ivanmaister7"},"content":"            \u003cartifactId\u003espring-boot-starter-webflux\u003c/artifactId\u003e"},{"lineNumber":64,"author":{"gitId":"ivanmaister7"},"content":"        \u003c/dependency\u003e"},{"lineNumber":65,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":66,"author":{"gitId":"Anastasiia Bezruka"},"content":"        \u003cdependency\u003e"},{"lineNumber":67,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003cgroupId\u003ecom.microsoft.azure.functions\u003c/groupId\u003e"},{"lineNumber":68,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003cartifactId\u003eazure-functions-java-library\u003c/artifactId\u003e"},{"lineNumber":69,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003cversion\u003e${azure.functions.java.library.version}\u003c/version\u003e"},{"lineNumber":70,"author":{"gitId":"Anastasiia Bezruka"},"content":"        \u003c/dependency\u003e"},{"lineNumber":71,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":72,"author":{"gitId":"Anastasiia Bezruka"},"content":"        \u003c!-- Test --\u003e"},{"lineNumber":73,"author":{"gitId":"ivanmaister7"},"content":"        \u003cdependency\u003e"},{"lineNumber":74,"author":{"gitId":"ivanmaister7"},"content":"            \u003cgroupId\u003eorg.projectlombok\u003c/groupId\u003e"},{"lineNumber":75,"author":{"gitId":"ivanmaister7"},"content":"            \u003cartifactId\u003elombok\u003c/artifactId\u003e"},{"lineNumber":76,"author":{"gitId":"ivanmaister7"},"content":"            \u003cversion\u003e1.18.22\u003c/version\u003e"},{"lineNumber":77,"author":{"gitId":"ivanmaister7"},"content":"            \u003cscope\u003ecompile\u003c/scope\u003e"},{"lineNumber":78,"author":{"gitId":"ivanmaister7"},"content":"        \u003c/dependency\u003e"},{"lineNumber":79,"author":{"gitId":"ivanmaister7"},"content":"        \u003cdependency\u003e"},{"lineNumber":80,"author":{"gitId":"ivanmaister7"},"content":"            \u003cgroupId\u003ecom.fasterxml.jackson.core\u003c/groupId\u003e"},{"lineNumber":81,"author":{"gitId":"ivanmaister7"},"content":"            \u003cartifactId\u003ejackson-databind\u003c/artifactId\u003e"},{"lineNumber":82,"author":{"gitId":"ivanmaister7"},"content":"            \u003cversion\u003e2.13.3\u003c/version\u003e"},{"lineNumber":83,"author":{"gitId":"ivanmaister7"},"content":"        \u003c/dependency\u003e"},{"lineNumber":84,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        \u003cdependency\u003e"},{"lineNumber":85,"author":{"gitId":"Марія-Валерія Гуза"},"content":"            \u003cgroupId\u003eorg.mongodb\u003c/groupId\u003e"},{"lineNumber":86,"author":{"gitId":"Марія-Валерія Гуза"},"content":"            \u003cartifactId\u003emongodb-driver-sync\u003c/artifactId\u003e"},{"lineNumber":87,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003cversion\u003e4.4.2\u003c/version\u003e"},{"lineNumber":88,"author":{"gitId":"Anastasiia Bezruka"},"content":"        \u003c/dependency\u003e"},{"lineNumber":89,"author":{"gitId":"Anastasiia Bezruka"},"content":"        \u003cdependency\u003e"},{"lineNumber":90,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003cgroupId\u003eorg.springframework.boot\u003c/groupId\u003e"},{"lineNumber":91,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003cartifactId\u003espring-boot-starter-test\u003c/artifactId\u003e"},{"lineNumber":92,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003cscope\u003etest\u003c/scope\u003e"},{"lineNumber":93,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        \u003c/dependency\u003e"},{"lineNumber":94,"author":{"gitId":"yostashko"},"content":"\u003c!--        \u003cdependency\u003e--\u003e"},{"lineNumber":95,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":96,"author":{"gitId":"yostashko"},"content":"\u003c!--            \u003cgroupId\u003eorg.telegram\u003c/groupId\u003e--\u003e"},{"lineNumber":97,"author":{"gitId":"yostashko"},"content":"\u003c!--            \u003cartifactId\u003etelegrambots\u003c/artifactId\u003e--\u003e"},{"lineNumber":98,"author":{"gitId":"yostashko"},"content":"\u003c!--            \u003cversion\u003e5.6.0\u003c/version\u003e--\u003e"},{"lineNumber":99,"author":{"gitId":"yostashko"},"content":"\u003c!--            \u003cexclusions\u003e--\u003e"},{"lineNumber":100,"author":{"gitId":"yostashko"},"content":"\u003c!--                \u003cexclusion\u003e--\u003e"},{"lineNumber":101,"author":{"gitId":"yostashko"},"content":"\u003c!--                    \u003cgroupId\u003ecom.fasterxml.jackson.jaxrs\u003c/groupId\u003e--\u003e"},{"lineNumber":102,"author":{"gitId":"yostashko"},"content":"\u003c!--                    \u003cartifactId\u003ejackson-jaxrs-json-provider\u003c/artifactId\u003e--\u003e"},{"lineNumber":103,"author":{"gitId":"yostashko"},"content":"\u003c!--                \u003c/exclusion\u003e--\u003e"},{"lineNumber":104,"author":{"gitId":"yostashko"},"content":"\u003c!--                \u003cexclusion\u003e--\u003e"},{"lineNumber":105,"author":{"gitId":"yostashko"},"content":"\u003c!--                    \u003cgroupId\u003ecom.fasterxml.jackson.core\u003c/groupId\u003e--\u003e"},{"lineNumber":106,"author":{"gitId":"yostashko"},"content":"\u003c!--                    \u003cartifactId\u003ejackson-databind\u003c/artifactId\u003e--\u003e"},{"lineNumber":107,"author":{"gitId":"yostashko"},"content":"\u003c!--                \u003c/exclusion\u003e--\u003e"},{"lineNumber":108,"author":{"gitId":"yostashko"},"content":"\u003c!--                \u003cexclusion\u003e--\u003e"},{"lineNumber":109,"author":{"gitId":"yostashko"},"content":"\u003c!--                    \u003cgroupId\u003ecom.fasterxml.jackson.core\u003c/groupId\u003e--\u003e"},{"lineNumber":110,"author":{"gitId":"yostashko"},"content":"\u003c!--                    \u003cartifactId\u003ejackson-annotations\u003c/artifactId\u003e--\u003e"},{"lineNumber":111,"author":{"gitId":"yostashko"},"content":"\u003c!--                \u003c/exclusion\u003e--\u003e"},{"lineNumber":112,"author":{"gitId":"yostashko"},"content":"\u003c!--            \u003c/exclusions\u003e--\u003e"},{"lineNumber":113,"author":{"gitId":"yostashko"},"content":"\u003c!--        \u003c/dependency\u003e--\u003e"},{"lineNumber":114,"author":{"gitId":"yostashko"},"content":"        \u003cdependency\u003e"},{"lineNumber":115,"author":{"gitId":"yostashko"},"content":"            \u003cgroupId\u003ejunit\u003c/groupId\u003e"},{"lineNumber":116,"author":{"gitId":"yostashko"},"content":"            \u003cartifactId\u003ejunit\u003c/artifactId\u003e"},{"lineNumber":117,"author":{"gitId":"yostashko"},"content":"            \u003cversion\u003e4.13.2\u003c/version\u003e"},{"lineNumber":118,"author":{"gitId":"yostashko"},"content":"            \u003cscope\u003etest\u003c/scope\u003e"},{"lineNumber":119,"author":{"gitId":"yostashko"},"content":"        \u003c/dependency\u003e"},{"lineNumber":120,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        \u003cdependency\u003e"},{"lineNumber":121,"author":{"gitId":"Марія-Валерія Гуза"},"content":"            \u003cgroupId\u003ecom.sun.istack\u003c/groupId\u003e"},{"lineNumber":122,"author":{"gitId":"Марія-Валерія Гуза"},"content":"            \u003cartifactId\u003eistack-commons-runtime\u003c/artifactId\u003e"},{"lineNumber":123,"author":{"gitId":"Марія-Валерія Гуза"},"content":"            \u003cversion\u003e4.0.1\u003c/version\u003e"},{"lineNumber":124,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        \u003c/dependency\u003e"},{"lineNumber":125,"author":{"gitId":"yostashko"},"content":"\u003c!--        \u003cdependency\u003e--\u003e"},{"lineNumber":126,"author":{"gitId":"yostashko"},"content":"\u003c!--            \u003cgroupId\u003eorg.telegram\u003c/groupId\u003e--\u003e"},{"lineNumber":127,"author":{"gitId":"yostashko"},"content":"\u003c!--            \u003cartifactId\u003etelegrambots\u003c/artifactId\u003e--\u003e"},{"lineNumber":128,"author":{"gitId":"yostashko"},"content":"\u003c!--            \u003cversion\u003e5.6.0\u003c/version\u003e--\u003e"},{"lineNumber":129,"author":{"gitId":"yostashko"},"content":"\u003c!--            \u003cexclusions\u003e--\u003e"},{"lineNumber":130,"author":{"gitId":"yostashko"},"content":"\u003c!--                \u003cexclusion\u003e--\u003e"},{"lineNumber":131,"author":{"gitId":"yostashko"},"content":"\u003c!--                    \u003cgroupId\u003ecom.fasterxml.jackson.jaxrs\u003c/groupId\u003e--\u003e"},{"lineNumber":132,"author":{"gitId":"yostashko"},"content":"\u003c!--                    \u003cartifactId\u003ejackson-jaxrs-json-provider\u003c/artifactId\u003e--\u003e"},{"lineNumber":133,"author":{"gitId":"yostashko"},"content":"\u003c!--                \u003c/exclusion\u003e--\u003e"},{"lineNumber":134,"author":{"gitId":"yostashko"},"content":"\u003c!--                \u003cexclusion\u003e--\u003e"},{"lineNumber":135,"author":{"gitId":"yostashko"},"content":"\u003c!--                    \u003cgroupId\u003ecom.fasterxml.jackson.core\u003c/groupId\u003e--\u003e"},{"lineNumber":136,"author":{"gitId":"yostashko"},"content":"\u003c!--                    \u003cartifactId\u003ejackson-databind\u003c/artifactId\u003e--\u003e"},{"lineNumber":137,"author":{"gitId":"yostashko"},"content":"\u003c!--                \u003c/exclusion\u003e--\u003e"},{"lineNumber":138,"author":{"gitId":"yostashko"},"content":"\u003c!--                \u003cexclusion\u003e--\u003e"},{"lineNumber":139,"author":{"gitId":"yostashko"},"content":"\u003c!--                    \u003cgroupId\u003ecom.fasterxml.jackson.core\u003c/groupId\u003e--\u003e"},{"lineNumber":140,"author":{"gitId":"yostashko"},"content":"\u003c!--                    \u003cartifactId\u003ejackson-annotations\u003c/artifactId\u003e--\u003e"},{"lineNumber":141,"author":{"gitId":"yostashko"},"content":"\u003c!--                \u003c/exclusion\u003e--\u003e"},{"lineNumber":142,"author":{"gitId":"yostashko"},"content":"\u003c!--            \u003c/exclusions\u003e--\u003e"},{"lineNumber":143,"author":{"gitId":"yostashko"},"content":"\u003c!--        \u003c/dependency\u003e--\u003e"},{"lineNumber":144,"author":{"gitId":"yostashko"},"content":"        \u003cdependency\u003e"},{"lineNumber":145,"author":{"gitId":"yostashko"},"content":"            \u003cgroupId\u003ejunit\u003c/groupId\u003e"},{"lineNumber":146,"author":{"gitId":"yostashko"},"content":"            \u003cartifactId\u003ejunit\u003c/artifactId\u003e"},{"lineNumber":147,"author":{"gitId":"yostashko"},"content":"            \u003cversion\u003e4.13.2\u003c/version\u003e"},{"lineNumber":148,"author":{"gitId":"yostashko"},"content":"            \u003cscope\u003etest\u003c/scope\u003e"},{"lineNumber":149,"author":{"gitId":"yostashko"},"content":"        \u003c/dependency\u003e"},{"lineNumber":150,"author":{"gitId":"yostashko"},"content":"        \u003cdependency\u003e"},{"lineNumber":151,"author":{"gitId":"yostashko"},"content":"            \u003cgroupId\u003ecom.sun.istack\u003c/groupId\u003e"},{"lineNumber":152,"author":{"gitId":"yostashko"},"content":"            \u003cartifactId\u003eistack-commons-runtime\u003c/artifactId\u003e"},{"lineNumber":153,"author":{"gitId":"yostashko"},"content":"            \u003cversion\u003e4.0.1\u003c/version\u003e"},{"lineNumber":154,"author":{"gitId":"yostashko"},"content":"        \u003c/dependency\u003e"},{"lineNumber":155,"author":{"gitId":"Anastasiia Bezruka"},"content":"        \u003cdependency\u003e"},{"lineNumber":156,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003cgroupId\u003ede.flapdoodle.embed\u003c/groupId\u003e"},{"lineNumber":157,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003cartifactId\u003ede.flapdoodle.embed.mongo\u003c/artifactId\u003e"},{"lineNumber":158,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003cscope\u003etest\u003c/scope\u003e"},{"lineNumber":159,"author":{"gitId":"Anastasiia Bezruka"},"content":"        \u003c/dependency\u003e"},{"lineNumber":160,"author":{"gitId":"github-classroom[bot]"},"content":"    \u003c/dependencies\u003e"},{"lineNumber":161,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":162,"author":{"gitId":"github-classroom[bot]"},"content":"    \u003cbuild\u003e"},{"lineNumber":163,"author":{"gitId":"github-classroom[bot]"},"content":"        \u003cplugins\u003e"},{"lineNumber":164,"author":{"gitId":"github-classroom[bot]"},"content":"            \u003cplugin\u003e"},{"lineNumber":165,"author":{"gitId":"github-classroom[bot]"},"content":"                \u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e"},{"lineNumber":166,"author":{"gitId":"github-classroom[bot]"},"content":"                \u003cartifactId\u003emaven-compiler-plugin\u003c/artifactId\u003e"},{"lineNumber":167,"author":{"gitId":"github-classroom[bot]"},"content":"                \u003cversion\u003e3.8.1\u003c/version\u003e"},{"lineNumber":168,"author":{"gitId":"github-classroom[bot]"},"content":"                \u003cconfiguration\u003e"},{"lineNumber":169,"author":{"gitId":"ivanmaister7"},"content":"                    \u003csource\u003e9\u003c/source\u003e"},{"lineNumber":170,"author":{"gitId":"ivanmaister7"},"content":"                    \u003ctarget\u003e9\u003c/target\u003e"},{"lineNumber":171,"author":{"gitId":"github-classroom[bot]"},"content":"                    \u003cencoding\u003e${project.build.sourceEncoding}\u003c/encoding\u003e"},{"lineNumber":172,"author":{"gitId":"github-classroom[bot]"},"content":"                \u003c/configuration\u003e"},{"lineNumber":173,"author":{"gitId":"github-classroom[bot]"},"content":"            \u003c/plugin\u003e"},{"lineNumber":174,"author":{"gitId":"github-classroom[bot]"},"content":"            \u003cplugin\u003e"},{"lineNumber":175,"author":{"gitId":"github-classroom[bot]"},"content":"                \u003cgroupId\u003ecom.microsoft.azure\u003c/groupId\u003e"},{"lineNumber":176,"author":{"gitId":"github-classroom[bot]"},"content":"                \u003cartifactId\u003eazure-functions-maven-plugin\u003c/artifactId\u003e"},{"lineNumber":177,"author":{"gitId":"github-classroom[bot]"},"content":"                \u003cversion\u003e${azure.functions.maven.plugin.version}\u003c/version\u003e"},{"lineNumber":178,"author":{"gitId":"github-classroom[bot]"},"content":"                \u003cconfiguration\u003e"},{"lineNumber":179,"author":{"gitId":"github-classroom[bot]"},"content":"                    \u003c!-- function app name --\u003e"},{"lineNumber":180,"author":{"gitId":"github-classroom[bot]"},"content":"                    \u003cappName\u003e${functionAppName}\u003c/appName\u003e"},{"lineNumber":181,"author":{"gitId":"github-classroom[bot]"},"content":"                    \u003c!-- function app resource group --\u003e"},{"lineNumber":182,"author":{"gitId":"github-classroom[bot]"},"content":"                    \u003cresourceGroup\u003ejava-functions-group\u003c/resourceGroup\u003e"},{"lineNumber":183,"author":{"gitId":"github-classroom[bot]"},"content":"                    \u003c!-- function app service plan name --\u003e"},{"lineNumber":184,"author":{"gitId":"github-classroom[bot]"},"content":"                    \u003cappServicePlanName\u003ejava-functions-app-service-plan\u003c/appServicePlanName\u003e"},{"lineNumber":185,"author":{"gitId":"github-classroom[bot]"},"content":"                    \u003c!-- function app region--\u003e"},{"lineNumber":186,"author":{"gitId":"github-classroom[bot]"},"content":"                    \u003c!-- refers https://github.com/microsoft/azure-maven-plugins/wiki/Azure-Functions:-Configuration-Details#supported-regions for all valid values --\u003e"},{"lineNumber":187,"author":{"gitId":"github-classroom[bot]"},"content":"                    \u003cregion\u003ewestus\u003c/region\u003e"},{"lineNumber":188,"author":{"gitId":"github-classroom[bot]"},"content":"                    \u003c!-- function pricingTier, default to be consumption if not specified --\u003e"},{"lineNumber":189,"author":{"gitId":"github-classroom[bot]"},"content":"                    \u003c!-- refers https://github.com/microsoft/azure-maven-plugins/wiki/Azure-Functions:-Configuration-Details#supported-pricing-tiers for all valid values --\u003e"},{"lineNumber":190,"author":{"gitId":"github-classroom[bot]"},"content":"                    \u003c!-- \u003cpricingTier\u003e\u003c/pricingTier\u003e --\u003e"},{"lineNumber":191,"author":{"gitId":"github-classroom[bot]"},"content":"                    \u003c!-- Whether to disable application insights, default is false --\u003e"},{"lineNumber":192,"author":{"gitId":"github-classroom[bot]"},"content":"                    \u003c!-- refers https://github.com/microsoft/azure-maven-plugins/wiki/Azure-Functions:-Configuration-Details for all valid configurations for application insights--\u003e"},{"lineNumber":193,"author":{"gitId":"github-classroom[bot]"},"content":"                    \u003c!-- \u003cdisableAppInsights\u003e\u003c/disableAppInsights\u003e --\u003e"},{"lineNumber":194,"author":{"gitId":"github-classroom[bot]"},"content":"                    \u003cruntime\u003e"},{"lineNumber":195,"author":{"gitId":"github-classroom[bot]"},"content":"                        \u003c!-- runtime os, could be windows, linux or docker--\u003e"},{"lineNumber":196,"author":{"gitId":"github-classroom[bot]"},"content":"                        \u003cos\u003ewindows\u003c/os\u003e"},{"lineNumber":197,"author":{"gitId":"ivanmaister7"},"content":"                        \u003cjavaVersion\u003e8\u003c/javaVersion\u003e"},{"lineNumber":198,"author":{"gitId":"github-classroom[bot]"},"content":"                    \u003c/runtime\u003e"},{"lineNumber":199,"author":{"gitId":"github-classroom[bot]"},"content":"                    \u003cappSettings\u003e"},{"lineNumber":200,"author":{"gitId":"github-classroom[bot]"},"content":"                        \u003cproperty\u003e"},{"lineNumber":201,"author":{"gitId":"github-classroom[bot]"},"content":"                            \u003cname\u003eFUNCTIONS_EXTENSION_VERSION\u003c/name\u003e"},{"lineNumber":202,"author":{"gitId":"github-classroom[bot]"},"content":"                            \u003cvalue\u003e~4\u003c/value\u003e"},{"lineNumber":203,"author":{"gitId":"github-classroom[bot]"},"content":"                        \u003c/property\u003e"},{"lineNumber":204,"author":{"gitId":"github-classroom[bot]"},"content":"                    \u003c/appSettings\u003e"},{"lineNumber":205,"author":{"gitId":"github-classroom[bot]"},"content":"                \u003c/configuration\u003e"},{"lineNumber":206,"author":{"gitId":"github-classroom[bot]"},"content":"                \u003cexecutions\u003e"},{"lineNumber":207,"author":{"gitId":"github-classroom[bot]"},"content":"                    \u003cexecution\u003e"},{"lineNumber":208,"author":{"gitId":"github-classroom[bot]"},"content":"                        \u003cid\u003epackage-functions\u003c/id\u003e"},{"lineNumber":209,"author":{"gitId":"github-classroom[bot]"},"content":"                        \u003cgoals\u003e"},{"lineNumber":210,"author":{"gitId":"github-classroom[bot]"},"content":"                            \u003cgoal\u003epackage\u003c/goal\u003e"},{"lineNumber":211,"author":{"gitId":"github-classroom[bot]"},"content":"                        \u003c/goals\u003e"},{"lineNumber":212,"author":{"gitId":"github-classroom[bot]"},"content":"                    \u003c/execution\u003e"},{"lineNumber":213,"author":{"gitId":"github-classroom[bot]"},"content":"                \u003c/executions\u003e"},{"lineNumber":214,"author":{"gitId":"github-classroom[bot]"},"content":"            \u003c/plugin\u003e"},{"lineNumber":215,"author":{"gitId":"Anton Shabinskiy"},"content":"            \u003cplugin\u003e"},{"lineNumber":216,"author":{"gitId":"Anton Shabinskiy"},"content":"\t\t\t\t\u003cgroupId\u003eorg.jacoco\u003c/groupId\u003e"},{"lineNumber":217,"author":{"gitId":"Anton Shabinskiy"},"content":"\t\t\t\t\u003cartifactId\u003ejacoco-maven-plugin\u003c/artifactId\u003e"},{"lineNumber":218,"author":{"gitId":"ivanmaister7"},"content":"\t\t\t\t\u003cversion\u003e0.8.4\u003c/version\u003e"},{"lineNumber":219,"author":{"gitId":"Anastasiia Bezruka"},"content":"                \u003cconfiguration\u003e"},{"lineNumber":220,"author":{"gitId":"Anastasiia Bezruka"},"content":"                    \u003cexcludes\u003e"},{"lineNumber":221,"author":{"gitId":"Anastasiia Bezruka"},"content":"                        \u003cexclude\u003e**/Constants.class\u003c/exclude\u003e"},{"lineNumber":222,"author":{"gitId":"Anastasiia Bezruka"},"content":"                    \u003c/excludes\u003e"},{"lineNumber":223,"author":{"gitId":"Anastasiia Bezruka"},"content":"                \u003c/configuration\u003e"},{"lineNumber":224,"author":{"gitId":"Anton Shabinskiy"},"content":"\t\t\t\t\u003cexecutions\u003e"},{"lineNumber":225,"author":{"gitId":"Anton Shabinskiy"},"content":"\t\t\t\t\t\u003cexecution\u003e"},{"lineNumber":226,"author":{"gitId":"Anton Shabinskiy"},"content":"\t\t\t\t\t\t\u003cid\u003eprepare-agent\u003c/id\u003e"},{"lineNumber":227,"author":{"gitId":"Anton Shabinskiy"},"content":"\t\t\t\t\t\t\u003cgoals\u003e"},{"lineNumber":228,"author":{"gitId":"Anton Shabinskiy"},"content":"\t\t\t\t\t\t\t\u003cgoal\u003eprepare-agent\u003c/goal\u003e"},{"lineNumber":229,"author":{"gitId":"Anton Shabinskiy"},"content":"\t\t\t\t\t\t\u003c/goals\u003e"},{"lineNumber":230,"author":{"gitId":"Anton Shabinskiy"},"content":"\t\t\t\t\t\u003c/execution\u003e"},{"lineNumber":231,"author":{"gitId":"Anton Shabinskiy"},"content":"\t\t\t\t\t\u003cexecution\u003e"},{"lineNumber":232,"author":{"gitId":"Anton Shabinskiy"},"content":"\t\t\t\t\t\t\u003cid\u003ereport\u003c/id\u003e"},{"lineNumber":233,"author":{"gitId":"Anton Shabinskiy"},"content":"\t\t\t\t\t\t\u003cphase\u003etest\u003c/phase\u003e"},{"lineNumber":234,"author":{"gitId":"Anton Shabinskiy"},"content":"\t\t\t\t\t\t\u003cgoals\u003e"},{"lineNumber":235,"author":{"gitId":"Anton Shabinskiy"},"content":"\t\t\t\t\t\t\t\u003cgoal\u003ereport\u003c/goal\u003e"},{"lineNumber":236,"author":{"gitId":"Anton Shabinskiy"},"content":"\t\t\t\t\t\t\u003c/goals\u003e"},{"lineNumber":237,"author":{"gitId":"Anton Shabinskiy"},"content":"\t\t\t\t\t\u003c/execution\u003e"},{"lineNumber":238,"author":{"gitId":"Anton Shabinskiy"},"content":"\t\t\t\t\u003c/executions\u003e"},{"lineNumber":239,"author":{"gitId":"Anton Shabinskiy"},"content":"\t\t\t\u003c/plugin\u003e"},{"lineNumber":240,"author":{"gitId":"Anton Shabinskiy"},"content":"            \u003cplugin\u003e"},{"lineNumber":241,"author":{"gitId":"Anton Shabinskiy"},"content":"                \u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e"},{"lineNumber":242,"author":{"gitId":"Anton Shabinskiy"},"content":"                \u003cartifactId\u003emaven-surefire-plugin\u003c/artifactId\u003e"},{"lineNumber":243,"author":{"gitId":"Anton Shabinskiy"},"content":"                \u003cversion\u003e3.0.0-M7\u003c/version\u003e"},{"lineNumber":244,"author":{"gitId":"Anton Shabinskiy"},"content":"                \u003cconfiguration\u003e"},{"lineNumber":245,"author":{"gitId":"Anton Shabinskiy"},"content":"                    \u003cfailIfNoTests\u003etrue\u003c/failIfNoTests\u003e"},{"lineNumber":246,"author":{"gitId":"Anton Shabinskiy"},"content":"                \u003c/configuration\u003e"},{"lineNumber":247,"author":{"gitId":"Anton Shabinskiy"},"content":"            \u003c/plugin\u003e"},{"lineNumber":248,"author":{"gitId":"github-classroom[bot]"},"content":"            \u003c!--Remove obj folder generated by .NET SDK in maven clean--\u003e"},{"lineNumber":249,"author":{"gitId":"github-classroom[bot]"},"content":"            \u003cplugin\u003e"},{"lineNumber":250,"author":{"gitId":"github-classroom[bot]"},"content":"                \u003cartifactId\u003emaven-clean-plugin\u003c/artifactId\u003e"},{"lineNumber":251,"author":{"gitId":"Марія-Валерія Гуза"},"content":"                \u003cversion\u003e3.2.0\u003c/version\u003e"},{"lineNumber":252,"author":{"gitId":"github-classroom[bot]"},"content":"                \u003cconfiguration\u003e"},{"lineNumber":253,"author":{"gitId":"github-classroom[bot]"},"content":"                    \u003cfilesets\u003e"},{"lineNumber":254,"author":{"gitId":"github-classroom[bot]"},"content":"                        \u003cfileset\u003e"},{"lineNumber":255,"author":{"gitId":"github-classroom[bot]"},"content":"                            \u003cdirectory\u003eobj\u003c/directory\u003e"},{"lineNumber":256,"author":{"gitId":"github-classroom[bot]"},"content":"                        \u003c/fileset\u003e"},{"lineNumber":257,"author":{"gitId":"github-classroom[bot]"},"content":"                    \u003c/filesets\u003e"},{"lineNumber":258,"author":{"gitId":"github-classroom[bot]"},"content":"                \u003c/configuration\u003e"},{"lineNumber":259,"author":{"gitId":"github-classroom[bot]"},"content":"            \u003c/plugin\u003e"},{"lineNumber":260,"author":{"gitId":"github-classroom[bot]"},"content":"        \u003c/plugins\u003e"},{"lineNumber":261,"author":{"gitId":"github-classroom[bot]"},"content":"    \u003c/build\u003e"},{"lineNumber":262,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":263,"author":{"gitId":"Anastasiia Bezruka"},"content":"    \u003crepositories\u003e"},{"lineNumber":264,"author":{"gitId":"Anastasiia Bezruka"},"content":"        \u003crepository\u003e"},{"lineNumber":265,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003cid\u003espring-snapshots\u003c/id\u003e"},{"lineNumber":266,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003cname\u003eSpring Snapshots\u003c/name\u003e"},{"lineNumber":267,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003curl\u003ehttps://repo.spring.io/libs-snapshot-local\u003c/url\u003e"},{"lineNumber":268,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003csnapshots\u003e"},{"lineNumber":269,"author":{"gitId":"Anastasiia Bezruka"},"content":"                \u003cenabled\u003etrue\u003c/enabled\u003e"},{"lineNumber":270,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003c/snapshots\u003e"},{"lineNumber":271,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003creleases\u003e"},{"lineNumber":272,"author":{"gitId":"Anastasiia Bezruka"},"content":"                \u003cenabled\u003efalse\u003c/enabled\u003e"},{"lineNumber":273,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003c/releases\u003e"},{"lineNumber":274,"author":{"gitId":"Anastasiia Bezruka"},"content":"        \u003c/repository\u003e"},{"lineNumber":275,"author":{"gitId":"Anastasiia Bezruka"},"content":"        \u003crepository\u003e"},{"lineNumber":276,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003cid\u003espring-milestones\u003c/id\u003e"},{"lineNumber":277,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003cname\u003eSpring Milestones\u003c/name\u003e"},{"lineNumber":278,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003curl\u003ehttps://repo.spring.io/libs-milestone-local\u003c/url\u003e"},{"lineNumber":279,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003csnapshots\u003e"},{"lineNumber":280,"author":{"gitId":"Anastasiia Bezruka"},"content":"                \u003cenabled\u003efalse\u003c/enabled\u003e"},{"lineNumber":281,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003c/snapshots\u003e"},{"lineNumber":282,"author":{"gitId":"Anastasiia Bezruka"},"content":"        \u003c/repository\u003e"},{"lineNumber":283,"author":{"gitId":"Anastasiia Bezruka"},"content":"        \u003crepository\u003e"},{"lineNumber":284,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003cid\u003espring-releases\u003c/id\u003e"},{"lineNumber":285,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003cname\u003eSpring Releases\u003c/name\u003e"},{"lineNumber":286,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003curl\u003ehttps://repo.spring.io/release\u003c/url\u003e"},{"lineNumber":287,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003csnapshots\u003e"},{"lineNumber":288,"author":{"gitId":"Anastasiia Bezruka"},"content":"                \u003cenabled\u003efalse\u003c/enabled\u003e"},{"lineNumber":289,"author":{"gitId":"Anastasiia Bezruka"},"content":"            \u003c/snapshots\u003e"},{"lineNumber":290,"author":{"gitId":"Anastasiia Bezruka"},"content":"        \u003c/repository\u003e"},{"lineNumber":291,"author":{"gitId":"Anastasiia Bezruka"},"content":"    \u003c/repositories\u003e"},{"lineNumber":292,"author":{"gitId":"github-classroom[bot]"},"content":"\u003c/project\u003e"}],"authorContributionMap":{"yostashko":56,"Марія-Валерія Гуза":16,"ivanmaister7":30,"Anton Shabinskiy":27,"github-classroom[bot]":90,"-":1,"Anastasiia Bezruka":72}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/Application.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anastasiia Bezruka"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":3,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.boot.SpringApplication;"},{"lineNumber":4,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.boot.autoconfigure.SpringBootApplication;"},{"lineNumber":5,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.data.mongodb.repository.config.EnableMongoRepositories;"},{"lineNumber":6,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":7,"author":{"gitId":"Anastasiia Bezruka"},"content":"@SpringBootApplication"},{"lineNumber":8,"author":{"gitId":"Anastasiia Bezruka"},"content":"@EnableMongoRepositories"},{"lineNumber":9,"author":{"gitId":"Anastasiia Bezruka"},"content":"public class Application {"},{"lineNumber":10,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public static void main(String[] args) {"},{"lineNumber":11,"author":{"gitId":"Anastasiia Bezruka"},"content":"        SpringApplication.run(Application.class, args);"},{"lineNumber":12,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Anastasiia Bezruka"},"content":"}"}],"authorContributionMap":{"Anastasiia Bezruka":13}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/BotFunction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anastasiia Bezruka"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":3,"author":{"gitId":"Anastasiia Bezruka"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;"},{"lineNumber":4,"author":{"gitId":"Anastasiia Bezruka"},"content":"import com.microsoft.azure.functions.*;"},{"lineNumber":5,"author":{"gitId":"Anastasiia Bezruka"},"content":"import com.microsoft.azure.functions.annotation.AuthorizationLevel;"},{"lineNumber":6,"author":{"gitId":"Anastasiia Bezruka"},"content":"import com.microsoft.azure.functions.annotation.FunctionName;"},{"lineNumber":7,"author":{"gitId":"Anastasiia Bezruka"},"content":"import com.microsoft.azure.functions.annotation.HttpTrigger;"},{"lineNumber":8,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.cloud.function.adapter.azure.FunctionInvoker;"},{"lineNumber":9,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":10,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.Optional;"},{"lineNumber":11,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":12,"author":{"gitId":"Anastasiia Bezruka"},"content":"import static edu.kmaooad.Constants.APPLICATION_OBJECT_MAPPER;"},{"lineNumber":13,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":14,"author":{"gitId":"Anastasiia Bezruka"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"Anastasiia Bezruka"},"content":" * Azure Functions with HTTP Trigger."},{"lineNumber":16,"author":{"gitId":"Anastasiia Bezruka"},"content":" */"},{"lineNumber":17,"author":{"gitId":"Anastasiia Bezruka"},"content":"public class BotFunction extends FunctionInvoker\u003cBotRequest, BotResponse\u003e {"},{"lineNumber":18,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":19,"author":{"gitId":"Anastasiia Bezruka"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Anastasiia Bezruka"},"content":"     * This function listens at endpoint \"/api/TelegramWebhook\". To invoke it using \"curl\" command in bash:"},{"lineNumber":21,"author":{"gitId":"Anastasiia Bezruka"},"content":"     * curl -d \"HTTP Body\" {your host}/api/TelegramWebhook"},{"lineNumber":22,"author":{"gitId":"Anastasiia Bezruka"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @FunctionName(\"TelegramWebhook\")"},{"lineNumber":24,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public HttpResponseMessage run("},{"lineNumber":25,"author":{"gitId":"Anastasiia Bezruka"},"content":"            @HttpTrigger("},{"lineNumber":26,"author":{"gitId":"Anastasiia Bezruka"},"content":"                    name \u003d \"req\","},{"lineNumber":27,"author":{"gitId":"Anastasiia Bezruka"},"content":"                    methods \u003d {HttpMethod.POST},"},{"lineNumber":28,"author":{"gitId":"Anastasiia Bezruka"},"content":"                    authLevel \u003d AuthorizationLevel.FUNCTION)"},{"lineNumber":29,"author":{"gitId":"Anastasiia Bezruka"},"content":"                    HttpRequestMessage\u003cOptional\u003cString\u003e\u003e request,"},{"lineNumber":30,"author":{"gitId":"Anastasiia Bezruka"},"content":"            final ExecutionContext context) {"},{"lineNumber":31,"author":{"gitId":"Anastasiia Bezruka"},"content":"        context.getLogger().info(\"Java HTTP trigger processed a request.\");"},{"lineNumber":32,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":33,"author":{"gitId":"Anastasiia Bezruka"},"content":"        final String body \u003d request.getBody().orElse(null);"},{"lineNumber":34,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":35,"author":{"gitId":"Anastasiia Bezruka"},"content":"        //Doesn\u0027t work with Spring, have to add ExceptionHandler probably"},{"lineNumber":36,"author":{"gitId":"Anastasiia Bezruka"},"content":"//        if (body \u003d\u003d null) {"},{"lineNumber":37,"author":{"gitId":"Anastasiia Bezruka"},"content":"//            return request.createResponseBuilder(HttpStatus.BAD_REQUEST).body(BAD_RESPONSE_BODY).build();"},{"lineNumber":38,"author":{"gitId":"Anastasiia Bezruka"},"content":"//        }"},{"lineNumber":39,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":40,"author":{"gitId":"Anastasiia Bezruka"},"content":"        BotRequest botRequest \u003d new BotRequestMapper(APPLICATION_OBJECT_MAPPER).mapFrom(body);"},{"lineNumber":41,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":42,"author":{"gitId":"Anastasiia Bezruka"},"content":"        return request.createResponseBuilder(HttpStatus.OK)"},{"lineNumber":43,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .body(handleRequest(botRequest, context))"},{"lineNumber":44,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .build();"},{"lineNumber":45,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":46,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Anastasiia Bezruka"},"content":"}"}],"authorContributionMap":{"ivanmaister7":1,"Anastasiia Bezruka":46}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/BotRequest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanmaister7"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanmaister7"},"content":"import lombok.AllArgsConstructor;"},{"lineNumber":4,"author":{"gitId":"ivanmaister7"},"content":"import lombok.Data;"},{"lineNumber":5,"author":{"gitId":"ivanmaister7"},"content":"import lombok.NoArgsConstructor;"},{"lineNumber":6,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":7,"author":{"gitId":"ivanmaister7"},"content":"@Data"},{"lineNumber":8,"author":{"gitId":"ivanmaister7"},"content":"@AllArgsConstructor"},{"lineNumber":9,"author":{"gitId":"ivanmaister7"},"content":"@NoArgsConstructor"},{"lineNumber":10,"author":{"gitId":"ivanmaister7"},"content":"public class BotRequest {"},{"lineNumber":11,"author":{"gitId":"ivanmaister7"},"content":"    private long update_id;"},{"lineNumber":12,"author":{"gitId":"ivanmaister7"},"content":"    private Message message;"},{"lineNumber":13,"author":{"gitId":"ivanmaister7"},"content":"}"}],"authorContributionMap":{"ivanmaister7":13}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/BotRequestMapper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanmaister7"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanmaister7"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;"},{"lineNumber":4,"author":{"gitId":"ivanmaister7"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;"},{"lineNumber":5,"author":{"gitId":"ivanmaister7"},"content":"import lombok.SneakyThrows;"},{"lineNumber":6,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":7,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":8,"author":{"gitId":"Anastasiia Bezruka"},"content":"@Component"},{"lineNumber":9,"author":{"gitId":"ivanmaister7"},"content":"public class BotRequestMapper {"},{"lineNumber":10,"author":{"gitId":"ivanmaister7"},"content":"    ObjectMapper objectMapper;"},{"lineNumber":11,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":12,"author":{"gitId":"ivanmaister7"},"content":"    public BotRequestMapper(ObjectMapper objectMapper) {"},{"lineNumber":13,"author":{"gitId":"ivanmaister7"},"content":"        this.objectMapper \u003d objectMapper;"},{"lineNumber":14,"author":{"gitId":"ivanmaister7"},"content":"        objectMapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);"},{"lineNumber":15,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":17,"author":{"gitId":"ivanmaister7"},"content":"    @SneakyThrows"},{"lineNumber":18,"author":{"gitId":"ivanmaister7"},"content":"    public BotRequest mapFrom (String json) {"},{"lineNumber":19,"author":{"gitId":"ivanmaister7"},"content":"        return objectMapper.readValue(json, BotRequest.class);"},{"lineNumber":20,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":22,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @SneakyThrows"},{"lineNumber":23,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public String deserialize(BotRequest request) {"},{"lineNumber":24,"author":{"gitId":"Anastasiia Bezruka"},"content":"        return objectMapper.writeValueAsString(request);"},{"lineNumber":25,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":27,"author":{"gitId":"ivanmaister7"},"content":"}"}],"authorContributionMap":{"ivanmaister7":20,"Anastasiia Bezruka":7}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/BotResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anastasiia Bezruka"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":3,"author":{"gitId":"Anastasiia Bezruka"},"content":"import com.fasterxml.jackson.annotation.JsonInclude;"},{"lineNumber":4,"author":{"gitId":"Anastasiia Bezruka"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;"},{"lineNumber":5,"author":{"gitId":"Anastasiia Bezruka"},"content":"import lombok.*;"},{"lineNumber":6,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":7,"author":{"gitId":"ivanmaister7"},"content":"@Data"},{"lineNumber":8,"author":{"gitId":"Anastasiia Bezruka"},"content":"@JsonInclude(JsonInclude.Include.NON_NULL)"},{"lineNumber":9,"author":{"gitId":"Anastasiia Bezruka"},"content":"public class BotResponse {"},{"lineNumber":10,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @JsonProperty(\"message_id\")"},{"lineNumber":11,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private long messageId;"},{"lineNumber":12,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":13,"author":{"gitId":"ivanmaister7"},"content":"    public BotResponse(long messageId) {"},{"lineNumber":14,"author":{"gitId":"ivanmaister7"},"content":"        this.messageId \u003d messageId;"},{"lineNumber":15,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Anastasiia Bezruka"},"content":"}"}],"authorContributionMap":{"ivanmaister7":3,"Anastasiia Bezruka":13}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/Constants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anastasiia Bezruka"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":3,"author":{"gitId":"Anastasiia Bezruka"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;"},{"lineNumber":4,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":5,"author":{"gitId":"Anastasiia Bezruka"},"content":"public class Constants {"},{"lineNumber":6,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":7,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private Constants() {}"},{"lineNumber":8,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":9,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public static final String BAD_RESPONSE_BODY \u003d \"Request body error. Please fix your request body\";"},{"lineNumber":10,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":11,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public static final ObjectMapper APPLICATION_OBJECT_MAPPER \u003d new ObjectMapper();"},{"lineNumber":12,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":13,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public static final String REQUEST_WITHOUT_MESSAGE_ID \u003d \"Illegal request, message_id not present\";"},{"lineNumber":14,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":15,"author":{"gitId":"Anastasiia Bezruka"},"content":"}"}],"authorContributionMap":{"Anastasiia Bezruka":15}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/DTO/ProjectDTO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anastasiia Bezruka"},"content":"package edu.kmaooad.DTO;"},{"lineNumber":2,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanmaister7"},"content":"import lombok.*;"},{"lineNumber":4,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":5,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.Set;"},{"lineNumber":6,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":7,"author":{"gitId":"Anastasiia Bezruka"},"content":"@Getter"},{"lineNumber":8,"author":{"gitId":"Anastasiia Bezruka"},"content":"@Setter"},{"lineNumber":9,"author":{"gitId":"Anastasiia Bezruka"},"content":"@AllArgsConstructor"},{"lineNumber":10,"author":{"gitId":"ivanmaister7"},"content":"@EqualsAndHashCode"},{"lineNumber":11,"author":{"gitId":"Anastasiia Bezruka"},"content":"public class ProjectDTO {"},{"lineNumber":12,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private String projectId;"},{"lineNumber":13,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private String projectTitle;"},{"lineNumber":14,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private String projectDescription;"},{"lineNumber":15,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private Set\u003cString\u003e topicIds;"},{"lineNumber":16,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private Set\u003cString\u003e skillIds;"},{"lineNumber":17,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private Set\u003cString\u003e skillSetIds;"},{"lineNumber":18,"author":{"gitId":"Anastasiia Bezruka"},"content":"}"}],"authorContributionMap":{"ivanmaister7":2,"Anastasiia Bezruka":16}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/DTO/SkillDTO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OleksandRomaniuk"},"content":"package edu.kmaooad.DTO;"},{"lineNumber":2,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":3,"author":{"gitId":"OleksandRomaniuk"},"content":"import lombok.*;"},{"lineNumber":4,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":5,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":6,"author":{"gitId":"OleksandRomaniuk"},"content":"@Getter"},{"lineNumber":7,"author":{"gitId":"OleksandRomaniuk"},"content":"@Setter"},{"lineNumber":8,"author":{"gitId":"ivanmaister7"},"content":"@AllArgsConstructor"},{"lineNumber":9,"author":{"gitId":"ivanmaister7"},"content":"@EqualsAndHashCode"},{"lineNumber":10,"author":{"gitId":"OleksandRomaniuk"},"content":"public class SkillDTO {"},{"lineNumber":11,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":12,"author":{"gitId":"OleksandRomaniuk"},"content":"    private String skillId;"},{"lineNumber":13,"author":{"gitId":"OleksandRomaniuk"},"content":"    private String skillName;"},{"lineNumber":14,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":15,"author":{"gitId":"OleksandRomaniuk"},"content":"    private String parentSkillID;"},{"lineNumber":16,"author":{"gitId":"OleksandRomaniuk"},"content":"    public SkillDTO(String skillID){"},{"lineNumber":17,"author":{"gitId":"OleksandRomaniuk"},"content":"        this.skillName \u003d skillName;"},{"lineNumber":18,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":20,"author":{"gitId":"OleksandRomaniuk"},"content":"}"}],"authorContributionMap":{"ivanmaister7":2,"OleksandRomaniuk":18}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/DTO/SkillSetDTO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anastasiia Bezruka"},"content":"package edu.kmaooad.DTO;"},{"lineNumber":2,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":3,"author":{"gitId":"Anastasiia Bezruka"},"content":"import lombok.AllArgsConstructor;"},{"lineNumber":4,"author":{"gitId":"ivanmaister7"},"content":"import lombok.EqualsAndHashCode;"},{"lineNumber":5,"author":{"gitId":"Anastasiia Bezruka"},"content":"import lombok.Getter;"},{"lineNumber":6,"author":{"gitId":"Anastasiia Bezruka"},"content":"import lombok.Setter;"},{"lineNumber":7,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":8,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.Set;"},{"lineNumber":9,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":10,"author":{"gitId":"Anastasiia Bezruka"},"content":"@Getter"},{"lineNumber":11,"author":{"gitId":"Anastasiia Bezruka"},"content":"@AllArgsConstructor"},{"lineNumber":12,"author":{"gitId":"ivanmaister7"},"content":"@EqualsAndHashCode"},{"lineNumber":13,"author":{"gitId":"Anastasiia Bezruka"},"content":"public class SkillSetDTO {"},{"lineNumber":14,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private String skillSetId;"},{"lineNumber":15,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private String skillSetName;"},{"lineNumber":16,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private Set\u003cString\u003e skillIds;"},{"lineNumber":17,"author":{"gitId":"Anastasiia Bezruka"},"content":"}"}],"authorContributionMap":{"ivanmaister7":2,"Anastasiia Bezruka":15}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/DTO/TopicDTO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OleksandRomaniuk"},"content":"package edu.kmaooad.DTO;"},{"lineNumber":2,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanmaister7"},"content":"import lombok.AllArgsConstructor;"},{"lineNumber":4,"author":{"gitId":"ivanmaister7"},"content":"import lombok.EqualsAndHashCode;"},{"lineNumber":5,"author":{"gitId":"ivanmaister7"},"content":"import lombok.Getter;"},{"lineNumber":6,"author":{"gitId":"ivanmaister7"},"content":"import lombok.Setter;"},{"lineNumber":7,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":8,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":9,"author":{"gitId":"OleksandRomaniuk"},"content":"@Getter"},{"lineNumber":10,"author":{"gitId":"OleksandRomaniuk"},"content":"@Setter"},{"lineNumber":11,"author":{"gitId":"OleksandRomaniuk"},"content":"@AllArgsConstructor"},{"lineNumber":12,"author":{"gitId":"OleksandRomaniuk"},"content":"@EqualsAndHashCode"},{"lineNumber":13,"author":{"gitId":"OleksandRomaniuk"},"content":"public class TopicDTO {"},{"lineNumber":14,"author":{"gitId":"OleksandRomaniuk"},"content":"    private String topicId;"},{"lineNumber":15,"author":{"gitId":"OleksandRomaniuk"},"content":"    private String topicName;"},{"lineNumber":16,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":17,"author":{"gitId":"OleksandRomaniuk"},"content":"    private String parentTopicId;"},{"lineNumber":18,"author":{"gitId":"OleksandRomaniuk"},"content":"    public TopicDTO( String topicName){"},{"lineNumber":19,"author":{"gitId":"OleksandRomaniuk"},"content":"        this.topicName \u003d topicName;"},{"lineNumber":20,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":22,"author":{"gitId":"OleksandRomaniuk"},"content":"}"}],"authorContributionMap":{"ivanmaister7":4,"OleksandRomaniuk":18}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanmaister7"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanmaister7"},"content":"import lombok.AllArgsConstructor;"},{"lineNumber":4,"author":{"gitId":"ivanmaister7"},"content":"import lombok.Data;"},{"lineNumber":5,"author":{"gitId":"ivanmaister7"},"content":"import lombok.NoArgsConstructor;"},{"lineNumber":6,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":7,"author":{"gitId":"ivanmaister7"},"content":"@Data"},{"lineNumber":8,"author":{"gitId":"ivanmaister7"},"content":"@AllArgsConstructor"},{"lineNumber":9,"author":{"gitId":"ivanmaister7"},"content":"@NoArgsConstructor"},{"lineNumber":10,"author":{"gitId":"ivanmaister7"},"content":"public class Message {"},{"lineNumber":11,"author":{"gitId":"ivanmaister7"},"content":"    private long message_id;"},{"lineNumber":12,"author":{"gitId":"ivanmaister7"},"content":"    private String text;"},{"lineNumber":13,"author":{"gitId":"ivanmaister7"},"content":"}"}],"authorContributionMap":{"ivanmaister7":13}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/conf/BotConfiguration.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yostashko"},"content":"//package edu.kmaooad.conf;"},{"lineNumber":2,"author":{"gitId":"yostashko"},"content":"//"},{"lineNumber":3,"author":{"gitId":"yostashko"},"content":"//import org.springframework.beans.factory.annotation.Value;"},{"lineNumber":4,"author":{"gitId":"yostashko"},"content":"//import org.springframework.stereotype.Component;"},{"lineNumber":5,"author":{"gitId":"yostashko"},"content":"//import org.telegram.telegrambots.bots.TelegramLongPollingBot;"},{"lineNumber":6,"author":{"gitId":"yostashko"},"content":"//import org.telegram.telegrambots.meta.api.methods.send.SendMessage;"},{"lineNumber":7,"author":{"gitId":"yostashko"},"content":"//import org.telegram.telegrambots.meta.api.objects.Update;"},{"lineNumber":8,"author":{"gitId":"yostashko"},"content":"//import org.telegram.telegrambots.meta.exceptions.TelegramApiException;"},{"lineNumber":9,"author":{"gitId":"yostashko"},"content":"//"},{"lineNumber":10,"author":{"gitId":"yostashko"},"content":"//@Component"},{"lineNumber":11,"author":{"gitId":"yostashko"},"content":"//public class BotConfiguration extends TelegramLongPollingBot {"},{"lineNumber":12,"author":{"gitId":"yostashko"},"content":"//    @Value(\"${bot.name}\")"},{"lineNumber":13,"author":{"gitId":"yostashko"},"content":"//    private String botUsername;"},{"lineNumber":14,"author":{"gitId":"yostashko"},"content":"//"},{"lineNumber":15,"author":{"gitId":"yostashko"},"content":"//    @Value(\"${bot.token}\")"},{"lineNumber":16,"author":{"gitId":"yostashko"},"content":"//    private String botToken;"},{"lineNumber":17,"author":{"gitId":"yostashko"},"content":"//"},{"lineNumber":18,"author":{"gitId":"yostashko"},"content":"//"},{"lineNumber":19,"author":{"gitId":"yostashko"},"content":"//"},{"lineNumber":20,"author":{"gitId":"yostashko"},"content":"//    @Override"},{"lineNumber":21,"author":{"gitId":"yostashko"},"content":"//    public void onUpdateReceived(Update update) {"},{"lineNumber":22,"author":{"gitId":"yostashko"},"content":"//        try {"},{"lineNumber":23,"author":{"gitId":"yostashko"},"content":"//            SendMessage message \u003d new SendMessage();"},{"lineNumber":24,"author":{"gitId":"yostashko"},"content":"//            message.setChatId(String.valueOf(update.getMessage().getChatId()));"},{"lineNumber":25,"author":{"gitId":"yostashko"},"content":"//            message.setText(\"Independent team is independent\");"},{"lineNumber":26,"author":{"gitId":"yostashko"},"content":"//            execute(message);"},{"lineNumber":27,"author":{"gitId":"yostashko"},"content":"//        } catch (TelegramApiException e) {"},{"lineNumber":28,"author":{"gitId":"yostashko"},"content":"//            e.printStackTrace();"},{"lineNumber":29,"author":{"gitId":"yostashko"},"content":"//        }"},{"lineNumber":30,"author":{"gitId":"yostashko"},"content":"//    }"},{"lineNumber":31,"author":{"gitId":"yostashko"},"content":"//"},{"lineNumber":32,"author":{"gitId":"yostashko"},"content":"//    public String getBotUsername() {"},{"lineNumber":33,"author":{"gitId":"yostashko"},"content":"//        return botUsername;"},{"lineNumber":34,"author":{"gitId":"yostashko"},"content":"//    }"},{"lineNumber":35,"author":{"gitId":"yostashko"},"content":"//"},{"lineNumber":36,"author":{"gitId":"yostashko"},"content":"//    public String getBotToken() {"},{"lineNumber":37,"author":{"gitId":"yostashko"},"content":"//        return botToken;"},{"lineNumber":38,"author":{"gitId":"yostashko"},"content":"//    }"},{"lineNumber":39,"author":{"gitId":"yostashko"},"content":"//}"}],"authorContributionMap":{"yostashko":39}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/controller/ProjectController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanmaister7"},"content":"package edu.kmaooad.controller;"},{"lineNumber":2,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.DTO.ProjectDTO;"},{"lineNumber":4,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.models.Project;"},{"lineNumber":5,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.service.ProjectService;"},{"lineNumber":6,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":7,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.http.HttpStatus;"},{"lineNumber":8,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.http.ResponseEntity;"},{"lineNumber":9,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.web.bind.annotation.*;"},{"lineNumber":10,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":11,"author":{"gitId":"ivanmaister7"},"content":"import java.util.Optional;"},{"lineNumber":12,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":13,"author":{"gitId":"ivanmaister7"},"content":"@RestController"},{"lineNumber":14,"author":{"gitId":"ivanmaister7"},"content":"@RequestMapping(\"/project\")"},{"lineNumber":15,"author":{"gitId":"ivanmaister7"},"content":"public class ProjectController {"},{"lineNumber":16,"author":{"gitId":"ivanmaister7"},"content":"    @Autowired"},{"lineNumber":17,"author":{"gitId":"ivanmaister7"},"content":"    private ProjectService projectService;"},{"lineNumber":18,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":19,"author":{"gitId":"ivanmaister7"},"content":"    @GetMapping"},{"lineNumber":20,"author":{"gitId":"ivanmaister7"},"content":"    public ResponseEntity\u003c?\u003e getAllProjects() {"},{"lineNumber":21,"author":{"gitId":"ivanmaister7"},"content":"        return new ResponseEntity\u003c\u003e(projectService.findAll(), HttpStatus.OK);"},{"lineNumber":22,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":24,"author":{"gitId":"ivanmaister7"},"content":"    @GetMapping(\"/{id}\")"},{"lineNumber":25,"author":{"gitId":"ivanmaister7"},"content":"    public ResponseEntity\u003c?\u003e getProjectById(@PathVariable String id) {"},{"lineNumber":26,"author":{"gitId":"ivanmaister7"},"content":"        Optional\u003cProject\u003e project \u003d projectService.findById(id);"},{"lineNumber":27,"author":{"gitId":"ivanmaister7"},"content":"        return project.isPresent() ?"},{"lineNumber":28,"author":{"gitId":"ivanmaister7"},"content":"                new ResponseEntity\u003c\u003e(project, HttpStatus.OK) :"},{"lineNumber":29,"author":{"gitId":"ivanmaister7"},"content":"                new ResponseEntity\u003c\u003e(\"Project with id \u003d \" + id + \" not found\", HttpStatus.BAD_REQUEST);"},{"lineNumber":30,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":32,"author":{"gitId":"ivanmaister7"},"content":"    @PostMapping()"},{"lineNumber":33,"author":{"gitId":"ivanmaister7"},"content":"    public ResponseEntity\u003c?\u003e createProject(@RequestBody ProjectDTO dto) {"},{"lineNumber":34,"author":{"gitId":"ivanmaister7"},"content":"        return projectService.exist(projectService.createProject(dto).getProjectID()) ?"},{"lineNumber":35,"author":{"gitId":"ivanmaister7"},"content":"                new ResponseEntity\u003c\u003e(\"New Project created\", HttpStatus.CREATED) :"},{"lineNumber":36,"author":{"gitId":"ivanmaister7"},"content":"                new ResponseEntity\u003c\u003e(\"New Project not created\", HttpStatus.BAD_REQUEST);"},{"lineNumber":37,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":39,"author":{"gitId":"ivanmaister7"},"content":"    @PutMapping(\"/{id}\")"},{"lineNumber":40,"author":{"gitId":"ivanmaister7"},"content":"    public ResponseEntity\u003c?\u003e updateProject(@PathVariable String id,"},{"lineNumber":41,"author":{"gitId":"ivanmaister7"},"content":"                                           @RequestBody ProjectDTO dto) {"},{"lineNumber":42,"author":{"gitId":"ivanmaister7"},"content":"         return projectService.updateProject(id, dto) ?"},{"lineNumber":43,"author":{"gitId":"ivanmaister7"},"content":"                 new ResponseEntity\u003c\u003e(\"Project with id \u003d \" + id + \" updated\", HttpStatus.OK) :"},{"lineNumber":44,"author":{"gitId":"ivanmaister7"},"content":"                 new ResponseEntity\u003c\u003e(\"Project with id \u003d \" + id + \" not updated\", HttpStatus.BAD_REQUEST);"},{"lineNumber":45,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":46,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":48,"author":{"gitId":"ivanmaister7"},"content":"    @DeleteMapping(\"/{id}\")"},{"lineNumber":49,"author":{"gitId":"ivanmaister7"},"content":"    public ResponseEntity\u003c?\u003e deleteProject(@PathVariable String id) {"},{"lineNumber":50,"author":{"gitId":"ivanmaister7"},"content":"        return projectService.deleteProject(id) ?"},{"lineNumber":51,"author":{"gitId":"ivanmaister7"},"content":"                new ResponseEntity\u003c\u003e(\"Project with id \u003d \" + id + \" deleted\", HttpStatus.OK) :"},{"lineNumber":52,"author":{"gitId":"ivanmaister7"},"content":"                new ResponseEntity\u003c\u003e(\"Project with id \u003d \" + id + \" not deleted\", HttpStatus.BAD_REQUEST);"},{"lineNumber":53,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":55,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":56,"author":{"gitId":"ivanmaister7"},"content":"}"}],"authorContributionMap":{"ivanmaister7":56}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/controller/SkillController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanmaister7"},"content":"package edu.kmaooad.controller;"},{"lineNumber":2,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.DTO.SkillDTO;"},{"lineNumber":4,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.models.Skill;"},{"lineNumber":5,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.service.SkillService;"},{"lineNumber":6,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":7,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.http.HttpStatus;"},{"lineNumber":8,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.http.ResponseEntity;"},{"lineNumber":9,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.web.bind.annotation.*;"},{"lineNumber":10,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":11,"author":{"gitId":"ivanmaister7"},"content":"import java.util.Optional;"},{"lineNumber":12,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":13,"author":{"gitId":"ivanmaister7"},"content":"@RestController"},{"lineNumber":14,"author":{"gitId":"ivanmaister7"},"content":"@RequestMapping(\"/skill\")"},{"lineNumber":15,"author":{"gitId":"ivanmaister7"},"content":"public class SkillController {"},{"lineNumber":16,"author":{"gitId":"ivanmaister7"},"content":"    @Autowired"},{"lineNumber":17,"author":{"gitId":"ivanmaister7"},"content":"    private SkillService skillService;"},{"lineNumber":18,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":19,"author":{"gitId":"ivanmaister7"},"content":"    @GetMapping"},{"lineNumber":20,"author":{"gitId":"ivanmaister7"},"content":"    public ResponseEntity\u003c?\u003e getAllSkills() {"},{"lineNumber":21,"author":{"gitId":"ivanmaister7"},"content":"        return new ResponseEntity\u003c\u003e(skillService.findAllSkills(), HttpStatus.OK);"},{"lineNumber":22,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":24,"author":{"gitId":"ivanmaister7"},"content":"    @GetMapping(\"/{id}\")"},{"lineNumber":25,"author":{"gitId":"ivanmaister7"},"content":"    public ResponseEntity\u003c?\u003e getSkillById(@PathVariable String id) {"},{"lineNumber":26,"author":{"gitId":"ivanmaister7"},"content":"        Optional\u003cSkill\u003e Skill \u003d skillService.findOptionalSkillById(id);"},{"lineNumber":27,"author":{"gitId":"ivanmaister7"},"content":"        return Skill.isPresent() ?"},{"lineNumber":28,"author":{"gitId":"ivanmaister7"},"content":"                new ResponseEntity\u003c\u003e(Skill, HttpStatus.OK) :"},{"lineNumber":29,"author":{"gitId":"ivanmaister7"},"content":"                new ResponseEntity\u003c\u003e(\"Skill with id \u003d \" + id + \" not found\", HttpStatus.BAD_REQUEST);"},{"lineNumber":30,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":32,"author":{"gitId":"ivanmaister7"},"content":"    @PostMapping()"},{"lineNumber":33,"author":{"gitId":"ivanmaister7"},"content":"    public ResponseEntity\u003c?\u003e createSkill(@RequestBody SkillDTO dto) {"},{"lineNumber":34,"author":{"gitId":"ivanmaister7"},"content":"        Optional\u003cSkill\u003e newSkill \u003d skillService.createSkill(dto);"},{"lineNumber":35,"author":{"gitId":"ivanmaister7"},"content":"        return newSkill.isPresent() \u0026\u0026 skillService.exist(newSkill.get().getSkillID()) ?"},{"lineNumber":36,"author":{"gitId":"ivanmaister7"},"content":"                new ResponseEntity\u003c\u003e(\"New Skill created\", HttpStatus.CREATED) :"},{"lineNumber":37,"author":{"gitId":"ivanmaister7"},"content":"                new ResponseEntity\u003c\u003e(\"New Skill not created\", HttpStatus.BAD_REQUEST);"},{"lineNumber":38,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":40,"author":{"gitId":"ivanmaister7"},"content":"    @PutMapping(\"/{id}\")"},{"lineNumber":41,"author":{"gitId":"ivanmaister7"},"content":"    public ResponseEntity\u003c?\u003e updateSkill(@PathVariable String id,"},{"lineNumber":42,"author":{"gitId":"ivanmaister7"},"content":"                                           @RequestBody SkillDTO dto) {"},{"lineNumber":43,"author":{"gitId":"ivanmaister7"},"content":"         return skillService.updateSkill(id, dto) ?"},{"lineNumber":44,"author":{"gitId":"ivanmaister7"},"content":"                 new ResponseEntity\u003c\u003e(\"Skill with id \u003d \" + id + \" updated\", HttpStatus.OK) :"},{"lineNumber":45,"author":{"gitId":"ivanmaister7"},"content":"                 new ResponseEntity\u003c\u003e(\"Skill with id \u003d \" + id + \" not updated\", HttpStatus.BAD_REQUEST);"},{"lineNumber":46,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":48,"author":{"gitId":"ivanmaister7"},"content":"    @DeleteMapping(\"/{id}\")"},{"lineNumber":49,"author":{"gitId":"ivanmaister7"},"content":"    public ResponseEntity\u003c?\u003e deleteSkill(@PathVariable String id) {"},{"lineNumber":50,"author":{"gitId":"ivanmaister7"},"content":"        return skillService.deleteSkill(id) ?"},{"lineNumber":51,"author":{"gitId":"ivanmaister7"},"content":"                new ResponseEntity\u003c\u003e(\"Skill with id \u003d \" + id + \" deleted\", HttpStatus.OK) :"},{"lineNumber":52,"author":{"gitId":"ivanmaister7"},"content":"                new ResponseEntity\u003c\u003e(\"Skill with id \u003d \" + id + \" not deleted\", HttpStatus.BAD_REQUEST);"},{"lineNumber":53,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":55,"author":{"gitId":"ivanmaister7"},"content":"}"}],"authorContributionMap":{"ivanmaister7":55}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/controller/SkillSetController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanmaister7"},"content":"package edu.kmaooad.controller;"},{"lineNumber":2,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.DTO.SkillSetDTO;"},{"lineNumber":4,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.models.SkillSet;"},{"lineNumber":5,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.service.SkillSetService;"},{"lineNumber":6,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":7,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.http.HttpStatus;"},{"lineNumber":8,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.http.ResponseEntity;"},{"lineNumber":9,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.web.bind.annotation.*;"},{"lineNumber":10,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":11,"author":{"gitId":"ivanmaister7"},"content":"import java.util.Optional;"},{"lineNumber":12,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":13,"author":{"gitId":"ivanmaister7"},"content":"@RestController"},{"lineNumber":14,"author":{"gitId":"ivanmaister7"},"content":"@RequestMapping(\"/skillSet\")"},{"lineNumber":15,"author":{"gitId":"ivanmaister7"},"content":"public class SkillSetController {"},{"lineNumber":16,"author":{"gitId":"ivanmaister7"},"content":"    @Autowired"},{"lineNumber":17,"author":{"gitId":"ivanmaister7"},"content":"    private SkillSetService skillSetService;"},{"lineNumber":18,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":19,"author":{"gitId":"ivanmaister7"},"content":"    @GetMapping"},{"lineNumber":20,"author":{"gitId":"ivanmaister7"},"content":"    public ResponseEntity\u003c?\u003e getAllSkillSets() {"},{"lineNumber":21,"author":{"gitId":"ivanmaister7"},"content":"        return new ResponseEntity\u003c\u003e(skillSetService.findAllSkillSets(), HttpStatus.OK);"},{"lineNumber":22,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":24,"author":{"gitId":"ivanmaister7"},"content":"    @GetMapping(\"/{id}\")"},{"lineNumber":25,"author":{"gitId":"ivanmaister7"},"content":"    public ResponseEntity\u003c?\u003e getSkillSetById(@PathVariable String id) {"},{"lineNumber":26,"author":{"gitId":"ivanmaister7"},"content":"        Optional\u003cSkillSet\u003e SkillSet \u003d skillSetService.findOptionalSkillSetById(id);"},{"lineNumber":27,"author":{"gitId":"ivanmaister7"},"content":"        return SkillSet.isPresent() ?"},{"lineNumber":28,"author":{"gitId":"ivanmaister7"},"content":"                new ResponseEntity\u003c\u003e(SkillSet, HttpStatus.OK) :"},{"lineNumber":29,"author":{"gitId":"ivanmaister7"},"content":"                new ResponseEntity\u003c\u003e(\"SkillSet with id \u003d \" + id + \" not found\", HttpStatus.BAD_REQUEST);"},{"lineNumber":30,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":32,"author":{"gitId":"ivanmaister7"},"content":"    @PostMapping()"},{"lineNumber":33,"author":{"gitId":"ivanmaister7"},"content":"    public ResponseEntity\u003c?\u003e createSkillSet(@RequestBody SkillSetDTO dto) {"},{"lineNumber":34,"author":{"gitId":"ivanmaister7"},"content":"        return skillSetService.exist(skillSetService.createSkillSet(dto).getSkillSetID()) ?"},{"lineNumber":35,"author":{"gitId":"ivanmaister7"},"content":"                new ResponseEntity\u003c\u003e(\"New SkillSet created\", HttpStatus.CREATED) :"},{"lineNumber":36,"author":{"gitId":"ivanmaister7"},"content":"                new ResponseEntity\u003c\u003e(\"New SkillSet not created\", HttpStatus.BAD_REQUEST);"},{"lineNumber":37,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":39,"author":{"gitId":"ivanmaister7"},"content":"    @PutMapping(\"/{id}\")"},{"lineNumber":40,"author":{"gitId":"ivanmaister7"},"content":"    public ResponseEntity\u003c?\u003e updateSkillSet(@PathVariable String id,"},{"lineNumber":41,"author":{"gitId":"ivanmaister7"},"content":"                                           @RequestBody SkillSetDTO dto) {"},{"lineNumber":42,"author":{"gitId":"ivanmaister7"},"content":"         return skillSetService.updateSkillSet(id, dto) ?"},{"lineNumber":43,"author":{"gitId":"ivanmaister7"},"content":"                 new ResponseEntity\u003c\u003e(\"SkillSet with id \u003d \" + id + \" updated\", HttpStatus.OK) :"},{"lineNumber":44,"author":{"gitId":"ivanmaister7"},"content":"                 new ResponseEntity\u003c\u003e(\"SkillSet with id \u003d \" + id + \" not updated\", HttpStatus.BAD_REQUEST);"},{"lineNumber":45,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":47,"author":{"gitId":"ivanmaister7"},"content":"    @DeleteMapping(\"/{id}\")"},{"lineNumber":48,"author":{"gitId":"ivanmaister7"},"content":"    public ResponseEntity\u003c?\u003e deleteSkillSet(@PathVariable String id) {"},{"lineNumber":49,"author":{"gitId":"ivanmaister7"},"content":"        return skillSetService.deleteSkillSet(id) ?"},{"lineNumber":50,"author":{"gitId":"ivanmaister7"},"content":"                new ResponseEntity\u003c\u003e(\"SkillSet with id \u003d \" + id + \" deleted\", HttpStatus.OK) :"},{"lineNumber":51,"author":{"gitId":"ivanmaister7"},"content":"                new ResponseEntity\u003c\u003e(\"SkillSet with id \u003d \" + id + \" not deleted\", HttpStatus.BAD_REQUEST);"},{"lineNumber":52,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":54,"author":{"gitId":"ivanmaister7"},"content":"}"}],"authorContributionMap":{"ivanmaister7":54}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/controller/TopicController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanmaister7"},"content":"package edu.kmaooad.controller;"},{"lineNumber":2,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.DTO.TopicDTO;"},{"lineNumber":4,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.models.Skill;"},{"lineNumber":5,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.models.Topic;"},{"lineNumber":6,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.service.TopicService;"},{"lineNumber":7,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":8,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.http.HttpStatus;"},{"lineNumber":9,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.http.ResponseEntity;"},{"lineNumber":10,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.web.bind.annotation.*;"},{"lineNumber":11,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":12,"author":{"gitId":"ivanmaister7"},"content":"import java.util.Optional;"},{"lineNumber":13,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":14,"author":{"gitId":"ivanmaister7"},"content":"@RestController"},{"lineNumber":15,"author":{"gitId":"ivanmaister7"},"content":"@RequestMapping(\"/topic\")"},{"lineNumber":16,"author":{"gitId":"ivanmaister7"},"content":"public class TopicController {"},{"lineNumber":17,"author":{"gitId":"ivanmaister7"},"content":"    @Autowired"},{"lineNumber":18,"author":{"gitId":"ivanmaister7"},"content":"    private TopicService topicService;"},{"lineNumber":19,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":20,"author":{"gitId":"ivanmaister7"},"content":"    @GetMapping"},{"lineNumber":21,"author":{"gitId":"ivanmaister7"},"content":"    public ResponseEntity\u003c?\u003e getAllTopics() {"},{"lineNumber":22,"author":{"gitId":"ivanmaister7"},"content":"        return new ResponseEntity\u003c\u003e(topicService.findAllTopics(), HttpStatus.OK);"},{"lineNumber":23,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":25,"author":{"gitId":"ivanmaister7"},"content":"    @GetMapping(\"/{id}\")"},{"lineNumber":26,"author":{"gitId":"ivanmaister7"},"content":"    public ResponseEntity\u003c?\u003e getTopicById(@PathVariable String id) {"},{"lineNumber":27,"author":{"gitId":"ivanmaister7"},"content":"        Optional\u003cTopic\u003e Topic \u003d topicService.findOptionalTopicById(id);"},{"lineNumber":28,"author":{"gitId":"ivanmaister7"},"content":"        return Topic.isPresent() ?"},{"lineNumber":29,"author":{"gitId":"ivanmaister7"},"content":"                new ResponseEntity\u003c\u003e(Topic, HttpStatus.OK) :"},{"lineNumber":30,"author":{"gitId":"ivanmaister7"},"content":"                new ResponseEntity\u003c\u003e(\"Topic with id \u003d \" + id + \" not found\", HttpStatus.BAD_REQUEST);"},{"lineNumber":31,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":33,"author":{"gitId":"ivanmaister7"},"content":"    @PostMapping()"},{"lineNumber":34,"author":{"gitId":"ivanmaister7"},"content":"    public ResponseEntity\u003c?\u003e createTopic(@RequestBody TopicDTO dto) {"},{"lineNumber":35,"author":{"gitId":"ivanmaister7"},"content":"        Optional\u003cTopic\u003e newTopic \u003d topicService.createTopic(dto);"},{"lineNumber":36,"author":{"gitId":"ivanmaister7"},"content":"        return newTopic.isPresent() \u0026\u0026 topicService.exist(newTopic.get().getTopicID()) ?"},{"lineNumber":37,"author":{"gitId":"ivanmaister7"},"content":"                new ResponseEntity\u003c\u003e(\"New Topic created\", HttpStatus.CREATED) :"},{"lineNumber":38,"author":{"gitId":"ivanmaister7"},"content":"                new ResponseEntity\u003c\u003e(\"New Topic not created\", HttpStatus.BAD_REQUEST);"},{"lineNumber":39,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":41,"author":{"gitId":"ivanmaister7"},"content":"    @PutMapping(\"/{id}\")"},{"lineNumber":42,"author":{"gitId":"ivanmaister7"},"content":"    public ResponseEntity\u003c?\u003e updateTopic(@PathVariable String id,"},{"lineNumber":43,"author":{"gitId":"ivanmaister7"},"content":"                                           @RequestBody TopicDTO dto) {"},{"lineNumber":44,"author":{"gitId":"ivanmaister7"},"content":"         return topicService.updateTopic(id, dto) ?"},{"lineNumber":45,"author":{"gitId":"ivanmaister7"},"content":"                 new ResponseEntity\u003c\u003e(\"Topic with id \u003d \" + id + \" updated\", HttpStatus.OK) :"},{"lineNumber":46,"author":{"gitId":"ivanmaister7"},"content":"                 new ResponseEntity\u003c\u003e(\"Topic with id \u003d \" + id + \" not updated\", HttpStatus.BAD_REQUEST);"},{"lineNumber":47,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":49,"author":{"gitId":"ivanmaister7"},"content":"    @DeleteMapping(\"/{id}\")"},{"lineNumber":50,"author":{"gitId":"ivanmaister7"},"content":"    public ResponseEntity\u003c?\u003e deleteTopic(@PathVariable String id) {"},{"lineNumber":51,"author":{"gitId":"ivanmaister7"},"content":"        return topicService.deleteTopic(id) ?"},{"lineNumber":52,"author":{"gitId":"ivanmaister7"},"content":"                new ResponseEntity\u003c\u003e(\"Topic with id \u003d \" + id + \" deleted\", HttpStatus.OK) :"},{"lineNumber":53,"author":{"gitId":"ivanmaister7"},"content":"                new ResponseEntity\u003c\u003e(\"Topic with id \u003d \" + id + \" not deleted\", HttpStatus.BAD_REQUEST);"},{"lineNumber":54,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":56,"author":{"gitId":"ivanmaister7"},"content":"}"}],"authorContributionMap":{"ivanmaister7":56}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/exeptions/ProjectNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anastasiia Bezruka"},"content":"package edu.kmaooad.exeptions;"},{"lineNumber":2,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":3,"author":{"gitId":"Anastasiia Bezruka"},"content":"public class ProjectNotFoundException extends RuntimeException {"},{"lineNumber":4,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public ProjectNotFoundException(String projectId) {"},{"lineNumber":5,"author":{"gitId":"Anastasiia Bezruka"},"content":"        super(String.format(\"Project with id %s not found\", projectId));"},{"lineNumber":6,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"Anastasiia Bezruka"},"content":"}"}],"authorContributionMap":{"Anastasiia Bezruka":7}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/exeptions/SkillNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OleksandRomaniuk"},"content":"package edu.kmaooad.exeptions;"},{"lineNumber":2,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":3,"author":{"gitId":"OleksandRomaniuk"},"content":"public class SkillNotFoundException extends RuntimeException{"},{"lineNumber":4,"author":{"gitId":"OleksandRomaniuk"},"content":"    public SkillNotFoundException(String message) {"},{"lineNumber":5,"author":{"gitId":"OleksandRomaniuk"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"OleksandRomaniuk"},"content":"}"}],"authorContributionMap":{"OleksandRomaniuk":7}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/exeptions/SkillSetNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anastasiia Bezruka"},"content":"package edu.kmaooad.exeptions;"},{"lineNumber":2,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":3,"author":{"gitId":"Anastasiia Bezruka"},"content":"public class SkillSetNotFoundException extends RuntimeException {"},{"lineNumber":4,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public SkillSetNotFoundException(String skillSetId) {"},{"lineNumber":5,"author":{"gitId":"Anastasiia Bezruka"},"content":"        super(String.format(\"Skill set with id %s not found\", skillSetId));"},{"lineNumber":6,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"Anastasiia Bezruka"},"content":"}"}],"authorContributionMap":{"Anastasiia Bezruka":7}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/exeptions/TopicNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OleksandRomaniuk"},"content":"package edu.kmaooad.exeptions;"},{"lineNumber":2,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":3,"author":{"gitId":"OleksandRomaniuk"},"content":"public class TopicNotFoundException extends RuntimeException{"},{"lineNumber":4,"author":{"gitId":"OleksandRomaniuk"},"content":"    public TopicNotFoundException(String message) {"},{"lineNumber":5,"author":{"gitId":"OleksandRomaniuk"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"OleksandRomaniuk"},"content":"}"}],"authorContributionMap":{"OleksandRomaniuk":7}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/models/Project.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Марія-Валерія Гуза"},"content":"package edu.kmaooad.models;"},{"lineNumber":2,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":3,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import com.sun.istack.NotNull;"},{"lineNumber":4,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import lombok.*;"},{"lineNumber":5,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import org.springframework.data.annotation.Id;"},{"lineNumber":6,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.data.mongodb.core.mapping.DBRef;"},{"lineNumber":7,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":8,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import java.util.Set;"},{"lineNumber":9,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":10,"author":{"gitId":"Марія-Валерія Гуза"},"content":"@Builder"},{"lineNumber":11,"author":{"gitId":"Марія-Валерія Гуза"},"content":"@Getter"},{"lineNumber":12,"author":{"gitId":"Марія-Валерія Гуза"},"content":"@Setter"},{"lineNumber":13,"author":{"gitId":"Марія-Валерія Гуза"},"content":"@AllArgsConstructor"},{"lineNumber":14,"author":{"gitId":"Anastasiia Bezruka"},"content":"@NoArgsConstructor"},{"lineNumber":15,"author":{"gitId":"Марія-Валерія Гуза"},"content":"@ToString"},{"lineNumber":16,"author":{"gitId":"Марія-Валерія Гуза"},"content":"@EqualsAndHashCode"},{"lineNumber":17,"author":{"gitId":"Марія-Валерія Гуза"},"content":"public class Project {"},{"lineNumber":18,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":19,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @NotNull"},{"lineNumber":20,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Id"},{"lineNumber":21,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    private String projectID;"},{"lineNumber":22,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @NotNull"},{"lineNumber":23,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    private String projectTitle;"},{"lineNumber":24,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @NotNull"},{"lineNumber":25,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    private String projectDescription;"},{"lineNumber":26,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @NotNull"},{"lineNumber":27,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @DBRef"},{"lineNumber":28,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private Set\u003cTopic\u003e topics;"},{"lineNumber":29,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @NotNull"},{"lineNumber":30,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @DBRef"},{"lineNumber":31,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private Set\u003cSkill\u003e skills;"},{"lineNumber":32,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @NotNull"},{"lineNumber":33,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @DBRef"},{"lineNumber":34,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private Set\u003cSkillSet\u003e skillSets;"},{"lineNumber":35,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":36,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":37,"author":{"gitId":"Марія-Валерія Гуза"},"content":"}"}],"authorContributionMap":{"Марія-Валерія Гуза":29,"Anastasiia Bezruka":8}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/models/Skill.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Марія-Валерія Гуза"},"content":"package edu.kmaooad.models;"},{"lineNumber":2,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":3,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import com.sun.istack.NotNull;"},{"lineNumber":4,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import lombok.*;"},{"lineNumber":5,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import org.springframework.data.annotation.Id;"},{"lineNumber":6,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import org.springframework.data.mongodb.core.mapping.DBRef;"},{"lineNumber":7,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":8,"author":{"gitId":"Марія-Валерія Гуза"},"content":"@Builder"},{"lineNumber":9,"author":{"gitId":"ivanmaister7"},"content":"@Data"},{"lineNumber":10,"author":{"gitId":"Марія-Валерія Гуза"},"content":"@AllArgsConstructor"},{"lineNumber":11,"author":{"gitId":"ivanmaister7"},"content":"@NoArgsConstructor"},{"lineNumber":12,"author":{"gitId":"Марія-Валерія Гуза"},"content":"public class Skill {"},{"lineNumber":13,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @NotNull"},{"lineNumber":14,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Id"},{"lineNumber":15,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    private String skillID;"},{"lineNumber":16,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @NotNull"},{"lineNumber":17,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    private String skillName;"},{"lineNumber":18,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":19,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @DBRef"},{"lineNumber":20,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    private Skill parentSkill;"},{"lineNumber":21,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":22,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    public Skill(String skillID, String skillName){"},{"lineNumber":23,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        this.skillID \u003d skillID;"},{"lineNumber":24,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        this.skillName \u003d skillName;"},{"lineNumber":25,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Марія-Валерія Гуза"},"content":"}"}],"authorContributionMap":{"Марія-Валерія Гуза":24,"ivanmaister7":2}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/models/SkillSet.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Марія-Валерія Гуза"},"content":"package edu.kmaooad.models;"},{"lineNumber":2,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":3,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import com.sun.istack.NotNull;"},{"lineNumber":4,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import lombok.*;"},{"lineNumber":5,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import org.springframework.data.annotation.Id;"},{"lineNumber":6,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.data.mongodb.core.mapping.DBRef;"},{"lineNumber":7,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":8,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import java.util.HashSet;"},{"lineNumber":9,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import java.util.Set;"},{"lineNumber":10,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":11,"author":{"gitId":"Марія-Валерія Гуза"},"content":"@Builder"},{"lineNumber":12,"author":{"gitId":"ivanmaister7"},"content":"@Data"},{"lineNumber":13,"author":{"gitId":"Марія-Валерія Гуза"},"content":"@AllArgsConstructor"},{"lineNumber":14,"author":{"gitId":"Anastasiia Bezruka"},"content":"@NoArgsConstructor"},{"lineNumber":15,"author":{"gitId":"Марія-Валерія Гуза"},"content":"public class SkillSet {"},{"lineNumber":16,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":17,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @NotNull"},{"lineNumber":18,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Id"},{"lineNumber":19,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    private String skillSetID;"},{"lineNumber":20,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":21,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    //??"},{"lineNumber":22,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    private String skillSetName;"},{"lineNumber":23,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":24,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @DBRef"},{"lineNumber":25,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private Set\u003cSkill\u003e skills;"},{"lineNumber":26,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":27,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    public void addSkill(Skill input){"},{"lineNumber":28,"author":{"gitId":"Anastasiia Bezruka"},"content":"        if(skills \u003d\u003d null){"},{"lineNumber":29,"author":{"gitId":"Anastasiia Bezruka"},"content":"            skills \u003d new HashSet\u003c\u003e();"},{"lineNumber":30,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"Anastasiia Bezruka"},"content":"        skills.add(input);"},{"lineNumber":32,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":34,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    public void removeSkill(Skill input){"},{"lineNumber":35,"author":{"gitId":"ivanmaister7"},"content":"        if (skills !\u003d null){"},{"lineNumber":36,"author":{"gitId":"Anastasiia Bezruka"},"content":"            skills.remove(input);"},{"lineNumber":37,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":40,"author":{"gitId":"Марія-Валерія Гуза"},"content":"}"}],"authorContributionMap":{"Марія-Валерія Гуза":29,"ivanmaister7":3,"Anastasiia Bezruka":8}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/models/Topic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Марія-Валерія Гуза"},"content":"package edu.kmaooad.models;"},{"lineNumber":2,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":3,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import com.sun.istack.NotNull;"},{"lineNumber":4,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import lombok.*;"},{"lineNumber":5,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import org.springframework.data.annotation.Id;"},{"lineNumber":6,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import org.springframework.data.mongodb.core.mapping.DBRef;"},{"lineNumber":7,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":8,"author":{"gitId":"Марія-Валерія Гуза"},"content":"@Builder"},{"lineNumber":9,"author":{"gitId":"ivanmaister7"},"content":"@Data"},{"lineNumber":10,"author":{"gitId":"Марія-Валерія Гуза"},"content":"@AllArgsConstructor"},{"lineNumber":11,"author":{"gitId":"ivanmaister7"},"content":"@NoArgsConstructor"},{"lineNumber":12,"author":{"gitId":"Марія-Валерія Гуза"},"content":"public class Topic {"},{"lineNumber":13,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @NotNull"},{"lineNumber":14,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Id"},{"lineNumber":15,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    private String topicID;"},{"lineNumber":16,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @NotNull"},{"lineNumber":17,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    private String topicName;"},{"lineNumber":18,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":19,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @DBRef"},{"lineNumber":20,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    private Topic parentTopic;"},{"lineNumber":21,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":22,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    public Topic(String topicID, String topicName){"},{"lineNumber":23,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        this.topicID \u003d topicID;"},{"lineNumber":24,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        this.topicName \u003d topicName;"},{"lineNumber":25,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":27,"author":{"gitId":"Марія-Валерія Гуза"},"content":"}"}],"authorContributionMap":{"Марія-Валерія Гуза":25,"ivanmaister7":2}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/repository/ProjectRepository.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anastasiia Bezruka"},"content":"package edu.kmaooad.repository;"},{"lineNumber":2,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":3,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.models.Project;"},{"lineNumber":4,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.models.Skill;"},{"lineNumber":5,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.models.SkillSet;"},{"lineNumber":6,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.models.Topic;"},{"lineNumber":7,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.data.mongodb.repository.MongoRepository;"},{"lineNumber":8,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.stereotype.Repository;"},{"lineNumber":9,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":10,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.Optional;"},{"lineNumber":11,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":12,"author":{"gitId":"Anastasiia Bezruka"},"content":"@Repository"},{"lineNumber":13,"author":{"gitId":"Anastasiia Bezruka"},"content":"public interface ProjectRepository extends MongoRepository\u003cProject, String\u003e {"},{"lineNumber":14,"author":{"gitId":"Anastasiia Bezruka"},"content":"    Optional\u003cProject\u003e findProjectByProjectTitle(String projectTitle);"},{"lineNumber":15,"author":{"gitId":"Anastasiia Bezruka"},"content":"    Optional\u003cProject\u003e findProjectByTopicsContains(Topic topic);"},{"lineNumber":16,"author":{"gitId":"Anastasiia Bezruka"},"content":"    Optional\u003cProject\u003e findProjectBySkillsContains(Skill skill);"},{"lineNumber":17,"author":{"gitId":"Anastasiia Bezruka"},"content":"    Optional\u003cProject\u003e findProjectBySkillSetsContains(SkillSet skillSet);"},{"lineNumber":18,"author":{"gitId":"Anastasiia Bezruka"},"content":"}"}],"authorContributionMap":{"Anastasiia Bezruka":18}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/repository/SkillRepository.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OleksandRomaniuk"},"content":"package edu.kmaooad.repository;"},{"lineNumber":2,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":3,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.models.Skill;"},{"lineNumber":4,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.models.SkillSet;"},{"lineNumber":5,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.models.Topic;"},{"lineNumber":6,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.springframework.data.mongodb.repository.MongoRepository;"},{"lineNumber":7,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.stereotype.Repository;"},{"lineNumber":8,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":9,"author":{"gitId":"OleksandRomaniuk"},"content":"import java.util.Optional;"},{"lineNumber":10,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":11,"author":{"gitId":"Anastasiia Bezruka"},"content":"@Repository"},{"lineNumber":12,"author":{"gitId":"OleksandRomaniuk"},"content":"public interface SkillRepository extends MongoRepository\u003cSkill , String\u003e {"},{"lineNumber":13,"author":{"gitId":"OleksandRomaniuk"},"content":"    Optional\u003cSkill\u003e findSkillBySkillName(String skillName);"},{"lineNumber":14,"author":{"gitId":"OleksandRomaniuk"},"content":"    Optional\u003cSkill\u003e findSkillBySkillID(String id);"},{"lineNumber":15,"author":{"gitId":"OleksandRomaniuk"},"content":"}"}],"authorContributionMap":{"OleksandRomaniuk":13,"Anastasiia Bezruka":2}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/repository/SkillSetRepository.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anastasiia Bezruka"},"content":"package edu.kmaooad.repository;"},{"lineNumber":2,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":3,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.models.Skill;"},{"lineNumber":4,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.models.SkillSet;"},{"lineNumber":5,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.data.mongodb.repository.MongoRepository;"},{"lineNumber":6,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.stereotype.Repository;"},{"lineNumber":7,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":8,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.Optional;"},{"lineNumber":9,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":10,"author":{"gitId":"Anastasiia Bezruka"},"content":"@Repository"},{"lineNumber":11,"author":{"gitId":"Anastasiia Bezruka"},"content":"public interface SkillSetRepository extends MongoRepository\u003cSkillSet, String\u003e {"},{"lineNumber":12,"author":{"gitId":"Anastasiia Bezruka"},"content":"    Optional\u003cSkillSet\u003e findSkillSetBySkillSetName(String skillSetName);"},{"lineNumber":13,"author":{"gitId":"Anastasiia Bezruka"},"content":"    Optional\u003cSkillSet\u003e findSkillSetBySkillsContaining(Skill skill);"},{"lineNumber":14,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":15,"author":{"gitId":"Anastasiia Bezruka"},"content":"}"}],"authorContributionMap":{"Anastasiia Bezruka":15}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/repository/TopicRepository.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OleksandRomaniuk"},"content":"package edu.kmaooad.repository;"},{"lineNumber":2,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":3,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.models.Skill;"},{"lineNumber":4,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.models.Topic;"},{"lineNumber":5,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.springframework.data.mongodb.repository.MongoRepository;"},{"lineNumber":6,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.stereotype.Repository;"},{"lineNumber":7,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":8,"author":{"gitId":"OleksandRomaniuk"},"content":"import java.util.Optional;"},{"lineNumber":9,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":10,"author":{"gitId":"Anastasiia Bezruka"},"content":"@Repository"},{"lineNumber":11,"author":{"gitId":"OleksandRomaniuk"},"content":"public interface TopicRepository extends MongoRepository\u003cTopic, String\u003e {"},{"lineNumber":12,"author":{"gitId":"OleksandRomaniuk"},"content":"    Optional\u003cTopic\u003e findTopicByTopicName(String skillName);"},{"lineNumber":13,"author":{"gitId":"OleksandRomaniuk"},"content":"    Optional\u003cTopic\u003e findTopicByTopicID(String id);"},{"lineNumber":14,"author":{"gitId":"OleksandRomaniuk"},"content":"}"}],"authorContributionMap":{"OleksandRomaniuk":12,"Anastasiia Bezruka":2}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/service/BotService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanmaister7"},"content":"package edu.kmaooad.service;"},{"lineNumber":2,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.BotRequest;"},{"lineNumber":4,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.BotResponse;"},{"lineNumber":5,"author":{"gitId":"Anastasiia Bezruka"},"content":"import lombok.AllArgsConstructor;"},{"lineNumber":6,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":7,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":8,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":9,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.function.Function;"},{"lineNumber":10,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":11,"author":{"gitId":"Anastasiia Bezruka"},"content":"import static edu.kmaooad.Constants.REQUEST_WITHOUT_MESSAGE_ID;"},{"lineNumber":12,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":13,"author":{"gitId":"Anastasiia Bezruka"},"content":"@Component"},{"lineNumber":14,"author":{"gitId":"Anastasiia Bezruka"},"content":"@AllArgsConstructor"},{"lineNumber":15,"author":{"gitId":"Anastasiia Bezruka"},"content":"public class BotService implements Function\u003cBotRequest, BotResponse\u003e {"},{"lineNumber":16,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Autowired"},{"lineNumber":17,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private MongoService mongoService;"},{"lineNumber":18,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":19,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public BotResponse apply(BotRequest botRequest) {"},{"lineNumber":21,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":22,"author":{"gitId":"Anastasiia Bezruka"},"content":"        if (botRequest.getMessage().getMessage_id() \u003d\u003d 0 || botRequest.getMessage().getText() \u003d\u003d null) {"},{"lineNumber":23,"author":{"gitId":"Anastasiia Bezruka"},"content":"            throw new RuntimeException(REQUEST_WITHOUT_MESSAGE_ID);"},{"lineNumber":24,"author":{"gitId":"Anastasiia Bezruka"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":26,"author":{"gitId":"Anastasiia Bezruka"},"content":"        mongoService.insertOneRequest(botRequest);"},{"lineNumber":27,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":28,"author":{"gitId":"Anastasiia Bezruka"},"content":"        return new BotResponse(botRequest.getMessage().getMessage_id());"},{"lineNumber":29,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Anastasiia Bezruka"},"content":"}"}],"authorContributionMap":{"ivanmaister7":3,"Anastasiia Bezruka":27}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/service/MongoService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanmaister7"},"content":"package edu.kmaooad.service;"},{"lineNumber":2,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":3,"author":{"gitId":"Anastasiia Bezruka"},"content":"import com.mongodb.client.MongoClient;"},{"lineNumber":4,"author":{"gitId":"Anastasiia Bezruka"},"content":"import com.mongodb.client.MongoClients;"},{"lineNumber":5,"author":{"gitId":"Anastasiia Bezruka"},"content":"import com.mongodb.client.MongoCollection;"},{"lineNumber":6,"author":{"gitId":"Anastasiia Bezruka"},"content":"import com.mongodb.client.MongoDatabase;"},{"lineNumber":7,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.BotRequest;"},{"lineNumber":8,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.BotRequestMapper;"},{"lineNumber":9,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.bson.Document;"},{"lineNumber":10,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":11,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.stereotype.Service;"},{"lineNumber":12,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":13,"author":{"gitId":"Anastasiia Bezruka"},"content":"@Service"},{"lineNumber":14,"author":{"gitId":"Anastasiia Bezruka"},"content":"public class MongoService {"},{"lineNumber":15,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":16,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Autowired"},{"lineNumber":17,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private BotRequestMapper requestMapper;"},{"lineNumber":18,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":19,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private static final String URI \u003d \"mongodb+srv://IndependentTeam:5UF2n0PnsIjaxYLN@cluster0.50iuewp.mongodb.net/?retryWrites\u003dtrue\u0026w\u003dmajority\";"},{"lineNumber":20,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":21,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public void insertOneRequest(BotRequest request) {"},{"lineNumber":22,"author":{"gitId":"Anastasiia Bezruka"},"content":"        try (MongoClient mongoClient \u003d MongoClients.create(URI)) {"},{"lineNumber":23,"author":{"gitId":"Anastasiia Bezruka"},"content":"            MongoDatabase database \u003d mongoClient.getDatabase(\"independentDB\");"},{"lineNumber":24,"author":{"gitId":"Anastasiia Bezruka"},"content":"            MongoCollection\u003cDocument\u003e collection \u003d database.getCollection(\"independentCollection\");"},{"lineNumber":25,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":26,"author":{"gitId":"Anastasiia Bezruka"},"content":"            Document doc \u003d Document.parse(requestMapper.deserialize(request));"},{"lineNumber":27,"author":{"gitId":"Anastasiia Bezruka"},"content":"            collection.insertOne(doc);"},{"lineNumber":28,"author":{"gitId":"Anastasiia Bezruka"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Anastasiia Bezruka"},"content":"}"}],"authorContributionMap":{"ivanmaister7":3,"Anastasiia Bezruka":27}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/service/ProjectService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anastasiia Bezruka"},"content":"package edu.kmaooad.service;"},{"lineNumber":2,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":3,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.DTO.ProjectDTO;"},{"lineNumber":4,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.exeptions.ProjectNotFoundException;"},{"lineNumber":5,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.exeptions.SkillNotFoundException;"},{"lineNumber":6,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.exeptions.SkillSetNotFoundException;"},{"lineNumber":7,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.exeptions.TopicNotFoundException;"},{"lineNumber":8,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.models.Project;"},{"lineNumber":9,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.models.Skill;"},{"lineNumber":10,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.models.SkillSet;"},{"lineNumber":11,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.models.Topic;"},{"lineNumber":12,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.repository.ProjectRepository;"},{"lineNumber":13,"author":{"gitId":"Anastasiia Bezruka"},"content":"import lombok.extern.slf4j.Slf4j;"},{"lineNumber":14,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":15,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.stereotype.Service;"},{"lineNumber":16,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":17,"author":{"gitId":"ivanmaister7"},"content":"import java.util.List;"},{"lineNumber":18,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.Objects;"},{"lineNumber":19,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.Optional;"},{"lineNumber":20,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.Set;"},{"lineNumber":21,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.stream.Collectors;"},{"lineNumber":22,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":23,"author":{"gitId":"Anastasiia Bezruka"},"content":"@Service"},{"lineNumber":24,"author":{"gitId":"Anastasiia Bezruka"},"content":"@Slf4j"},{"lineNumber":25,"author":{"gitId":"Anastasiia Bezruka"},"content":"public class ProjectService {"},{"lineNumber":26,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Autowired"},{"lineNumber":27,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private ProjectRepository projectRepository;"},{"lineNumber":28,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Autowired"},{"lineNumber":29,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private SkillService skillService;"},{"lineNumber":30,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Autowired"},{"lineNumber":31,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private SkillSetService skillSetService;"},{"lineNumber":32,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Autowired"},{"lineNumber":33,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private TopicService topicService;"},{"lineNumber":34,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":35,"author":{"gitId":"ivanmaister7"},"content":"    public boolean exist(String id) {"},{"lineNumber":36,"author":{"gitId":"ivanmaister7"},"content":"        return projectRepository.existsById(id);"},{"lineNumber":37,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public Project createProject(ProjectDTO dto) {"},{"lineNumber":39,"author":{"gitId":"Anastasiia Bezruka"},"content":"        return projectRepository.save(mapFromDtoToEntity(dto));"},{"lineNumber":40,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":42,"author":{"gitId":"ivanmaister7"},"content":"    public boolean deleteProject(String projectId) {"},{"lineNumber":43,"author":{"gitId":"Anastasiia Bezruka"},"content":"        projectRepository.deleteById(projectId);"},{"lineNumber":44,"author":{"gitId":"ivanmaister7"},"content":"        return projectRepository.existsById(projectId);"},{"lineNumber":45,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":47,"author":{"gitId":"ivanmaister7"},"content":"    public Optional\u003cProject\u003e findById(String id) {"},{"lineNumber":48,"author":{"gitId":"ivanmaister7"},"content":"        return projectRepository.findById(id);"},{"lineNumber":49,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":51,"author":{"gitId":"ivanmaister7"},"content":"    public List\u003cProject\u003e findAll() {"},{"lineNumber":52,"author":{"gitId":"ivanmaister7"},"content":"        return projectRepository.findAll();"},{"lineNumber":53,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":55,"author":{"gitId":"ivanmaister7"},"content":"    public boolean updateProject(String id, ProjectDTO dto) {"},{"lineNumber":56,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Optional\u003cProject\u003e project \u003d projectRepository.findById(id);"},{"lineNumber":57,"author":{"gitId":"ivanmaister7"},"content":"        boolean res;"},{"lineNumber":58,"author":{"gitId":"Anastasiia Bezruka"},"content":"        if (project.isPresent()) {"},{"lineNumber":59,"author":{"gitId":"Anastasiia Bezruka"},"content":"            Project updated \u003d mapFromDtoToEntity(dto);"},{"lineNumber":60,"author":{"gitId":"Anastasiia Bezruka"},"content":"            updated.setProjectID(id);"},{"lineNumber":61,"author":{"gitId":"Anastasiia Bezruka"},"content":"            projectRepository.save(updated);"},{"lineNumber":62,"author":{"gitId":"ivanmaister7"},"content":"            res \u003d updated.equals(projectRepository.findById(id).orElseThrow(() -\u003e new ProjectNotFoundException(id)));"},{"lineNumber":63,"author":{"gitId":"Anastasiia Bezruka"},"content":"        } else {"},{"lineNumber":64,"author":{"gitId":"Anastasiia Bezruka"},"content":"            throw new ProjectNotFoundException(id);"},{"lineNumber":65,"author":{"gitId":"Anastasiia Bezruka"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"ivanmaister7"},"content":"        return res;"},{"lineNumber":67,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":69,"author":{"gitId":"Anastasiia Bezruka"},"content":"    protected Project mapFromDtoToEntity(ProjectDTO dto) {"},{"lineNumber":70,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Project res \u003d new Project();"},{"lineNumber":71,"author":{"gitId":"Anastasiia Bezruka"},"content":"        res.setProjectID(dto.getProjectId());"},{"lineNumber":72,"author":{"gitId":"Anastasiia Bezruka"},"content":"        res.setProjectTitle(dto.getProjectTitle());"},{"lineNumber":73,"author":{"gitId":"Anastasiia Bezruka"},"content":"        res.setProjectDescription(dto.getProjectDescription());"},{"lineNumber":74,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Set\u003cSkill\u003e skills \u003d getSkills(dto);"},{"lineNumber":75,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Set\u003cSkillSet\u003e skillSets \u003d getSkillSets(dto);"},{"lineNumber":76,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Set\u003cTopic\u003e topics \u003d getTopics(dto);"},{"lineNumber":77,"author":{"gitId":"Anastasiia Bezruka"},"content":"        res.setSkills(skills);"},{"lineNumber":78,"author":{"gitId":"Anastasiia Bezruka"},"content":"        res.setSkillSets(skillSets);"},{"lineNumber":79,"author":{"gitId":"Anastasiia Bezruka"},"content":"        res.setTopics(topics);"},{"lineNumber":80,"author":{"gitId":"Anastasiia Bezruka"},"content":"        return res;"},{"lineNumber":81,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":83,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private Set\u003cTopic\u003e getTopics(ProjectDTO dto) {"},{"lineNumber":84,"author":{"gitId":"Anastasiia Bezruka"},"content":"        return dto.getTopicIds().stream()"},{"lineNumber":85,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .map(topicId -\u003e {"},{"lineNumber":86,"author":{"gitId":"Anastasiia Bezruka"},"content":"                    try {"},{"lineNumber":87,"author":{"gitId":"Anastasiia Bezruka"},"content":"                        return topicService.findTopicById(topicId);"},{"lineNumber":88,"author":{"gitId":"Anastasiia Bezruka"},"content":"                    } catch (TopicNotFoundException topicNotFoundException) {"},{"lineNumber":89,"author":{"gitId":"Anastasiia Bezruka"},"content":"                        log.warn(\"Topic with id {} will not be added to project as it doesn\u0027t exists\", topicId);"},{"lineNumber":90,"author":{"gitId":"Anastasiia Bezruka"},"content":"                        return null;"},{"lineNumber":91,"author":{"gitId":"Anastasiia Bezruka"},"content":"                    }"},{"lineNumber":92,"author":{"gitId":"Anastasiia Bezruka"},"content":"                })"},{"lineNumber":93,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .filter(Objects::nonNull)"},{"lineNumber":94,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .collect(Collectors.toSet());"},{"lineNumber":95,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":97,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private Set\u003cSkillSet\u003e getSkillSets(ProjectDTO dto) {"},{"lineNumber":98,"author":{"gitId":"Anastasiia Bezruka"},"content":"        return dto.getSkillSetIds().stream()"},{"lineNumber":99,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .map(skillSetId -\u003e {"},{"lineNumber":100,"author":{"gitId":"Anastasiia Bezruka"},"content":"                    try {"},{"lineNumber":101,"author":{"gitId":"Anastasiia Bezruka"},"content":"                        return skillSetService.findSkillSetById(skillSetId);"},{"lineNumber":102,"author":{"gitId":"Anastasiia Bezruka"},"content":"                    } catch (SkillSetNotFoundException skillNotFoundException) {"},{"lineNumber":103,"author":{"gitId":"Anastasiia Bezruka"},"content":"                        log.warn(\"Skill set with id {} will not be added to project as it doesn\u0027t exists\", skillSetId);"},{"lineNumber":104,"author":{"gitId":"Anastasiia Bezruka"},"content":"                        return null;"},{"lineNumber":105,"author":{"gitId":"Anastasiia Bezruka"},"content":"                    }"},{"lineNumber":106,"author":{"gitId":"Anastasiia Bezruka"},"content":"                })"},{"lineNumber":107,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .filter(Objects::nonNull)"},{"lineNumber":108,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .collect(Collectors.toSet());"},{"lineNumber":109,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":111,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private Set\u003cSkill\u003e getSkills(ProjectDTO dto) {"},{"lineNumber":112,"author":{"gitId":"Anastasiia Bezruka"},"content":"        return dto.getSkillIds().stream()"},{"lineNumber":113,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .map(skillId -\u003e {"},{"lineNumber":114,"author":{"gitId":"Anastasiia Bezruka"},"content":"                    try {"},{"lineNumber":115,"author":{"gitId":"Anastasiia Bezruka"},"content":"                        return skillService.findSkillById(skillId);"},{"lineNumber":116,"author":{"gitId":"Anastasiia Bezruka"},"content":"                    } catch (SkillNotFoundException skillNotFoundException) {"},{"lineNumber":117,"author":{"gitId":"Anastasiia Bezruka"},"content":"                        log.warn(\"Skill with id {} will not be added to project as it doesn\u0027t exists\", skillId);"},{"lineNumber":118,"author":{"gitId":"Anastasiia Bezruka"},"content":"                        return null;"},{"lineNumber":119,"author":{"gitId":"Anastasiia Bezruka"},"content":"                    }"},{"lineNumber":120,"author":{"gitId":"Anastasiia Bezruka"},"content":"                })"},{"lineNumber":121,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .filter(Objects::nonNull)"},{"lineNumber":122,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .collect(Collectors.toSet());"},{"lineNumber":123,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":125,"author":{"gitId":"Anastasiia Bezruka"},"content":"}"}],"authorContributionMap":{"ivanmaister7":18,"Anastasiia Bezruka":107}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/service/SkillService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OleksandRomaniuk"},"content":"package edu.kmaooad.service;"},{"lineNumber":2,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":3,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.DTO.SkillDTO;"},{"lineNumber":4,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.exeptions.SkillNotFoundException;"},{"lineNumber":5,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.exeptions.TopicNotFoundException;"},{"lineNumber":6,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.models.Skill;"},{"lineNumber":7,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.repository.SkillRepository;"},{"lineNumber":8,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.repository.TopicRepository;"},{"lineNumber":9,"author":{"gitId":"OleksandRomaniuk"},"content":"import lombok.AllArgsConstructor;"},{"lineNumber":10,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":11,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.stereotype.Service;"},{"lineNumber":12,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":13,"author":{"gitId":"ivanmaister7"},"content":"import java.util.List;"},{"lineNumber":14,"author":{"gitId":"OleksandRomaniuk"},"content":"import java.util.Optional;"},{"lineNumber":15,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":16,"author":{"gitId":"Anastasiia Bezruka"},"content":"@Service"},{"lineNumber":17,"author":{"gitId":"OleksandRomaniuk"},"content":"@AllArgsConstructor"},{"lineNumber":18,"author":{"gitId":"OleksandRomaniuk"},"content":"public class SkillService {"},{"lineNumber":19,"author":{"gitId":"OleksandRomaniuk"},"content":"    @Autowired"},{"lineNumber":20,"author":{"gitId":"OleksandRomaniuk"},"content":"    SkillRepository skillRepository;"},{"lineNumber":21,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":22,"author":{"gitId":"OleksandRomaniuk"},"content":"    public Optional\u003cSkill\u003e createSkill(SkillDTO dto) {"},{"lineNumber":23,"author":{"gitId":"OleksandRomaniuk"},"content":"        Skill skill \u003d new Skill();"},{"lineNumber":24,"author":{"gitId":"OleksandRomaniuk"},"content":"        skill.setSkillID(dto.getSkillId());"},{"lineNumber":25,"author":{"gitId":"OleksandRomaniuk"},"content":"        skill.setSkillName(dto.getSkillName());"},{"lineNumber":26,"author":{"gitId":"OleksandRomaniuk"},"content":"        Optional\u003cSkill\u003e parentTopic \u003d skillRepository.findSkillBySkillID(dto.getParentSkillID());"},{"lineNumber":27,"author":{"gitId":"OleksandRomaniuk"},"content":"        if (parentTopic.isPresent()) {"},{"lineNumber":28,"author":{"gitId":"OleksandRomaniuk"},"content":"            skill.setParentSkill(parentTopic.get());"},{"lineNumber":29,"author":{"gitId":"OleksandRomaniuk"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"OleksandRomaniuk"},"content":"        skillRepository.save(skill);"},{"lineNumber":31,"author":{"gitId":"OleksandRomaniuk"},"content":"        return Optional.of(skill);"},{"lineNumber":32,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":34,"author":{"gitId":"ivanmaister7"},"content":"    public boolean deleteSkill(String skillId) {"},{"lineNumber":35,"author":{"gitId":"OleksandRomaniuk"},"content":"        Optional\u003cSkill\u003e skill \u003d skillRepository.findSkillBySkillID(skillId);"},{"lineNumber":36,"author":{"gitId":"OleksandRomaniuk"},"content":"        if (skill.isPresent()) {"},{"lineNumber":37,"author":{"gitId":"OleksandRomaniuk"},"content":"            skillRepository.delete(skill.get());"},{"lineNumber":38,"author":{"gitId":"ivanmaister7"},"content":"            return !exist(skill.get().getSkillID());"},{"lineNumber":39,"author":{"gitId":"OleksandRomaniuk"},"content":"        } else {"},{"lineNumber":40,"author":{"gitId":"OleksandRomaniuk"},"content":"            throw new SkillNotFoundException(\"Skill not found\");"},{"lineNumber":41,"author":{"gitId":"OleksandRomaniuk"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"ivanmaister7"},"content":"    public boolean updateSkill(String id,SkillDTO dto) {"},{"lineNumber":44,"author":{"gitId":"OleksandRomaniuk"},"content":"        Optional\u003cSkill\u003e skill \u003d skillRepository.findSkillBySkillID(id);"},{"lineNumber":45,"author":{"gitId":"OleksandRomaniuk"},"content":"        if (skill.isPresent()) {"},{"lineNumber":46,"author":{"gitId":"OleksandRomaniuk"},"content":"            skill.get().setSkillName(dto.getSkillName());"},{"lineNumber":47,"author":{"gitId":"OleksandRomaniuk"},"content":"            Optional\u003cSkill\u003e parentSkill \u003d skillRepository.findSkillBySkillID(dto.getParentSkillID());"},{"lineNumber":48,"author":{"gitId":"OleksandRomaniuk"},"content":"            if (!parentSkill.isPresent()) {"},{"lineNumber":49,"author":{"gitId":"OleksandRomaniuk"},"content":"                throw new SkillNotFoundException(\"Skill not found\");"},{"lineNumber":50,"author":{"gitId":"OleksandRomaniuk"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"OleksandRomaniuk"},"content":"            skill.get().setParentSkill(parentSkill.get());"},{"lineNumber":52,"author":{"gitId":"ivanmaister7"},"content":"            Skill updatedSkill \u003d skill.get();"},{"lineNumber":53,"author":{"gitId":"ivanmaister7"},"content":"            skillRepository.save(updatedSkill);"},{"lineNumber":54,"author":{"gitId":"ivanmaister7"},"content":"            return findSkillById(updatedSkill.getSkillID()).equals(updatedSkill);"},{"lineNumber":55,"author":{"gitId":"OleksandRomaniuk"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"OleksandRomaniuk"},"content":"        else{"},{"lineNumber":57,"author":{"gitId":"OleksandRomaniuk"},"content":"            throw new TopicNotFoundException(\"Skill not found\");"},{"lineNumber":58,"author":{"gitId":"OleksandRomaniuk"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":60,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":62,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public Skill findSkillById(String skillId) {"},{"lineNumber":63,"author":{"gitId":"Anastasiia Bezruka"},"content":"        return skillRepository.findById(skillId)"},{"lineNumber":64,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .orElseThrow(() -\u003e new SkillNotFoundException(\"Skill with id \" + skillId + \" not found\"));"},{"lineNumber":65,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":67,"author":{"gitId":"ivanmaister7"},"content":"    public Optional\u003cSkill\u003e findOptionalSkillById(String skillId) {"},{"lineNumber":68,"author":{"gitId":"ivanmaister7"},"content":"        return skillRepository.findById(skillId);"},{"lineNumber":69,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":71,"author":{"gitId":"ivanmaister7"},"content":"    public List\u003cSkill\u003e findAllSkills() {"},{"lineNumber":72,"author":{"gitId":"ivanmaister7"},"content":"        return skillRepository.findAll();"},{"lineNumber":73,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":75,"author":{"gitId":"ivanmaister7"},"content":"    public boolean exist(String id) {"},{"lineNumber":76,"author":{"gitId":"ivanmaister7"},"content":"        return skillRepository.existsById(id);"},{"lineNumber":77,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"OleksandRomaniuk"},"content":"}"}],"authorContributionMap":{"ivanmaister7":18,"OleksandRomaniuk":54,"Anastasiia Bezruka":6}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/service/SkillSetService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anastasiia Bezruka"},"content":"package edu.kmaooad.service;"},{"lineNumber":2,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":3,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.DTO.SkillSetDTO;"},{"lineNumber":4,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.exeptions.SkillNotFoundException;"},{"lineNumber":5,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.exeptions.SkillSetNotFoundException;"},{"lineNumber":6,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.models.Skill;"},{"lineNumber":7,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.models.SkillSet;"},{"lineNumber":8,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.repository.SkillSetRepository;"},{"lineNumber":9,"author":{"gitId":"Anastasiia Bezruka"},"content":"import lombok.extern.slf4j.Slf4j;"},{"lineNumber":10,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":11,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.stereotype.Service;"},{"lineNumber":12,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":13,"author":{"gitId":"ivanmaister7"},"content":"import java.util.List;"},{"lineNumber":14,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.Objects;"},{"lineNumber":15,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.Optional;"},{"lineNumber":16,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.Set;"},{"lineNumber":17,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.stream.Collectors;"},{"lineNumber":18,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":19,"author":{"gitId":"Anastasiia Bezruka"},"content":"@Slf4j"},{"lineNumber":20,"author":{"gitId":"Anastasiia Bezruka"},"content":"@Service"},{"lineNumber":21,"author":{"gitId":"Anastasiia Bezruka"},"content":"public class SkillSetService {"},{"lineNumber":22,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Autowired"},{"lineNumber":23,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private SkillSetRepository skillSetRepository;"},{"lineNumber":24,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Autowired"},{"lineNumber":25,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private SkillService skillService;"},{"lineNumber":26,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":27,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public SkillSet createSkillSet(SkillSetDTO dto) {"},{"lineNumber":28,"author":{"gitId":"Anastasiia Bezruka"},"content":"        return skillSetRepository.save(mapFromDtoToEntity(dto));"},{"lineNumber":29,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":31,"author":{"gitId":"ivanmaister7"},"content":"    public boolean deleteSkillSet(String skillSetId) {"},{"lineNumber":32,"author":{"gitId":"Anastasiia Bezruka"},"content":"        skillSetRepository.deleteById(skillSetId);"},{"lineNumber":33,"author":{"gitId":"ivanmaister7"},"content":"        return !exist(skillSetId);"},{"lineNumber":34,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":36,"author":{"gitId":"ivanmaister7"},"content":"    public boolean updateSkillSet(String id, SkillSetDTO dto) {"},{"lineNumber":37,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Optional\u003cSkillSet\u003e skillSet \u003d skillSetRepository.findById(id);"},{"lineNumber":38,"author":{"gitId":"Anastasiia Bezruka"},"content":"        if (skillSet.isPresent()) {"},{"lineNumber":39,"author":{"gitId":"Anastasiia Bezruka"},"content":"            SkillSet updated \u003d mapFromDtoToEntity(dto);"},{"lineNumber":40,"author":{"gitId":"Anastasiia Bezruka"},"content":"            updated.setSkillSetID(id);"},{"lineNumber":41,"author":{"gitId":"Anastasiia Bezruka"},"content":"            skillSetRepository.save(updated);"},{"lineNumber":42,"author":{"gitId":"ivanmaister7"},"content":"            return updated.equals(findSkillSetById(updated.getSkillSetID()));"},{"lineNumber":43,"author":{"gitId":"Anastasiia Bezruka"},"content":"        } else {"},{"lineNumber":44,"author":{"gitId":"Anastasiia Bezruka"},"content":"            throw new SkillSetNotFoundException(id);"},{"lineNumber":45,"author":{"gitId":"Anastasiia Bezruka"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":48,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public void addSkillToSkillSet(String skillSetId, String skillId) {"},{"lineNumber":49,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Skill skillToAdd \u003d skillService.findSkillById(skillId);"},{"lineNumber":50,"author":{"gitId":"Anastasiia Bezruka"},"content":"        SkillSet skillSet \u003d skillSetRepository.findById(skillSetId)"},{"lineNumber":51,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .orElseThrow(() -\u003e new SkillSetNotFoundException(skillSetId));"},{"lineNumber":52,"author":{"gitId":"Anastasiia Bezruka"},"content":"        skillSet.getSkills().add(skillToAdd);"},{"lineNumber":53,"author":{"gitId":"Anastasiia Bezruka"},"content":"        skillSetRepository.save(skillSet);"},{"lineNumber":54,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":56,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public void removeSkillFromSkillSet(String skillSetId, String skillId) {"},{"lineNumber":57,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Skill skillToRemove \u003d skillService.findSkillById(skillId);"},{"lineNumber":58,"author":{"gitId":"Anastasiia Bezruka"},"content":"        SkillSet skillSet \u003d skillSetRepository.findById(skillSetId)"},{"lineNumber":59,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .orElseThrow(() -\u003e new SkillSetNotFoundException(skillSetId));"},{"lineNumber":60,"author":{"gitId":"Anastasiia Bezruka"},"content":"        skillSet.getSkills().remove(skillToRemove);"},{"lineNumber":61,"author":{"gitId":"Anastasiia Bezruka"},"content":"        skillSetRepository.save(skillSet);"},{"lineNumber":62,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":64,"author":{"gitId":"Anastasiia Bezruka"},"content":"    protected SkillSet mapFromDtoToEntity(SkillSetDTO skillSetDTO) {"},{"lineNumber":65,"author":{"gitId":"Anastasiia Bezruka"},"content":"        SkillSet res \u003d new SkillSet();"},{"lineNumber":66,"author":{"gitId":"Anastasiia Bezruka"},"content":"        res.setSkillSetID(skillSetDTO.getSkillSetId());"},{"lineNumber":67,"author":{"gitId":"Anastasiia Bezruka"},"content":"        res.setSkillSetName(skillSetDTO.getSkillSetName());"},{"lineNumber":68,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Set\u003cSkill\u003e skillList \u003d skillSetDTO.getSkillIds().stream()"},{"lineNumber":69,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .map(skillId -\u003e {"},{"lineNumber":70,"author":{"gitId":"Anastasiia Bezruka"},"content":"                    try {"},{"lineNumber":71,"author":{"gitId":"Anastasiia Bezruka"},"content":"                        return skillService.findSkillById(skillId);"},{"lineNumber":72,"author":{"gitId":"Anastasiia Bezruka"},"content":"                    } catch (SkillNotFoundException skillNotFoundException) {"},{"lineNumber":73,"author":{"gitId":"Anastasiia Bezruka"},"content":"                        log.warn(\"Skill with id {} will not be added to skill set as it doesn\u0027t exists\", skillId);"},{"lineNumber":74,"author":{"gitId":"Anastasiia Bezruka"},"content":"                        return null;"},{"lineNumber":75,"author":{"gitId":"Anastasiia Bezruka"},"content":"                    }"},{"lineNumber":76,"author":{"gitId":"Anastasiia Bezruka"},"content":"                })"},{"lineNumber":77,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .filter(Objects::nonNull)"},{"lineNumber":78,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .collect(Collectors.toSet());"},{"lineNumber":79,"author":{"gitId":"Anastasiia Bezruka"},"content":"        res.setSkills(skillList);"},{"lineNumber":80,"author":{"gitId":"Anastasiia Bezruka"},"content":"        return res;"},{"lineNumber":81,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":83,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public SkillSet findSkillSetById(String skillSetId) {"},{"lineNumber":84,"author":{"gitId":"Anastasiia Bezruka"},"content":"        return skillSetRepository.findById(skillSetId)"},{"lineNumber":85,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .orElseThrow(() -\u003e new SkillSetNotFoundException(skillSetId));"},{"lineNumber":86,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":88,"author":{"gitId":"ivanmaister7"},"content":"    public Optional\u003cSkillSet\u003e findOptionalSkillSetById(String skillSetId) {"},{"lineNumber":89,"author":{"gitId":"ivanmaister7"},"content":"        return skillSetRepository.findById(skillSetId);"},{"lineNumber":90,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":92,"author":{"gitId":"ivanmaister7"},"content":"    public List\u003cSkillSet\u003e findAllSkillSets() {"},{"lineNumber":93,"author":{"gitId":"ivanmaister7"},"content":"        return skillSetRepository.findAll();"},{"lineNumber":94,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":96,"author":{"gitId":"ivanmaister7"},"content":"    public boolean exist(String id) {"},{"lineNumber":97,"author":{"gitId":"ivanmaister7"},"content":"        return skillSetRepository.existsById(id);"},{"lineNumber":98,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"Anastasiia Bezruka"},"content":"}"}],"authorContributionMap":{"ivanmaister7":17,"Anastasiia Bezruka":82}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/service/TopicService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OleksandRomaniuk"},"content":"package edu.kmaooad.service;"},{"lineNumber":2,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":3,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.DTO.TopicDTO;"},{"lineNumber":4,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.exeptions.TopicNotFoundException;"},{"lineNumber":5,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.models.Skill;"},{"lineNumber":6,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.models.Topic;"},{"lineNumber":7,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.repository.TopicRepository;"},{"lineNumber":8,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":9,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.stereotype.Service;"},{"lineNumber":10,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":11,"author":{"gitId":"ivanmaister7"},"content":"import java.util.List;"},{"lineNumber":12,"author":{"gitId":"OleksandRomaniuk"},"content":"import java.util.Optional;"},{"lineNumber":13,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":14,"author":{"gitId":"Anastasiia Bezruka"},"content":"@Service"},{"lineNumber":15,"author":{"gitId":"OleksandRomaniuk"},"content":"public class TopicService {"},{"lineNumber":16,"author":{"gitId":"OleksandRomaniuk"},"content":"    @Autowired"},{"lineNumber":17,"author":{"gitId":"OleksandRomaniuk"},"content":"    TopicRepository topicRepository;"},{"lineNumber":18,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":19,"author":{"gitId":"OleksandRomaniuk"},"content":"    public TopicService(TopicRepository topicRepository) {"},{"lineNumber":20,"author":{"gitId":"OleksandRomaniuk"},"content":"        this.topicRepository \u003d topicRepository;"},{"lineNumber":21,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":23,"author":{"gitId":"OleksandRomaniuk"},"content":"    public Optional\u003cTopic\u003e createTopic(TopicDTO dto) {"},{"lineNumber":24,"author":{"gitId":"OleksandRomaniuk"},"content":"        Topic topic \u003d new Topic();"},{"lineNumber":25,"author":{"gitId":"OleksandRomaniuk"},"content":"        topic.setTopicID(dto.getTopicId());"},{"lineNumber":26,"author":{"gitId":"OleksandRomaniuk"},"content":"        topic.setTopicName(dto.getTopicName());"},{"lineNumber":27,"author":{"gitId":"OleksandRomaniuk"},"content":"        Optional\u003cTopic\u003e parentTopic \u003d topicRepository.findTopicByTopicID(dto.getParentTopicId());"},{"lineNumber":28,"author":{"gitId":"ivanmaister7"},"content":"        parentTopic.ifPresent(topic::setParentTopic);"},{"lineNumber":29,"author":{"gitId":"OleksandRomaniuk"},"content":"        topicRepository.save(topic);"},{"lineNumber":30,"author":{"gitId":"OleksandRomaniuk"},"content":"        return Optional.of(topic);"},{"lineNumber":31,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":33,"author":{"gitId":"ivanmaister7"},"content":"    public boolean deleteTopic(String topicId) {"},{"lineNumber":34,"author":{"gitId":"OleksandRomaniuk"},"content":"        Optional\u003cTopic\u003e topic \u003d topicRepository.findTopicByTopicID(topicId);"},{"lineNumber":35,"author":{"gitId":"OleksandRomaniuk"},"content":"        if (topic.isPresent()) {"},{"lineNumber":36,"author":{"gitId":"OleksandRomaniuk"},"content":"            topicRepository.delete(topic.get());"},{"lineNumber":37,"author":{"gitId":"ivanmaister7"},"content":"            return !exist(topic.get().getTopicID());"},{"lineNumber":38,"author":{"gitId":"OleksandRomaniuk"},"content":"        } else {"},{"lineNumber":39,"author":{"gitId":"OleksandRomaniuk"},"content":"            throw new TopicNotFoundException(\"Topic not found\");"},{"lineNumber":40,"author":{"gitId":"OleksandRomaniuk"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":43,"author":{"gitId":"ivanmaister7"},"content":"    public boolean updateTopic(String id, TopicDTO dto) {"},{"lineNumber":44,"author":{"gitId":"OleksandRomaniuk"},"content":"        Optional\u003cTopic\u003e topic \u003d topicRepository.findTopicByTopicID(id);"},{"lineNumber":45,"author":{"gitId":"OleksandRomaniuk"},"content":"        if (topic.isPresent()) {"},{"lineNumber":46,"author":{"gitId":"OleksandRomaniuk"},"content":"            topic.get().setTopicName(dto.getTopicName());"},{"lineNumber":47,"author":{"gitId":"OleksandRomaniuk"},"content":"            Optional\u003cTopic\u003e parentTopic \u003d topicRepository.findTopicByTopicID(dto.getParentTopicId());"},{"lineNumber":48,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":49,"author":{"gitId":"OleksandRomaniuk"},"content":"                if (!parentTopic.isPresent()) {"},{"lineNumber":50,"author":{"gitId":"OleksandRomaniuk"},"content":"                    throw new TopicNotFoundException(\"Topic not found\");"},{"lineNumber":51,"author":{"gitId":"OleksandRomaniuk"},"content":"                }"},{"lineNumber":52,"author":{"gitId":"OleksandRomaniuk"},"content":"            topic.get().setParentTopic(parentTopic.get());"},{"lineNumber":53,"author":{"gitId":"ivanmaister7"},"content":"            Topic updatedTopic \u003d topic.get();"},{"lineNumber":54,"author":{"gitId":"ivanmaister7"},"content":"            topicRepository.save(updatedTopic);"},{"lineNumber":55,"author":{"gitId":"ivanmaister7"},"content":"            return findTopicById(updatedTopic.getTopicID()).equals(updatedTopic);"},{"lineNumber":56,"author":{"gitId":"OleksandRomaniuk"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"OleksandRomaniuk"},"content":"        else{"},{"lineNumber":58,"author":{"gitId":"OleksandRomaniuk"},"content":"            throw new TopicNotFoundException(\"Topic not found\");"},{"lineNumber":59,"author":{"gitId":"OleksandRomaniuk"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":61,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":63,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public Topic findTopicById(String topicId) {"},{"lineNumber":64,"author":{"gitId":"Anastasiia Bezruka"},"content":"        return topicRepository.findById(topicId)"},{"lineNumber":65,"author":{"gitId":"ivanmaister7"},"content":"                .orElseThrow(() -\u003e new TopicNotFoundException(\"Topic with id \" + topicId + \" not found\"));"},{"lineNumber":66,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"ivanmaister7"},"content":"    public Optional\u003cTopic\u003e findOptionalTopicById(String TopicId) {"},{"lineNumber":68,"author":{"gitId":"ivanmaister7"},"content":"        return topicRepository.findById(TopicId);"},{"lineNumber":69,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":71,"author":{"gitId":"ivanmaister7"},"content":"    public List\u003cTopic\u003e findAllTopics() {"},{"lineNumber":72,"author":{"gitId":"ivanmaister7"},"content":"        return topicRepository.findAll();"},{"lineNumber":73,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"ivanmaister7"},"content":"    public boolean exist(String id) {"},{"lineNumber":75,"author":{"gitId":"ivanmaister7"},"content":"        return topicRepository.existsById(id);"},{"lineNumber":76,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"OleksandRomaniuk"},"content":"}"}],"authorContributionMap":{"ivanmaister7":19,"OleksandRomaniuk":53,"Anastasiia Bezruka":5}},{"path":"kmaooad-functions/src/main/resources/application.yaml","fileType":"yaml","lines":[{"lineNumber":1,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":2,"author":{"gitId":"ivanmaister7"},"content":"server:"},{"lineNumber":3,"author":{"gitId":"ivanmaister7"},"content":"  port: 8000"}],"authorContributionMap":{"yostashko":1,"ivanmaister7":2}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/BotRequestMapperTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanmaister7"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanmaister7"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;"},{"lineNumber":4,"author":{"gitId":"ivanmaister7"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":6,"author":{"gitId":"ivanmaister7"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":7,"author":{"gitId":"ivanmaister7"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":9,"author":{"gitId":"ivanmaister7"},"content":"class BotRequestMapperTest {"},{"lineNumber":10,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":11,"author":{"gitId":"ivanmaister7"},"content":"    BotRequestMapper mapper \u003d new BotRequestMapper(new ObjectMapper());"},{"lineNumber":12,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"ivanmaister7"},"content":"    void mapFromTest() {"},{"lineNumber":14,"author":{"gitId":"ivanmaister7"},"content":"            String testJson \u003d \"{\\\"update_id\\\":805877849,\\n\" +"},{"lineNumber":15,"author":{"gitId":"ivanmaister7"},"content":"                    \" \\\"message\\\":{\\n\" +"},{"lineNumber":16,"author":{"gitId":"ivanmaister7"},"content":"                    \"\\t\\\"message_id\\\":4,\\n\" +"},{"lineNumber":17,"author":{"gitId":"ivanmaister7"},"content":"                    \"\\t\\\"from\\\":{\\n\" +"},{"lineNumber":18,"author":{"gitId":"ivanmaister7"},"content":"                    \"\\t\\t\\\"id\\\":336588268,\\n\" +"},{"lineNumber":19,"author":{"gitId":"ivanmaister7"},"content":"                    \"\\t\\t\\\"is_bot\\\":false,\\n\" +"},{"lineNumber":20,"author":{"gitId":"ivanmaister7"},"content":"                    \"\\t\\t\\\"first_name\\\":\\\"\\\\u0412\\\\u0430\\\\u043d\\\\u0451\\\\u043a\\\",\\n\" +"},{"lineNumber":21,"author":{"gitId":"ivanmaister7"},"content":"                    \"\\t\\t\\\"username\\\":\\\"ivaannne\\\",\\n\" +"},{"lineNumber":22,"author":{"gitId":"ivanmaister7"},"content":"                    \"\\t\\t\\\"language_code\\\":\\\"uk\\\"\\n\" +"},{"lineNumber":23,"author":{"gitId":"ivanmaister7"},"content":"                    \"\\t\\t},\\n\" +"},{"lineNumber":24,"author":{"gitId":"ivanmaister7"},"content":"                    \"\\t\\\"chat\\\":{\\n\" +"},{"lineNumber":25,"author":{"gitId":"ivanmaister7"},"content":"                    \"\\t\\t\\\"id\\\":336588268,\\n\" +"},{"lineNumber":26,"author":{"gitId":"ivanmaister7"},"content":"                    \"\\t\\t\\\"first_name\\\":\\\"\\\\u0412\\\\u0430\\\\u043d\\\\u0451\\\\u043a\\\",\\n\" +"},{"lineNumber":27,"author":{"gitId":"ivanmaister7"},"content":"                    \"\\t\\t\\\"username\\\":\\\"ivaannne\\\",\\n\" +"},{"lineNumber":28,"author":{"gitId":"ivanmaister7"},"content":"                    \"\\t\\t\\\"type\\\":\\\"private\\\"\\n\" +"},{"lineNumber":29,"author":{"gitId":"ivanmaister7"},"content":"                    \"\\t\\t},\\n\" +"},{"lineNumber":30,"author":{"gitId":"ivanmaister7"},"content":"                    \"\\t\\\"date\\\":1664530834,\\n\" +"},{"lineNumber":31,"author":{"gitId":"ivanmaister7"},"content":"                    \"\\t\\\"text\\\":\\\"bot\\\"\\n\" +"},{"lineNumber":32,"author":{"gitId":"ivanmaister7"},"content":"                    \"\\t}\\n\" +"},{"lineNumber":33,"author":{"gitId":"ivanmaister7"},"content":"                    \"}\";"},{"lineNumber":34,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":35,"author":{"gitId":"ivanmaister7"},"content":"            BotRequest mappedRequest \u003d mapper.mapFrom(testJson);"},{"lineNumber":36,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":37,"author":{"gitId":"ivanmaister7"},"content":"            assertEquals(4L, mappedRequest.getMessage().getMessage_id());"},{"lineNumber":38,"author":{"gitId":"ivanmaister7"},"content":"            assertEquals(\"bot\", mappedRequest.getMessage().getText());"},{"lineNumber":39,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"ivanmaister7"},"content":"    void mapFromTestWithoutID() {"},{"lineNumber":42,"author":{"gitId":"ivanmaister7"},"content":"        String testJson \u003d \"{\\\"update_id\\\":805877849,\\n\" +"},{"lineNumber":43,"author":{"gitId":"ivanmaister7"},"content":"                \" \\\"message\\\":{\\n\" +"},{"lineNumber":44,"author":{"gitId":"ivanmaister7"},"content":"                \"\\t\\\"text\\\":\\\"bot\\\"\\n\" +"},{"lineNumber":45,"author":{"gitId":"ivanmaister7"},"content":"                \"\\t}\\n\" +"},{"lineNumber":46,"author":{"gitId":"ivanmaister7"},"content":"                \"}\";"},{"lineNumber":47,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":48,"author":{"gitId":"ivanmaister7"},"content":"        BotRequest mappedRequest \u003d mapper.mapFrom(testJson);"},{"lineNumber":49,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":50,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(0, mappedRequest.getMessage().getMessage_id());"},{"lineNumber":51,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(\"bot\", mappedRequest.getMessage().getText());"},{"lineNumber":52,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":54,"author":{"gitId":"ivanmaister7"},"content":"    void mapFromTestWithoutText() {"},{"lineNumber":55,"author":{"gitId":"ivanmaister7"},"content":"        String testJson \u003d \"{\\\"update_id\\\":805877849,\\n\" +"},{"lineNumber":56,"author":{"gitId":"ivanmaister7"},"content":"                \" \\\"message\\\":{\\n\" +"},{"lineNumber":57,"author":{"gitId":"ivanmaister7"},"content":"                \"\\t\\\"message_id\\\":4\\n\" +"},{"lineNumber":58,"author":{"gitId":"ivanmaister7"},"content":"                \"\\t}\\n\" +"},{"lineNumber":59,"author":{"gitId":"ivanmaister7"},"content":"                \"}\";"},{"lineNumber":60,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":61,"author":{"gitId":"ivanmaister7"},"content":"        BotRequest mappedRequest \u003d mapper.mapFrom(testJson);"},{"lineNumber":62,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":63,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(4L, mappedRequest.getMessage().getMessage_id());"},{"lineNumber":64,"author":{"gitId":"ivanmaister7"},"content":"        assertNull(mappedRequest.getMessage().getText());"},{"lineNumber":65,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":67,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":68,"author":{"gitId":"Anastasiia Bezruka"},"content":"    void deserializeToTest() {"},{"lineNumber":69,"author":{"gitId":"Anastasiia Bezruka"},"content":"        String expectedMessage \u003d \"{\\\"update_id\\\":1,\\\"message\\\":{\\\"message_id\\\":1,\" +"},{"lineNumber":70,"author":{"gitId":"Anastasiia Bezruka"},"content":"                \"\\\"text\\\":\\\"bot\\\"}}\";"},{"lineNumber":71,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":72,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Message message \u003d new Message(1, \"bot\");"},{"lineNumber":73,"author":{"gitId":"Anastasiia Bezruka"},"content":"        BotRequest mappedRequest \u003d new BotRequest(1, message);"},{"lineNumber":74,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":75,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(expectedMessage, mapper.deserialize(mappedRequest));"},{"lineNumber":76,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":78,"author":{"gitId":"ivanmaister7"},"content":"}"}],"authorContributionMap":{"ivanmaister7":67,"Anastasiia Bezruka":11}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/BotRequestTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanmaister7"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanmaister7"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":5,"author":{"gitId":"ivanmaister7"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":6,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":7,"author":{"gitId":"ivanmaister7"},"content":"class BotRequestTest {"},{"lineNumber":8,"author":{"gitId":"ivanmaister7"},"content":"    BotRequest botRequest \u003d new BotRequest(123L,new Message(4L,\"Bot\"));"},{"lineNumber":9,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":10,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"ivanmaister7"},"content":"    void getUpdate_idTest() {"},{"lineNumber":12,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(123L, botRequest.getUpdate_id());"},{"lineNumber":13,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":15,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"ivanmaister7"},"content":"    void getMessageTest() {"},{"lineNumber":17,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(new Message(4L,\"Bot\"), botRequest.getMessage());"},{"lineNumber":18,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":20,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"ivanmaister7"},"content":"    void setUpdate_idTest() {"},{"lineNumber":22,"author":{"gitId":"ivanmaister7"},"content":"        BotRequest botRequest2 \u003d new BotRequest(botRequest.getUpdate_id(), botRequest.getMessage());"},{"lineNumber":23,"author":{"gitId":"ivanmaister7"},"content":"        botRequest2.setUpdate_id(1234L);"},{"lineNumber":24,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":25,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(1234L, botRequest2.getUpdate_id());"},{"lineNumber":26,"author":{"gitId":"ivanmaister7"},"content":"        assertNotEquals(botRequest2.getUpdate_id(), botRequest.getUpdate_id());"},{"lineNumber":27,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":29,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"ivanmaister7"},"content":"    void setMessageTest() {"},{"lineNumber":31,"author":{"gitId":"ivanmaister7"},"content":"        BotRequest botRequest2 \u003d new BotRequest(botRequest.getUpdate_id(), botRequest.getMessage());"},{"lineNumber":32,"author":{"gitId":"ivanmaister7"},"content":"        botRequest2.setMessage(new Message(42L,\"Bot2\"));"},{"lineNumber":33,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":34,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(new Message(42L,\"Bot2\"), botRequest2.getMessage());"},{"lineNumber":35,"author":{"gitId":"ivanmaister7"},"content":"        assertNotEquals(botRequest2.getMessage(), botRequest.getMessage());"},{"lineNumber":36,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":38,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":39,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void testEqualsAndHashCodeTest() {"},{"lineNumber":40,"author":{"gitId":"ivanmaister7"},"content":"        BotRequest botRequest2 \u003d new BotRequest(botRequest.getUpdate_id(), botRequest.getMessage());"},{"lineNumber":41,"author":{"gitId":"ivanmaister7"},"content":"        assertTrue(botRequest.equals(botRequest2));"},{"lineNumber":42,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":43,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        //test hashcode"},{"lineNumber":44,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":45,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertTrue(botRequest.hashCode()\u003d\u003dbotRequest2.hashCode());"},{"lineNumber":46,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":47,"author":{"gitId":"ivanmaister7"},"content":"        botRequest2.setUpdate_id(1234L);"},{"lineNumber":48,"author":{"gitId":"ivanmaister7"},"content":"        assertFalse(botRequest.equals(botRequest2));"},{"lineNumber":49,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":51,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":52,"author":{"gitId":"ivanmaister7"},"content":"    void testToStringTest() {"},{"lineNumber":53,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(\"BotRequest(update_id\u003d123, message\u003dMessage(message_id\u003d4, text\u003dBot))\", botRequest.toString());"},{"lineNumber":54,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"ivanmaister7"},"content":"}"}],"authorContributionMap":{"Марія-Валерія Гуза":6,"ivanmaister7":49}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/BotResponseTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anastasiia Bezruka"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":3,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":5,"author":{"gitId":"Anastasiia Bezruka"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":6,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":7,"author":{"gitId":"Anastasiia Bezruka"},"content":"public class BotResponseTest {"},{"lineNumber":8,"author":{"gitId":"Anastasiia Bezruka"},"content":"    BotResponse botResponse \u003d new BotResponse(123);"},{"lineNumber":9,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":10,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"Anastasiia Bezruka"},"content":"    void getMessageIdTest() {"},{"lineNumber":12,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(123, botResponse.getMessageId());"},{"lineNumber":13,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":15,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"Anastasiia Bezruka"},"content":"    void setMessageIdTest() {"},{"lineNumber":17,"author":{"gitId":"Anastasiia Bezruka"},"content":"        BotResponse botResponse1 \u003d new BotResponse(botResponse.getMessageId());"},{"lineNumber":18,"author":{"gitId":"Anastasiia Bezruka"},"content":"        botResponse1.setMessageId(1234L);"},{"lineNumber":19,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":20,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(1234L, botResponse1.getMessageId());"},{"lineNumber":21,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":23,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"Anastasiia Bezruka"},"content":"    void testEquals() {"},{"lineNumber":25,"author":{"gitId":"Anastasiia Bezruka"},"content":"        BotResponse botResponse1 \u003d new BotResponse(botResponse.getMessageId());"},{"lineNumber":26,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertTrue(botResponse1.equals(botResponse));"},{"lineNumber":27,"author":{"gitId":"Anastasiia Bezruka"},"content":"        botResponse1.setMessageId(1234L);"},{"lineNumber":28,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertFalse(botResponse1.equals(botResponse));"},{"lineNumber":29,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":31,"author":{"gitId":"yostashko"},"content":"    @Test"},{"lineNumber":32,"author":{"gitId":"yostashko"},"content":"    void tesHashNotEqualsNull() {"},{"lineNumber":33,"author":{"gitId":"yostashko"},"content":"        BotResponse botResponse1 \u003d new BotResponse(botResponse.getMessageId());"},{"lineNumber":34,"author":{"gitId":"yostashko"},"content":"        assertNotNull(botResponse1.hashCode());"},{"lineNumber":35,"author":{"gitId":"yostashko"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":37,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":38,"author":{"gitId":"ivanmaister7"},"content":"    void canEqual() {"},{"lineNumber":39,"author":{"gitId":"ivanmaister7"},"content":"        BotResponse botResponse1 \u003d new BotResponse(botResponse.getMessageId());"},{"lineNumber":40,"author":{"gitId":"ivanmaister7"},"content":"        assertTrue(botResponse1.canEqual(botResponse));"},{"lineNumber":41,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":43,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":44,"author":{"gitId":"ivanmaister7"},"content":"    void testToString() {"},{"lineNumber":45,"author":{"gitId":"ivanmaister7"},"content":"        System.out.println(botResponse);"},{"lineNumber":46,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Anastasiia Bezruka"},"content":"}"}],"authorContributionMap":{"yostashko":7,"Марія-Валерія Гуза":2,"ivanmaister7":10,"Anastasiia Bezruka":28}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/DTO/SkillDTOTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanmaister7"},"content":"package edu.kmaooad.DTO;"},{"lineNumber":2,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanmaister7"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":5,"author":{"gitId":"ivanmaister7"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":6,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":7,"author":{"gitId":"ivanmaister7"},"content":"class SkillDTOTest {"},{"lineNumber":8,"author":{"gitId":"ivanmaister7"},"content":"    SkillDTO skillDTO \u003d new SkillDTO(\"1\");"},{"lineNumber":9,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":10,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"ivanmaister7"},"content":"    void testEquals() {"},{"lineNumber":12,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(skillDTO, new SkillDTO(\"1\"));"},{"lineNumber":13,"author":{"gitId":"ivanmaister7"},"content":"        assertTrue(skillDTO.equals(new SkillDTO(\"1\")));"},{"lineNumber":14,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":16,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"ivanmaister7"},"content":"    void testHashCode() {"},{"lineNumber":18,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(skillDTO.hashCode(), new SkillDTO(\"1\").hashCode());"},{"lineNumber":19,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"ivanmaister7"},"content":"}"}],"authorContributionMap":{"ivanmaister7":20}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/FunctionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"github-classroom[bot]"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":3,"author":{"gitId":"yostashko"},"content":"import javax.naming.NameNotFoundException;"},{"lineNumber":4,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":5,"author":{"gitId":"yostashko"},"content":"import com.mongodb.MongoConfigurationException;"},{"lineNumber":6,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.service.MongoService;"},{"lineNumber":7,"author":{"gitId":"yostashko"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":8,"author":{"gitId":"yostashko"},"content":"import org.junit.jupiter.api.Disabled;"},{"lineNumber":9,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.junit.jupiter.api.extension.ExtendWith;"},{"lineNumber":10,"author":{"gitId":"yostashko"},"content":"import org.mockito.InjectMocks;"},{"lineNumber":11,"author":{"gitId":"yostashko"},"content":"import org.mockito.Mock;"},{"lineNumber":12,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.mockito.junit.jupiter.MockitoExtension;"},{"lineNumber":13,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":14,"author":{"gitId":"github-classroom[bot]"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":15,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":16,"author":{"gitId":"yostashko"},"content":"import org.springframework.boot.autoconfigure.ImportAutoConfiguration;"},{"lineNumber":17,"author":{"gitId":"yostashko"},"content":"import org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration;"},{"lineNumber":18,"author":{"gitId":"yostashko"},"content":"import org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration;"},{"lineNumber":19,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.boot.test.autoconfigure.web.reactive.AutoConfigureWebTestClient;"},{"lineNumber":20,"author":{"gitId":"yostashko"},"content":"import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;"},{"lineNumber":21,"author":{"gitId":"yostashko"},"content":"import org.springframework.boot.test.context.SpringBootTest;"},{"lineNumber":22,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.boot.test.mock.mockito.MockBean;"},{"lineNumber":23,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.cloud.function.context.test.FunctionalSpringBootTest;"},{"lineNumber":24,"author":{"gitId":"yostashko"},"content":"import org.springframework.test.context.TestPropertySource;"},{"lineNumber":25,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.test.web.reactive.server.WebTestClient;"},{"lineNumber":26,"author":{"gitId":"yostashko"},"content":"import org.springframework.test.web.servlet.MockMvc;"},{"lineNumber":27,"author":{"gitId":"yostashko"},"content":"import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;"},{"lineNumber":28,"author":{"gitId":"Anastasiia Bezruka"},"content":"import reactor.core.publisher.Mono;"},{"lineNumber":29,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":30,"author":{"gitId":"yostashko"},"content":"import static org.junit.Assert.assertThrows;"},{"lineNumber":31,"author":{"gitId":"yostashko"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":32,"author":{"gitId":"github-classroom[bot]"},"content":"import static org.mockito.ArgumentMatchers.*;"},{"lineNumber":33,"author":{"gitId":"github-classroom[bot]"},"content":"import static org.mockito.Mockito.*;"},{"lineNumber":34,"author":{"gitId":"yostashko"},"content":"import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;"},{"lineNumber":35,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":36,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":37,"author":{"gitId":"github-classroom[bot]"},"content":"/**"},{"lineNumber":38,"author":{"gitId":"github-classroom[bot]"},"content":" * Unit test for Function class."},{"lineNumber":39,"author":{"gitId":"github-classroom[bot]"},"content":" */"},{"lineNumber":40,"author":{"gitId":"Anastasiia Bezruka"},"content":"@FunctionalSpringBootTest"},{"lineNumber":41,"author":{"gitId":"ivanmaister7"},"content":"@Disabled"},{"lineNumber":42,"author":{"gitId":"ivanmaister7"},"content":"@AutoConfigureWebTestClient"},{"lineNumber":43,"author":{"gitId":"yostashko"},"content":"@TestPropertySource(properties \u003d \"spring.mongodb.embedded.version\u003d3.5.5\")"},{"lineNumber":44,"author":{"gitId":"github-classroom[bot]"},"content":"public class FunctionTest {"},{"lineNumber":45,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Autowired"},{"lineNumber":46,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private WebTestClient client;"},{"lineNumber":47,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":48,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @MockBean"},{"lineNumber":49,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private MongoService mongoService;"},{"lineNumber":50,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":51,"author":{"gitId":"github-classroom[bot]"},"content":"    @Test"},{"lineNumber":52,"author":{"gitId":"ivanmaister7"},"content":"    public void testFunctionWithoutBody() {"},{"lineNumber":53,"author":{"gitId":"Anastasiia Bezruka"},"content":"        client.post().uri(\"/api/TelegramWebhook\")"},{"lineNumber":54,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .exchange()"},{"lineNumber":55,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .expectStatus()"},{"lineNumber":56,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .is5xxServerError();"},{"lineNumber":57,"author":{"gitId":"github-classroom[bot]"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":59,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":60,"author":{"gitId":"ivanmaister7"},"content":"    public void testFunctionWithMessageWithoutMessageIdInBody() {"},{"lineNumber":61,"author":{"gitId":"Anastasiia Bezruka"},"content":"        long id \u003d 7;"},{"lineNumber":62,"author":{"gitId":"Anastasiia Bezruka"},"content":"        BotRequest botRequest \u003d new BotRequest(id, null);"},{"lineNumber":63,"author":{"gitId":"Anastasiia Bezruka"},"content":"        client.post().uri(\"/api/TelegramWebhook\")"},{"lineNumber":64,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .body(Mono.just(botRequest), BotRequest.class)"},{"lineNumber":65,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .exchange()"},{"lineNumber":66,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .expectStatus()"},{"lineNumber":67,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .is5xxServerError();"},{"lineNumber":68,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":70,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":71,"author":{"gitId":"ivanmaister7"},"content":"    public void testFunctionWithMessageIdWithoutMessageInBody() {"},{"lineNumber":72,"author":{"gitId":"Anastasiia Bezruka"},"content":"        long id \u003d 7;"},{"lineNumber":73,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Message message \u003d new Message(id, null);"},{"lineNumber":74,"author":{"gitId":"Anastasiia Bezruka"},"content":"        BotRequest botRequest \u003d new BotRequest(id, message);"},{"lineNumber":75,"author":{"gitId":"Anastasiia Bezruka"},"content":"        client.post().uri(\"/api/TelegramWebhook\")"},{"lineNumber":76,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .body(Mono.just(botRequest), BotRequest.class)"},{"lineNumber":77,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .exchange()"},{"lineNumber":78,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .expectStatus()"},{"lineNumber":79,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .is5xxServerError();"},{"lineNumber":80,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":82,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":83,"author":{"gitId":"ivanmaister7"},"content":"    public void testFunctionWithCorrectBody() {"},{"lineNumber":84,"author":{"gitId":"ivanmaister7"},"content":"        int ID \u003d 12345;"},{"lineNumber":85,"author":{"gitId":"Anastasiia Bezruka"},"content":"        BotResponse expected \u003d new BotResponse(ID);"},{"lineNumber":86,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Message message \u003d new Message(ID, \"message\");"},{"lineNumber":87,"author":{"gitId":"Anastasiia Bezruka"},"content":"        BotRequest botRequest \u003d new BotRequest(ID, message);"},{"lineNumber":88,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":89,"author":{"gitId":"Anastasiia Bezruka"},"content":"        doNothing().when(mongoService).insertOneRequest(any(BotRequest.class));"},{"lineNumber":90,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":91,"author":{"gitId":"Anastasiia Bezruka"},"content":"        client.post().uri(\"/api/TelegramWebhook\")"},{"lineNumber":92,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .body(Mono.just(botRequest), BotRequest.class)"},{"lineNumber":93,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .exchange()"},{"lineNumber":94,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .expectStatus()"},{"lineNumber":95,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .isOk()"},{"lineNumber":96,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .expectBody(BotResponse.class)"},{"lineNumber":97,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .isEqualTo(expected);"},{"lineNumber":98,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":100,"author":{"gitId":"yostashko"},"content":"    @Test"},{"lineNumber":101,"author":{"gitId":"yostashko"},"content":"    public void testMongo() {"},{"lineNumber":102,"author":{"gitId":"yostashko"},"content":"        MongoService mongoService1 \u003d new MongoService();"},{"lineNumber":103,"author":{"gitId":"yostashko"},"content":"        int ID \u003d 12345;"},{"lineNumber":104,"author":{"gitId":"yostashko"},"content":"        BotResponse expected \u003d new BotResponse(ID);"},{"lineNumber":105,"author":{"gitId":"yostashko"},"content":"        Message message \u003d new Message(ID, \"message\");"},{"lineNumber":106,"author":{"gitId":"yostashko"},"content":"        BotRequest botRequest \u003d new BotRequest(ID, message);"},{"lineNumber":107,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":108,"author":{"gitId":"yostashko"},"content":"        MongoConfigurationException thrown \u003d Assertions.assertThrows(MongoConfigurationException.class, () -\u003e {"},{"lineNumber":109,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":110,"author":{"gitId":"yostashko"},"content":"            mongoService1.insertOneRequest(botRequest);"},{"lineNumber":111,"author":{"gitId":"ivanmaister7"},"content":"            Assertions.assertTrue(true);"},{"lineNumber":112,"author":{"gitId":"yostashko"},"content":"        });"},{"lineNumber":113,"author":{"gitId":"yostashko"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"github-classroom[bot]"},"content":"}"}],"authorContributionMap":{"yostashko":33,"ivanmaister7":20,"github-classroom[bot]":15,"Anastasiia Bezruka":46}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/HttpResponseMessageMock.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"github-classroom[bot]"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":3,"author":{"gitId":"github-classroom[bot]"},"content":"import com.microsoft.azure.functions.*;"},{"lineNumber":4,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":5,"author":{"gitId":"github-classroom[bot]"},"content":"import java.util.Map;"},{"lineNumber":6,"author":{"gitId":"github-classroom[bot]"},"content":"import java.util.HashMap;"},{"lineNumber":7,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":8,"author":{"gitId":"github-classroom[bot]"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"github-classroom[bot]"},"content":" * The mock for HttpResponseMessage, can be used in unit tests to verify if the"},{"lineNumber":10,"author":{"gitId":"github-classroom[bot]"},"content":" * returned response by HTTP trigger function is correct or not."},{"lineNumber":11,"author":{"gitId":"github-classroom[bot]"},"content":" */"},{"lineNumber":12,"author":{"gitId":"github-classroom[bot]"},"content":"public class HttpResponseMessageMock implements HttpResponseMessage {"},{"lineNumber":13,"author":{"gitId":"github-classroom[bot]"},"content":"    private int httpStatusCode;"},{"lineNumber":14,"author":{"gitId":"github-classroom[bot]"},"content":"    private HttpStatusType httpStatus;"},{"lineNumber":15,"author":{"gitId":"github-classroom[bot]"},"content":"    private Object body;"},{"lineNumber":16,"author":{"gitId":"github-classroom[bot]"},"content":"    private Map\u003cString, String\u003e headers;"},{"lineNumber":17,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":18,"author":{"gitId":"github-classroom[bot]"},"content":"    public HttpResponseMessageMock(HttpStatusType status, Map\u003cString, String\u003e headers, Object body) {"},{"lineNumber":19,"author":{"gitId":"github-classroom[bot]"},"content":"        this.httpStatus \u003d status;"},{"lineNumber":20,"author":{"gitId":"github-classroom[bot]"},"content":"        this.httpStatusCode \u003d status.value();"},{"lineNumber":21,"author":{"gitId":"github-classroom[bot]"},"content":"        this.headers \u003d headers;"},{"lineNumber":22,"author":{"gitId":"github-classroom[bot]"},"content":"        this.body \u003d body;"},{"lineNumber":23,"author":{"gitId":"github-classroom[bot]"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":25,"author":{"gitId":"github-classroom[bot]"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"github-classroom[bot]"},"content":"    public HttpStatusType getStatus() {"},{"lineNumber":27,"author":{"gitId":"github-classroom[bot]"},"content":"        return this.httpStatus;"},{"lineNumber":28,"author":{"gitId":"github-classroom[bot]"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":30,"author":{"gitId":"github-classroom[bot]"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"github-classroom[bot]"},"content":"    public int getStatusCode() {"},{"lineNumber":32,"author":{"gitId":"github-classroom[bot]"},"content":"        return httpStatusCode;"},{"lineNumber":33,"author":{"gitId":"github-classroom[bot]"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":35,"author":{"gitId":"github-classroom[bot]"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"github-classroom[bot]"},"content":"    public String getHeader(String key) {"},{"lineNumber":37,"author":{"gitId":"github-classroom[bot]"},"content":"        return this.headers.get(key);"},{"lineNumber":38,"author":{"gitId":"github-classroom[bot]"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":40,"author":{"gitId":"github-classroom[bot]"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"github-classroom[bot]"},"content":"    public Object getBody() {"},{"lineNumber":42,"author":{"gitId":"github-classroom[bot]"},"content":"        return this.body;"},{"lineNumber":43,"author":{"gitId":"github-classroom[bot]"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":45,"author":{"gitId":"github-classroom[bot]"},"content":"    public static class HttpResponseMessageBuilderMock implements HttpResponseMessage.Builder {"},{"lineNumber":46,"author":{"gitId":"github-classroom[bot]"},"content":"        private Object body;"},{"lineNumber":47,"author":{"gitId":"github-classroom[bot]"},"content":"        private int httpStatusCode;"},{"lineNumber":48,"author":{"gitId":"github-classroom[bot]"},"content":"        private Map\u003cString, String\u003e headers \u003d new HashMap\u003c\u003e();"},{"lineNumber":49,"author":{"gitId":"github-classroom[bot]"},"content":"        private HttpStatusType httpStatus;"},{"lineNumber":50,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":51,"author":{"gitId":"github-classroom[bot]"},"content":"        public Builder status(HttpStatus status) {"},{"lineNumber":52,"author":{"gitId":"github-classroom[bot]"},"content":"            this.httpStatusCode \u003d status.value();"},{"lineNumber":53,"author":{"gitId":"github-classroom[bot]"},"content":"            this.httpStatus \u003d status;"},{"lineNumber":54,"author":{"gitId":"github-classroom[bot]"},"content":"            return this;"},{"lineNumber":55,"author":{"gitId":"github-classroom[bot]"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":57,"author":{"gitId":"github-classroom[bot]"},"content":"        @Override"},{"lineNumber":58,"author":{"gitId":"github-classroom[bot]"},"content":"        public Builder status(HttpStatusType httpStatusType) {"},{"lineNumber":59,"author":{"gitId":"github-classroom[bot]"},"content":"            this.httpStatusCode \u003d httpStatusType.value();"},{"lineNumber":60,"author":{"gitId":"github-classroom[bot]"},"content":"            this.httpStatus \u003d httpStatusType;"},{"lineNumber":61,"author":{"gitId":"github-classroom[bot]"},"content":"            return this;"},{"lineNumber":62,"author":{"gitId":"github-classroom[bot]"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":64,"author":{"gitId":"github-classroom[bot]"},"content":"        @Override"},{"lineNumber":65,"author":{"gitId":"github-classroom[bot]"},"content":"        public HttpResponseMessage.Builder header(String key, String value) {"},{"lineNumber":66,"author":{"gitId":"github-classroom[bot]"},"content":"            this.headers.put(key, value);"},{"lineNumber":67,"author":{"gitId":"github-classroom[bot]"},"content":"            return this;"},{"lineNumber":68,"author":{"gitId":"github-classroom[bot]"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":70,"author":{"gitId":"github-classroom[bot]"},"content":"        @Override"},{"lineNumber":71,"author":{"gitId":"github-classroom[bot]"},"content":"        public HttpResponseMessage.Builder body(Object body) {"},{"lineNumber":72,"author":{"gitId":"github-classroom[bot]"},"content":"            this.body \u003d body;"},{"lineNumber":73,"author":{"gitId":"github-classroom[bot]"},"content":"            return this;"},{"lineNumber":74,"author":{"gitId":"github-classroom[bot]"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"github-classroom[bot]"},"content":""},{"lineNumber":76,"author":{"gitId":"github-classroom[bot]"},"content":"        @Override"},{"lineNumber":77,"author":{"gitId":"github-classroom[bot]"},"content":"        public HttpResponseMessage build() {"},{"lineNumber":78,"author":{"gitId":"github-classroom[bot]"},"content":"            return new HttpResponseMessageMock(this.httpStatus, this.headers, this.body);"},{"lineNumber":79,"author":{"gitId":"github-classroom[bot]"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"github-classroom[bot]"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"github-classroom[bot]"},"content":"}"}],"authorContributionMap":{"github-classroom[bot]":81}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/MessageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanmaister7"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanmaister7"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":5,"author":{"gitId":"ivanmaister7"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":6,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":7,"author":{"gitId":"ivanmaister7"},"content":"class MessageTest {"},{"lineNumber":8,"author":{"gitId":"ivanmaister7"},"content":"    Message message \u003d new Message(4L,\"Bot\");"},{"lineNumber":9,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":10,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"ivanmaister7"},"content":"    void getMessage_idTest() {"},{"lineNumber":12,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(4L, message.getMessage_id());"},{"lineNumber":13,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":15,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"ivanmaister7"},"content":"    void getTextTest() {"},{"lineNumber":17,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(\"Bot\", message.getText());"},{"lineNumber":18,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":20,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"ivanmaister7"},"content":"    void setMessage_idTest() {"},{"lineNumber":22,"author":{"gitId":"ivanmaister7"},"content":"        Message message2 \u003d new Message(message.getMessage_id(), message.getText());"},{"lineNumber":23,"author":{"gitId":"ivanmaister7"},"content":"        message2.setMessage_id(5L);"},{"lineNumber":24,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":25,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(5L, message2.getMessage_id());"},{"lineNumber":26,"author":{"gitId":"ivanmaister7"},"content":"        assertNotEquals(message.getMessage_id(), message2.getMessage_id());"},{"lineNumber":27,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":29,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"ivanmaister7"},"content":"    void setTextTest() {"},{"lineNumber":31,"author":{"gitId":"ivanmaister7"},"content":"        Message message2 \u003d new Message(message.getMessage_id(), message.getText());"},{"lineNumber":32,"author":{"gitId":"ivanmaister7"},"content":"        message2.setText(\"Bot2\");"},{"lineNumber":33,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":34,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(\"Bot2\", message2.getText());"},{"lineNumber":35,"author":{"gitId":"ivanmaister7"},"content":"        assertNotEquals(message.getText(), message2.getText());"},{"lineNumber":36,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":38,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":39,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void testEqualsAndHashCodeTest() {"},{"lineNumber":40,"author":{"gitId":"ivanmaister7"},"content":"        Message message2 \u003d new Message(message.getMessage_id(), message.getText());"},{"lineNumber":41,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(message2, message);"},{"lineNumber":42,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(message2, message);"},{"lineNumber":43,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":44,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        //test hash code"},{"lineNumber":45,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(message.hashCode(), message2.hashCode());"},{"lineNumber":46,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":47,"author":{"gitId":"ivanmaister7"},"content":"        message2.setText(\"NOT BOT\");"},{"lineNumber":48,"author":{"gitId":"ivanmaister7"},"content":"        assertNotEquals(message2, message);"},{"lineNumber":49,"author":{"gitId":"ivanmaister7"},"content":"        assertNotEquals(message2, message);"},{"lineNumber":50,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":51,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":53,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":54,"author":{"gitId":"ivanmaister7"},"content":"    void testToStringTest() {"},{"lineNumber":55,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(\"Message(message_id\u003d4, text\u003dBot)\", message.toString());"},{"lineNumber":56,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":58,"author":{"gitId":"yostashko"},"content":"    @Test"},{"lineNumber":59,"author":{"gitId":"yostashko"},"content":"    void testConstants(){"},{"lineNumber":60,"author":{"gitId":"yostashko"},"content":"        assertEquals(Constants.BAD_RESPONSE_BODY,\"Request body error. Please fix your request body\");"},{"lineNumber":61,"author":{"gitId":"yostashko"},"content":"        assertNotNull(Constants.APPLICATION_OBJECT_MAPPER);"},{"lineNumber":62,"author":{"gitId":"yostashko"},"content":"        assertEquals(Constants.REQUEST_WITHOUT_MESSAGE_ID,\"Illegal request, message_id not present\");"},{"lineNumber":63,"author":{"gitId":"yostashko"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"ivanmaister7"},"content":"}"}],"authorContributionMap":{"yostashko":7,"Марія-Валерія Гуза":5,"ivanmaister7":52}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/ModelTest/ProjectTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Марія-Валерія Гуза"},"content":"package edu.kmaooad.ModelTest;"},{"lineNumber":2,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":3,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import edu.kmaooad.models.Project;"},{"lineNumber":4,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import edu.kmaooad.models.Skill;"},{"lineNumber":5,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import edu.kmaooad.models.SkillSet;"},{"lineNumber":6,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import edu.kmaooad.models.Topic;"},{"lineNumber":7,"author":{"gitId":"yostashko"},"content":"import edu.kmaooad.service.TopicService;"},{"lineNumber":8,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":10,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import java.util.HashSet;"},{"lineNumber":11,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import java.util.Set;"},{"lineNumber":12,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.stream.Collectors;"},{"lineNumber":13,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.stream.Stream;"},{"lineNumber":14,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":15,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":16,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":17,"author":{"gitId":"Марія-Валерія Гуза"},"content":"public class ProjectTest {"},{"lineNumber":18,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    Set\u003cSkill\u003e newSkillSet \u003d new HashSet\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"Anastasiia Bezruka"},"content":"    Set\u003cTopic\u003e topics \u003d Stream.of(new Topic(\"1\", \"topic\")).collect(Collectors.toSet());"},{"lineNumber":20,"author":{"gitId":"Anastasiia Bezruka"},"content":"    Set\u003cSkill\u003e skills \u003d Stream.of(new Skill(\"2\", \"skill\")).collect(Collectors.toSet());"},{"lineNumber":21,"author":{"gitId":"Anastasiia Bezruka"},"content":"    Set\u003cSkillSet\u003e skillSets \u003d Stream.of(new SkillSet(\"3\", \"skill set\", newSkillSet)).collect(Collectors.toSet());"},{"lineNumber":22,"author":{"gitId":"Anastasiia Bezruka"},"content":"    Project project \u003d new Project(\"1234\", \"independent\", \"independent description\", topics, skills, skillSets);"},{"lineNumber":23,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":24,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void testProjectBuilder() {"},{"lineNumber":26,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        Project projectBuild \u003d"},{"lineNumber":27,"author":{"gitId":"Марія-Валерія Гуза"},"content":"                Project.builder()"},{"lineNumber":28,"author":{"gitId":"Марія-Валерія Гуза"},"content":"                        .projectID(\"1234\")"},{"lineNumber":29,"author":{"gitId":"Марія-Валерія Гуза"},"content":"                        .projectTitle(\"independent\")"},{"lineNumber":30,"author":{"gitId":"Марія-Валерія Гуза"},"content":"                        .projectDescription(\"independent description\")"},{"lineNumber":31,"author":{"gitId":"Anastasiia Bezruka"},"content":"                        .topics(topics)"},{"lineNumber":32,"author":{"gitId":"Anastasiia Bezruka"},"content":"                        .skills(skills)"},{"lineNumber":33,"author":{"gitId":"Anastasiia Bezruka"},"content":"                        .skillSets(skillSets).build();"},{"lineNumber":34,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":35,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":36,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(project, projectBuild);"},{"lineNumber":37,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":38,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":40,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void getProjectId() {"},{"lineNumber":42,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(\"1234\", project.getProjectID());"},{"lineNumber":43,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":45,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":46,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void setProjectId() {"},{"lineNumber":47,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        project.setProjectID(\"newID\");"},{"lineNumber":48,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(\"newID\", project.getProjectID());"},{"lineNumber":49,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":51,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":52,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void getProjectTitle() {"},{"lineNumber":53,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(\"independent\", project.getProjectTitle());"},{"lineNumber":54,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":56,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":57,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void setProjectTitle() {"},{"lineNumber":58,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        project.setProjectTitle(\"new title\");"},{"lineNumber":59,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(\"new title\", project.getProjectTitle());"},{"lineNumber":60,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":62,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":63,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void getProjectDescription() {"},{"lineNumber":64,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(\"independent description\", project.getProjectDescription());"},{"lineNumber":65,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":67,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":68,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void setProjectDescription() {"},{"lineNumber":69,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        project.setProjectDescription(\"new desc\");"},{"lineNumber":70,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(\"new desc\", project.getProjectDescription());"},{"lineNumber":71,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":73,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":74,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void getProjectTopic() {"},{"lineNumber":75,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Topic res \u003d project.getTopics().stream().findFirst().orElse(null);"},{"lineNumber":76,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(new Topic(\"1\", \"topic\"), res);"},{"lineNumber":77,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":79,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":80,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void setProjectTopic() {"},{"lineNumber":81,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Set\u003cTopic\u003e topics \u003d Stream.of(new Topic(\"2\", \"new topic\")).collect(Collectors.toSet());"},{"lineNumber":82,"author":{"gitId":"Anastasiia Bezruka"},"content":"        project.setTopics(topics);"},{"lineNumber":83,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(topics, project.getTopics());"},{"lineNumber":84,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":86,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":87,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void getProjectSkill() {"},{"lineNumber":88,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Skill res \u003d project.getSkills().stream().findFirst().orElse(null);"},{"lineNumber":89,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(new Skill(\"2\", \"skill\"), res);"},{"lineNumber":90,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":92,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":93,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void setProjectSkill() {"},{"lineNumber":94,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Set\u003cSkill\u003e skills \u003d Stream.of(new Skill(\"2\", \"new skill\")).collect(Collectors.toSet());"},{"lineNumber":95,"author":{"gitId":"Anastasiia Bezruka"},"content":"        project.setSkills(skills);"},{"lineNumber":96,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(skills, project.getSkills());"},{"lineNumber":97,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":99,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":100,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void getProjectSetSkill() {"},{"lineNumber":101,"author":{"gitId":"Anastasiia Bezruka"},"content":"        SkillSet res \u003d project.getSkillSets().stream().findFirst().orElse(null);"},{"lineNumber":102,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(new SkillSet(\"3\", \"skill set\", newSkillSet), res);"},{"lineNumber":103,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":105,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":106,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void setProjectSetSkill() {"},{"lineNumber":107,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Set\u003cSkillSet\u003e skillSets \u003d Stream.of(new SkillSet(\"4\", \"new skill set\", newSkillSet)).collect(Collectors.toSet());"},{"lineNumber":108,"author":{"gitId":"Anastasiia Bezruka"},"content":"        project.setSkillSets(skillSets);"},{"lineNumber":109,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(skillSets, project.getSkillSets());"},{"lineNumber":110,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":112,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":113,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":114,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void projectToString() {"},{"lineNumber":115,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(\"Project(projectID\u003d1234, projectTitle\u003dindependent, projectDescription\u003dindependent description, topics\u003d[Topic(topicID\u003d1, topicName\u003dtopic, parentTopic\u003dnull)], skills\u003d[Skill(skillID\u003d2, skillName\u003dskill, parentSkill\u003dnull)], skillSets\u003d[SkillSet(skillSetID\u003d3, skillSetName\u003dskill set, skills\u003d[])])\", project.toString());"},{"lineNumber":116,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":118,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":119,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void testProjectEqualsAndHashCode() {"},{"lineNumber":120,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Project equalProject \u003d new Project(\"1234\", \"independent\", \"independent description\", topics, skills, skillSets);"},{"lineNumber":121,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":122,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(project, equalProject);"},{"lineNumber":123,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(project.hashCode(), equalProject.hashCode());"},{"lineNumber":124,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":126,"author":{"gitId":"Марія-Валерія Гуза"},"content":"}"}],"authorContributionMap":{"yostashko":1,"Марія-Валерія Гуза":96,"Anastasiia Bezruka":29}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/ModelTest/SkillSetTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Марія-Валерія Гуза"},"content":"package edu.kmaooad.ModelTest;"},{"lineNumber":2,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":3,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import edu.kmaooad.models.Skill;"},{"lineNumber":4,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import edu.kmaooad.models.SkillSet;"},{"lineNumber":5,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":7,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import java.util.HashSet;"},{"lineNumber":8,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import java.util.Set;"},{"lineNumber":9,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":10,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":11,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":12,"author":{"gitId":"Марія-Валерія Гуза"},"content":"//null?"},{"lineNumber":13,"author":{"gitId":"Марія-Валерія Гуза"},"content":"public class SkillSetTest {"},{"lineNumber":14,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":15,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    SkillSet skillSet \u003d new SkillSet(\"1234\", \"test\", new HashSet\u003c\u003e());"},{"lineNumber":16,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":17,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void testSkillSetBuilder(){"},{"lineNumber":19,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        SkillSet skillSetBuilder \u003d SkillSet.builder()"},{"lineNumber":20,"author":{"gitId":"Марія-Валерія Гуза"},"content":"                .skillSetID(\"1234\")"},{"lineNumber":21,"author":{"gitId":"Марія-Валерія Гуза"},"content":"                .skillSetName(\"test\")"},{"lineNumber":22,"author":{"gitId":"Anastasiia Bezruka"},"content":"                .skills(new HashSet\u003c\u003e()).build();"},{"lineNumber":23,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":24,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(skillSet,skillSetBuilder);"},{"lineNumber":25,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void getSkillSetId(){"},{"lineNumber":28,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(\"1234\", skillSet.getSkillSetID());"},{"lineNumber":29,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":31,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":32,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void setSkillSetId(){"},{"lineNumber":33,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        skillSet.setSkillSetID(\"newID\");"},{"lineNumber":34,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(\"newID\", skillSet.getSkillSetID());"},{"lineNumber":35,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":37,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":38,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void getSkillName(){"},{"lineNumber":39,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(\"test\", skillSet.getSkillSetName());"},{"lineNumber":40,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":42,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void setSkillName(){"},{"lineNumber":44,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        skillSet.setSkillSetName(\"new name\");"},{"lineNumber":45,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(\"new name\", skillSet.getSkillSetName());"},{"lineNumber":46,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":48,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":49,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void getSkillSet(){"},{"lineNumber":50,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals( new HashSet\u003c\u003e(), skillSet.getSkills());"},{"lineNumber":51,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":53,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":54,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void setSkillSet(){"},{"lineNumber":55,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":56,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        Set\u003cSkill\u003e newSkillSet \u003d new HashSet\u003c\u003e();"},{"lineNumber":57,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        newSkillSet.add(new Skill(\"1234\",\"test\"));"},{"lineNumber":58,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":59,"author":{"gitId":"Anastasiia Bezruka"},"content":"        skillSet.setSkills(newSkillSet);"},{"lineNumber":60,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(newSkillSet, skillSet.getSkills());"},{"lineNumber":61,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":63,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":64,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void addSkill_test(){"},{"lineNumber":65,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        skillSet.addSkill(new Skill(\"1234\",\"test\"));"},{"lineNumber":66,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":67,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        Set\u003cSkill\u003e check \u003d new HashSet\u003c\u003e();"},{"lineNumber":68,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        check.add(new Skill(\"1234\",\"test\"));"},{"lineNumber":69,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(check,skillSet.getSkills());"},{"lineNumber":70,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":71,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        SkillSet test \u003d new SkillSet(\"1234\", \"test\", null);"},{"lineNumber":72,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        test.addSkill(new Skill(\"1234\",\"test\"));"},{"lineNumber":73,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":74,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(check,test.getSkills());"},{"lineNumber":75,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":76,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":77,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":79,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":80,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void removeSkill_test(){"},{"lineNumber":81,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        skillSet.addSkill(new Skill(\"1234\",\"test-1\"));"},{"lineNumber":82,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        skillSet.addSkill(new Skill(\"1235\",\"test-2\"));"},{"lineNumber":83,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":84,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":85,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        Set\u003cSkill\u003e check \u003d new HashSet\u003c\u003e();"},{"lineNumber":86,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        check.add(new Skill(\"1234\",\"test-1\"));"},{"lineNumber":87,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":88,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        skillSet.removeSkill(new Skill(\"1235\",\"test-2\"));"},{"lineNumber":89,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":90,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(check,skillSet.getSkills());"},{"lineNumber":91,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":92,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        SkillSet test \u003d new SkillSet(\"1234\", \"test\", null);"},{"lineNumber":93,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        test.removeSkill(new Skill(\"1234\",\"test\"));"},{"lineNumber":94,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":95,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertNull(test.getSkills());"},{"lineNumber":96,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":98,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":99,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void skillSetToString(){"},{"lineNumber":100,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(\"SkillSet(skillSetID\u003d1234, skillSetName\u003dtest, skills\u003d[])\", skillSet.toString());"},{"lineNumber":101,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":103,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":104,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void testSkillSetEqualsAndHashCode(){"},{"lineNumber":105,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        SkillSet equalSkillSet \u003d new SkillSet(\"1234\", \"test\", new HashSet\u003c\u003e());"},{"lineNumber":106,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":107,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(skillSet, equalSkillSet);"},{"lineNumber":108,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(skillSet.hashCode(), equalSkillSet.hashCode());"},{"lineNumber":109,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"Марія-Валерія Гуза"},"content":"}"}],"authorContributionMap":{"Марія-Валерія Гуза":99,"Anastasiia Bezruka":11}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/ModelTest/SkillTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Марія-Валерія Гуза"},"content":"package edu.kmaooad.ModelTest;"},{"lineNumber":2,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":3,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import edu.kmaooad.models.Skill;"},{"lineNumber":4,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import edu.kmaooad.models.Topic;"},{"lineNumber":5,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":7,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":8,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":9,"author":{"gitId":"Марія-Валерія Гуза"},"content":"public class SkillTest {"},{"lineNumber":10,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":11,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    Skill skill \u003d new Skill(\"1234\",\"junit-test\", new Skill(\"1233\",\"test\"));"},{"lineNumber":12,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":13,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":14,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void testSkillBuilder(){"},{"lineNumber":16,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        Skill skillBuilder \u003d Skill.builder()"},{"lineNumber":17,"author":{"gitId":"Марія-Валерія Гуза"},"content":"                .skillID(\"1234\")"},{"lineNumber":18,"author":{"gitId":"Марія-Валерія Гуза"},"content":"                .skillName(\"junit-test\")"},{"lineNumber":19,"author":{"gitId":"Марія-Валерія Гуза"},"content":"                .parentSkill(Skill.builder().skillID(\"1233\").skillName(\"test\").build())"},{"lineNumber":20,"author":{"gitId":"Марія-Валерія Гуза"},"content":"                .build();"},{"lineNumber":21,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":22,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(skill,skillBuilder);"},{"lineNumber":23,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void getSkillId(){"},{"lineNumber":26,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(\"1234\", skill.getSkillID());"},{"lineNumber":27,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":29,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void setSkillId(){"},{"lineNumber":31,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        skill.setSkillID(\"newID\");"},{"lineNumber":32,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(\"newID\", skill.getSkillID());"},{"lineNumber":33,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":35,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void getSkillName(){"},{"lineNumber":37,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(\"junit-test\", skill.getSkillName());"},{"lineNumber":38,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":40,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void setSkillName(){"},{"lineNumber":42,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        skill.setSkillName(\"new name\");"},{"lineNumber":43,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(\"new name\", skill.getSkillName());"},{"lineNumber":44,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":46,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":47,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void getParentSkill(){"},{"lineNumber":48,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(new Skill(\"1233\",\"test\"), skill.getParentSkill());"},{"lineNumber":49,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":51,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":52,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void setParentSkill(){"},{"lineNumber":53,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        skill.setParentSkill(new Skill(\"new parent\",\"new parent\"));"},{"lineNumber":54,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(new Skill(\"new parent\",\"new parent\"), skill.getParentSkill());"},{"lineNumber":55,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":57,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":58,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void skillToString(){"},{"lineNumber":59,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(\"Skill(skillID\u003d1234, skillName\u003djunit-test, parentSkill\u003dSkill(skillID\u003d1233, skillName\u003dtest, parentSkill\u003dnull))\", skill.toString());"},{"lineNumber":60,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":62,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":63,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void testSkillEqualsAndHashCode(){"},{"lineNumber":64,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        Skill equalSkill \u003d new Skill(\"1234\",\"junit-test\", new Skill(\"1233\",\"test\"));"},{"lineNumber":65,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":66,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertTrue(skill.equals(equalSkill));"},{"lineNumber":67,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertTrue(skill.hashCode() \u003d\u003d equalSkill.hashCode());"},{"lineNumber":68,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"Марія-Валерія Гуза"},"content":"}"}],"authorContributionMap":{"Марія-Валерія Гуза":69}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/ModelTest/TopicTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Марія-Валерія Гуза"},"content":"package edu.kmaooad.ModelTest;"},{"lineNumber":2,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":3,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import edu.kmaooad.models.Skill;"},{"lineNumber":4,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import edu.kmaooad.models.Topic;"},{"lineNumber":5,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":7,"author":{"gitId":"Марія-Валерія Гуза"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":8,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":9,"author":{"gitId":"Марія-Валерія Гуза"},"content":"public class TopicTest {"},{"lineNumber":10,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":11,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    Topic topic \u003d new Topic(\"1234\",\"junit-test\", new Topic(\"1233\",\"test\"));"},{"lineNumber":12,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":13,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void testTopicBuilder(){"},{"lineNumber":15,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        Topic topicBuilder \u003d Topic.builder()"},{"lineNumber":16,"author":{"gitId":"Марія-Валерія Гуза"},"content":"                .topicID(\"1234\")"},{"lineNumber":17,"author":{"gitId":"Марія-Валерія Гуза"},"content":"                .topicName(\"junit-test\")"},{"lineNumber":18,"author":{"gitId":"Марія-Валерія Гуза"},"content":"                .parentTopic(Topic.builder().topicID(\"1233\").topicName(\"test\").build())"},{"lineNumber":19,"author":{"gitId":"Марія-Валерія Гуза"},"content":"                .build();"},{"lineNumber":20,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":21,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(topic,topicBuilder);"},{"lineNumber":22,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void getTopicId(){"},{"lineNumber":25,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(\"1234\", topic.getTopicID());"},{"lineNumber":26,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":28,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void setTopicId(){"},{"lineNumber":30,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        topic.setTopicID(\"newID\");"},{"lineNumber":31,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(\"newID\", topic.getTopicID());"},{"lineNumber":32,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":34,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void getTopicName(){"},{"lineNumber":36,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(\"junit-test\", topic.getTopicName());"},{"lineNumber":37,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":39,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":40,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void setTopicName(){"},{"lineNumber":41,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        topic.setTopicName(\"new name\");"},{"lineNumber":42,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(\"new name\", topic.getTopicName());"},{"lineNumber":43,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":45,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":46,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void getParentTopic(){"},{"lineNumber":47,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(new Topic(\"1233\",\"test\"), topic.getParentTopic());"},{"lineNumber":48,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":50,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void setParentTopic(){"},{"lineNumber":52,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        topic.setParentTopic(new Topic(\"new parent\",\"new parent\"));"},{"lineNumber":53,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(new Topic(\"new parent\",\"new parent\"), topic.getParentTopic());"},{"lineNumber":54,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":56,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":57,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void topicToString(){"},{"lineNumber":58,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertEquals(\"Topic(topicID\u003d1234, topicName\u003djunit-test, parentTopic\u003dTopic(topicID\u003d1233, topicName\u003dtest, parentTopic\u003dnull))\", topic.toString());"},{"lineNumber":59,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":61,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    @Test"},{"lineNumber":62,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    void testTopicEqualsAndHashCode(){"},{"lineNumber":63,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        Topic equalTopic \u003d new Topic(\"1234\",\"junit-test\", new Topic(\"1233\",\"test\"));"},{"lineNumber":64,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":65,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertTrue(topic.equals(equalTopic));"},{"lineNumber":66,"author":{"gitId":"Марія-Валерія Гуза"},"content":"        assertTrue(topic.hashCode() \u003d\u003d equalTopic.hashCode());"},{"lineNumber":67,"author":{"gitId":"Марія-Валерія Гуза"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"Марія-Валерія Гуза"},"content":""},{"lineNumber":69,"author":{"gitId":"Марія-Валерія Гуза"},"content":"}"}],"authorContributionMap":{"Марія-Валерія Гуза":69}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/controller/ProjectControllerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanmaister7"},"content":"package edu.kmaooad.controller;"},{"lineNumber":2,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.DTO.ProjectDTO;"},{"lineNumber":4,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.models.Project;"},{"lineNumber":5,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.models.Skill;"},{"lineNumber":6,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.models.SkillSet;"},{"lineNumber":7,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.models.Topic;"},{"lineNumber":8,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.repository.ProjectRepository;"},{"lineNumber":9,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.repository.SkillRepository;"},{"lineNumber":10,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.repository.SkillSetRepository;"},{"lineNumber":11,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.repository.TopicRepository;"},{"lineNumber":12,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.service.ProjectService;"},{"lineNumber":13,"author":{"gitId":"ivanmaister7"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":14,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":15,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;"},{"lineNumber":16,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.boot.test.mock.mockito.MockBean;"},{"lineNumber":17,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.http.MediaType;"},{"lineNumber":18,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.test.web.servlet.MockMvc;"},{"lineNumber":19,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":20,"author":{"gitId":"ivanmaister7"},"content":"import javax.annotation.PostConstruct;"},{"lineNumber":21,"author":{"gitId":"ivanmaister7"},"content":"import java.util.HashSet;"},{"lineNumber":22,"author":{"gitId":"ivanmaister7"},"content":"import java.util.List;"},{"lineNumber":23,"author":{"gitId":"ivanmaister7"},"content":"import java.util.Optional;"},{"lineNumber":24,"author":{"gitId":"ivanmaister7"},"content":"import java.util.Set;"},{"lineNumber":25,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":26,"author":{"gitId":"ivanmaister7"},"content":"import static org.hamcrest.Matchers.containsString;"},{"lineNumber":27,"author":{"gitId":"ivanmaister7"},"content":"import static org.mockito.Mockito.when;"},{"lineNumber":28,"author":{"gitId":"ivanmaister7"},"content":"import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;"},{"lineNumber":29,"author":{"gitId":"ivanmaister7"},"content":"import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;"},{"lineNumber":30,"author":{"gitId":"ivanmaister7"},"content":"import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;"},{"lineNumber":31,"author":{"gitId":"ivanmaister7"},"content":"import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;"},{"lineNumber":32,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":33,"author":{"gitId":"ivanmaister7"},"content":"@WebMvcTest(ProjectController.class)"},{"lineNumber":34,"author":{"gitId":"ivanmaister7"},"content":"class ProjectControllerTest {"},{"lineNumber":35,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":36,"author":{"gitId":"ivanmaister7"},"content":"    @Autowired"},{"lineNumber":37,"author":{"gitId":"ivanmaister7"},"content":"    private MockMvc mockMvc;"},{"lineNumber":38,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":39,"author":{"gitId":"ivanmaister7"},"content":"    @MockBean"},{"lineNumber":40,"author":{"gitId":"ivanmaister7"},"content":"    private ProjectService service;"},{"lineNumber":41,"author":{"gitId":"ivanmaister7"},"content":"    @MockBean"},{"lineNumber":42,"author":{"gitId":"ivanmaister7"},"content":"    private ProjectRepository projectRepository;"},{"lineNumber":43,"author":{"gitId":"ivanmaister7"},"content":"    @MockBean"},{"lineNumber":44,"author":{"gitId":"ivanmaister7"},"content":"    private TopicRepository topicRepository;"},{"lineNumber":45,"author":{"gitId":"ivanmaister7"},"content":"    @MockBean"},{"lineNumber":46,"author":{"gitId":"ivanmaister7"},"content":"    private SkillRepository skillRepository;"},{"lineNumber":47,"author":{"gitId":"ivanmaister7"},"content":"    @MockBean"},{"lineNumber":48,"author":{"gitId":"ivanmaister7"},"content":"    private SkillSetRepository skillSetRepository;"},{"lineNumber":49,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":50,"author":{"gitId":"ivanmaister7"},"content":"    @PostConstruct"},{"lineNumber":51,"author":{"gitId":"ivanmaister7"},"content":"    public void loadMock() {"},{"lineNumber":52,"author":{"gitId":"ivanmaister7"},"content":"        Project project1 \u003d new Project(\"1\", \"proj1\", \"...\", Set.of(new Topic()), Set.of(new Skill()), Set.of(new SkillSet()) );"},{"lineNumber":53,"author":{"gitId":"ivanmaister7"},"content":"        Project project2 \u003d new Project(\"2\", \"proj2\", \"...\", Set.of(new Topic()), Set.of(new Skill()), Set.of(new SkillSet()) );"},{"lineNumber":54,"author":{"gitId":"ivanmaister7"},"content":"        Project project5 \u003d new Project(\"5\", \"title\", \"...\", new HashSet\u003c\u003e(), new HashSet\u003c\u003e(), new HashSet\u003c\u003e());"},{"lineNumber":55,"author":{"gitId":"ivanmaister7"},"content":"        Project project6 \u003d new Project(\"6\", \"\", \"\", new HashSet\u003c\u003e(), new HashSet\u003c\u003e(), new HashSet\u003c\u003e());"},{"lineNumber":56,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":57,"author":{"gitId":"ivanmaister7"},"content":"        ProjectDTO projectDTO5 \u003d new ProjectDTO(\"5\", \"title\", \"...\", new HashSet\u003c\u003e(), new HashSet\u003c\u003e(),new HashSet\u003c\u003e());"},{"lineNumber":58,"author":{"gitId":"ivanmaister7"},"content":"        ProjectDTO projectDTO6 \u003d new ProjectDTO(\"6\", \"title\", \"...\", new HashSet\u003c\u003e(), new HashSet\u003c\u003e(),new HashSet\u003c\u003e());"},{"lineNumber":59,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":60,"author":{"gitId":"ivanmaister7"},"content":"        when(service.findAll()).thenReturn(List.of(project1,project2));"},{"lineNumber":61,"author":{"gitId":"ivanmaister7"},"content":"        when(service.findById(\"1\")).thenReturn(Optional.of(project1));"},{"lineNumber":62,"author":{"gitId":"ivanmaister7"},"content":"        when(service.findById(\"3\")).thenReturn(Optional.empty());"},{"lineNumber":63,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":64,"author":{"gitId":"ivanmaister7"},"content":"        when(service.createProject(projectDTO5)).thenReturn(project5);"},{"lineNumber":65,"author":{"gitId":"ivanmaister7"},"content":"        when(service.exist(\"5\")).thenReturn(true);"},{"lineNumber":66,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":67,"author":{"gitId":"ivanmaister7"},"content":"        when(service.createProject(projectDTO6)).thenReturn(project6);"},{"lineNumber":68,"author":{"gitId":"ivanmaister7"},"content":"        when(service.exist(\"6\")).thenReturn(false);"},{"lineNumber":69,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":70,"author":{"gitId":"ivanmaister7"},"content":"        when(service.updateProject(\"5\", projectDTO5)).thenReturn(true);"},{"lineNumber":71,"author":{"gitId":"ivanmaister7"},"content":"        when(service.updateProject(\"6\", projectDTO6)).thenReturn(false);"},{"lineNumber":72,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":73,"author":{"gitId":"ivanmaister7"},"content":"        when(service.deleteProject(\"5\")).thenReturn(true);"},{"lineNumber":74,"author":{"gitId":"ivanmaister7"},"content":"        when(service.deleteProject(\"6\")).thenReturn(false);"},{"lineNumber":75,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":77,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":78,"author":{"gitId":"ivanmaister7"},"content":"    void getAllProjects() throws Exception {"},{"lineNumber":79,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":80,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":81,"author":{"gitId":"ivanmaister7"},"content":"                get(\"/project\"))"},{"lineNumber":82,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isOk())"},{"lineNumber":83,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString("},{"lineNumber":84,"author":{"gitId":"ivanmaister7"},"content":"                        \"[{\\\"projectID\\\":\\\"1\\\",\\\"projectTitle\\\":\\\"proj1\\\",\\\"projectDescription\\\":\\\"...\\\",\" +"},{"lineNumber":85,"author":{"gitId":"ivanmaister7"},"content":"                        \"\\\"topics\\\":[{\\\"topicID\\\":null,\\\"topicName\\\":null,\\\"parentTopic\\\":null}],\" +"},{"lineNumber":86,"author":{"gitId":"ivanmaister7"},"content":"                        \"\\\"skills\\\":[{\\\"skillID\\\":null,\\\"skillName\\\":null,\\\"parentSkill\\\":null}],\" +"},{"lineNumber":87,"author":{"gitId":"ivanmaister7"},"content":"                        \"\\\"skillSets\\\":[{\\\"skillSetID\\\":null,\\\"skillSetName\\\":null,\\\"skills\\\":null}]},\" +"},{"lineNumber":88,"author":{"gitId":"ivanmaister7"},"content":"                        \"{\\\"projectID\\\":\\\"2\\\",\\\"projectTitle\\\":\\\"proj2\\\",\\\"projectDescription\\\":\\\"...\\\",\" +"},{"lineNumber":89,"author":{"gitId":"ivanmaister7"},"content":"                        \"\\\"topics\\\":[{\\\"topicID\\\":null,\\\"topicName\\\":null,\\\"parentTopic\\\":null}],\" +"},{"lineNumber":90,"author":{"gitId":"ivanmaister7"},"content":"                        \"\\\"skills\\\":[{\\\"skillID\\\":null,\\\"skillName\\\":null,\\\"parentSkill\\\":null}],\" +"},{"lineNumber":91,"author":{"gitId":"ivanmaister7"},"content":"                        \"\\\"skillSets\\\":[{\\\"skillSetID\\\":null,\\\"skillSetName\\\":null,\\\"skills\\\":null}]}]\")));"},{"lineNumber":92,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":94,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":95,"author":{"gitId":"ivanmaister7"},"content":"    void getProjectById_OK() throws Exception {"},{"lineNumber":96,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":97,"author":{"gitId":"ivanmaister7"},"content":"                get(\"/project/1\"))"},{"lineNumber":98,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isOk())"},{"lineNumber":99,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":100,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString("},{"lineNumber":101,"author":{"gitId":"ivanmaister7"},"content":"                        \"{\\\"projectID\\\":\\\"1\\\",\\\"projectTitle\\\":\\\"proj1\\\",\\\"projectDescription\\\":\\\"...\\\",\" +"},{"lineNumber":102,"author":{"gitId":"ivanmaister7"},"content":"                                \"\\\"topics\\\":[{\\\"topicID\\\":null,\\\"topicName\\\":null,\\\"parentTopic\\\":null}],\" +"},{"lineNumber":103,"author":{"gitId":"ivanmaister7"},"content":"                                \"\\\"skills\\\":[{\\\"skillID\\\":null,\\\"skillName\\\":null,\\\"parentSkill\\\":null}],\" +"},{"lineNumber":104,"author":{"gitId":"ivanmaister7"},"content":"                                \"\\\"skillSets\\\":[{\\\"skillSetID\\\":null,\\\"skillSetName\\\":null,\\\"skills\\\":null}]}\")));"},{"lineNumber":105,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":107,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":108,"author":{"gitId":"ivanmaister7"},"content":"    void getProjectById_BAD() throws Exception {"},{"lineNumber":109,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":110,"author":{"gitId":"ivanmaister7"},"content":"                get(\"/project/3\"))"},{"lineNumber":111,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isBadRequest())"},{"lineNumber":112,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":113,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"Project with id \u003d 3 not found\")));"},{"lineNumber":114,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":116,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":117,"author":{"gitId":"ivanmaister7"},"content":"    void createProject_CREATED() throws Exception {"},{"lineNumber":118,"author":{"gitId":"ivanmaister7"},"content":"        String content \u003d \"{\" +"},{"lineNumber":119,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"projectId\\\":\\\"5\\\",\" +"},{"lineNumber":120,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"projectTitle\\\":\\\"title\\\",\" +"},{"lineNumber":121,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"projectDescription\\\":\\\"...\\\",\" +"},{"lineNumber":122,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"topicIds\\\":[],\" +"},{"lineNumber":123,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillIds\\\": [],\" +"},{"lineNumber":124,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillSetIds\\\": []\" +"},{"lineNumber":125,"author":{"gitId":"ivanmaister7"},"content":"                \"}\";"},{"lineNumber":126,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":127,"author":{"gitId":"ivanmaister7"},"content":"                post(\"/project\")"},{"lineNumber":128,"author":{"gitId":"ivanmaister7"},"content":"                        .contentType(MediaType.APPLICATION_JSON)"},{"lineNumber":129,"author":{"gitId":"ivanmaister7"},"content":"                        .content(content))"},{"lineNumber":130,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isCreated())"},{"lineNumber":131,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":132,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"New Project created\")));"},{"lineNumber":133,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":135,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":136,"author":{"gitId":"ivanmaister7"},"content":"    void createProject_BAD() throws Exception {"},{"lineNumber":137,"author":{"gitId":"ivanmaister7"},"content":"        String content \u003d \"{\" +"},{"lineNumber":138,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"projectId\\\":\\\"6\\\",\" +"},{"lineNumber":139,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"projectTitle\\\":\\\"title\\\",\" +"},{"lineNumber":140,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"projectDescription\\\":\\\"...\\\",\" +"},{"lineNumber":141,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"topicIds\\\":[],\" +"},{"lineNumber":142,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillIds\\\": [],\" +"},{"lineNumber":143,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillSetIds\\\": []\" +"},{"lineNumber":144,"author":{"gitId":"ivanmaister7"},"content":"                \"}\";"},{"lineNumber":145,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":146,"author":{"gitId":"ivanmaister7"},"content":"                        post(\"/project\")"},{"lineNumber":147,"author":{"gitId":"ivanmaister7"},"content":"                                .contentType(MediaType.APPLICATION_JSON)"},{"lineNumber":148,"author":{"gitId":"ivanmaister7"},"content":"                                .content(content))"},{"lineNumber":149,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isBadRequest())"},{"lineNumber":150,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":151,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"New Project not created\")));"},{"lineNumber":152,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":154,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":155,"author":{"gitId":"ivanmaister7"},"content":"    void updateProject_OK() throws Exception {"},{"lineNumber":156,"author":{"gitId":"ivanmaister7"},"content":"        String content \u003d \"{\" +"},{"lineNumber":157,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"projectId\\\":\\\"5\\\",\" +"},{"lineNumber":158,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"projectTitle\\\":\\\"title\\\",\" +"},{"lineNumber":159,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"projectDescription\\\":\\\"...\\\",\" +"},{"lineNumber":160,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"topicIds\\\":[],\" +"},{"lineNumber":161,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillIds\\\": [],\" +"},{"lineNumber":162,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillSetIds\\\": []\" +"},{"lineNumber":163,"author":{"gitId":"ivanmaister7"},"content":"                \"}\";"},{"lineNumber":164,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":165,"author":{"gitId":"ivanmaister7"},"content":"                        put(\"/project/5\")"},{"lineNumber":166,"author":{"gitId":"ivanmaister7"},"content":"                                .contentType(MediaType.APPLICATION_JSON)"},{"lineNumber":167,"author":{"gitId":"ivanmaister7"},"content":"                                .content(content))"},{"lineNumber":168,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isOk())"},{"lineNumber":169,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":170,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"Project with id \u003d 5 updated\")));"},{"lineNumber":171,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":173,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":174,"author":{"gitId":"ivanmaister7"},"content":"    void updateProject_BAD() throws Exception {"},{"lineNumber":175,"author":{"gitId":"ivanmaister7"},"content":"        String content \u003d \"{\" +"},{"lineNumber":176,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"projectId\\\":\\\"6\\\",\" +"},{"lineNumber":177,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"projectTitle\\\":\\\"title\\\",\" +"},{"lineNumber":178,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"projectDescription\\\":\\\"...\\\",\" +"},{"lineNumber":179,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"topicIds\\\":[],\" +"},{"lineNumber":180,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillIds\\\": [],\" +"},{"lineNumber":181,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillSetIds\\\": []\" +"},{"lineNumber":182,"author":{"gitId":"ivanmaister7"},"content":"                \"}\";"},{"lineNumber":183,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":184,"author":{"gitId":"ivanmaister7"},"content":"                        put(\"/project/6\")"},{"lineNumber":185,"author":{"gitId":"ivanmaister7"},"content":"                                .contentType(MediaType.APPLICATION_JSON)"},{"lineNumber":186,"author":{"gitId":"ivanmaister7"},"content":"                                .content(content))"},{"lineNumber":187,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isBadRequest())"},{"lineNumber":188,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":189,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"Project with id \u003d 6 not updated\")));"},{"lineNumber":190,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":191,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":192,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":193,"author":{"gitId":"ivanmaister7"},"content":"    void deleteProject_OK() throws Exception {"},{"lineNumber":194,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":195,"author":{"gitId":"ivanmaister7"},"content":"                        delete(\"/project/5\"))"},{"lineNumber":196,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isOk())"},{"lineNumber":197,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":198,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"Project with id \u003d 5 deleted\")));"},{"lineNumber":199,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":200,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":201,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":202,"author":{"gitId":"ivanmaister7"},"content":"    void deleteProject_BAD() throws Exception {"},{"lineNumber":203,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":204,"author":{"gitId":"ivanmaister7"},"content":"                        delete(\"/project/6\"))"},{"lineNumber":205,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isBadRequest())"},{"lineNumber":206,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":207,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"Project with id \u003d 6 not deleted\")));"},{"lineNumber":208,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":209,"author":{"gitId":"ivanmaister7"},"content":"}"}],"authorContributionMap":{"ivanmaister7":209}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/controller/SkillControllerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanmaister7"},"content":"package edu.kmaooad.controller;"},{"lineNumber":2,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.DTO.SkillDTO;"},{"lineNumber":4,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.models.Skill;"},{"lineNumber":5,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.models.Skill;"},{"lineNumber":6,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.models.SkillSet;"},{"lineNumber":7,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.models.Topic;"},{"lineNumber":8,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.repository.*;"},{"lineNumber":9,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.repository.SkillRepository;"},{"lineNumber":10,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.service.SkillService;"},{"lineNumber":11,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.service.SkillService;"},{"lineNumber":12,"author":{"gitId":"ivanmaister7"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":13,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":14,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;"},{"lineNumber":15,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.boot.test.mock.mockito.MockBean;"},{"lineNumber":16,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.http.MediaType;"},{"lineNumber":17,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.test.web.servlet.MockMvc;"},{"lineNumber":18,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":19,"author":{"gitId":"ivanmaister7"},"content":"import javax.annotation.PostConstruct;"},{"lineNumber":20,"author":{"gitId":"ivanmaister7"},"content":"import java.util.HashSet;"},{"lineNumber":21,"author":{"gitId":"ivanmaister7"},"content":"import java.util.List;"},{"lineNumber":22,"author":{"gitId":"ivanmaister7"},"content":"import java.util.Optional;"},{"lineNumber":23,"author":{"gitId":"ivanmaister7"},"content":"import java.util.Set;"},{"lineNumber":24,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":25,"author":{"gitId":"ivanmaister7"},"content":"import static org.hamcrest.Matchers.containsString;"},{"lineNumber":26,"author":{"gitId":"ivanmaister7"},"content":"import static org.mockito.Mockito.when;"},{"lineNumber":27,"author":{"gitId":"ivanmaister7"},"content":"import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;"},{"lineNumber":28,"author":{"gitId":"ivanmaister7"},"content":"import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;"},{"lineNumber":29,"author":{"gitId":"ivanmaister7"},"content":"import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;"},{"lineNumber":30,"author":{"gitId":"ivanmaister7"},"content":"import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;"},{"lineNumber":31,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":32,"author":{"gitId":"ivanmaister7"},"content":"@WebMvcTest(SkillController.class)"},{"lineNumber":33,"author":{"gitId":"ivanmaister7"},"content":"class SkillControllerTest {"},{"lineNumber":34,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":35,"author":{"gitId":"ivanmaister7"},"content":"    @Autowired"},{"lineNumber":36,"author":{"gitId":"ivanmaister7"},"content":"    private MockMvc mockMvc;"},{"lineNumber":37,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":38,"author":{"gitId":"ivanmaister7"},"content":"    @MockBean"},{"lineNumber":39,"author":{"gitId":"ivanmaister7"},"content":"    private SkillService service;"},{"lineNumber":40,"author":{"gitId":"ivanmaister7"},"content":"    @MockBean"},{"lineNumber":41,"author":{"gitId":"ivanmaister7"},"content":"    private ProjectRepository projectRepository;"},{"lineNumber":42,"author":{"gitId":"ivanmaister7"},"content":"    @MockBean"},{"lineNumber":43,"author":{"gitId":"ivanmaister7"},"content":"    private TopicRepository topicRepository;"},{"lineNumber":44,"author":{"gitId":"ivanmaister7"},"content":"    @MockBean"},{"lineNumber":45,"author":{"gitId":"ivanmaister7"},"content":"    private SkillRepository skillRepository;"},{"lineNumber":46,"author":{"gitId":"ivanmaister7"},"content":"    @MockBean"},{"lineNumber":47,"author":{"gitId":"ivanmaister7"},"content":"    private SkillSetRepository skillSetRepository;"},{"lineNumber":48,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":49,"author":{"gitId":"ivanmaister7"},"content":"    @PostConstruct"},{"lineNumber":50,"author":{"gitId":"ivanmaister7"},"content":"    public void loadMock() {"},{"lineNumber":51,"author":{"gitId":"ivanmaister7"},"content":"        Skill skill1 \u003d new Skill(\"1\", \"skill1\", null);"},{"lineNumber":52,"author":{"gitId":"ivanmaister7"},"content":"        Skill skill2 \u003d new Skill(\"2\", \"skill2\", skill1);"},{"lineNumber":53,"author":{"gitId":"ivanmaister7"},"content":"        Skill skill5 \u003d new Skill(\"5\", \"skill5\", skill1);"},{"lineNumber":54,"author":{"gitId":"ivanmaister7"},"content":"        Skill skill6 \u003d new Skill(\"6\", \"skill6\", skill1);"},{"lineNumber":55,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":56,"author":{"gitId":"ivanmaister7"},"content":"        SkillDTO skillDTO5 \u003d new SkillDTO(\"5\",\"skilldto5\", \"1\");"},{"lineNumber":57,"author":{"gitId":"ivanmaister7"},"content":"        SkillDTO skillDTO6 \u003d new SkillDTO(\"6\",\"skilldto6\", \"1\");"},{"lineNumber":58,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":59,"author":{"gitId":"ivanmaister7"},"content":"        when(service.findAllSkills()).thenReturn(List.of(skill1,skill2));"},{"lineNumber":60,"author":{"gitId":"ivanmaister7"},"content":"        when(service.findOptionalSkillById(\"1\")).thenReturn(Optional.of(skill1));"},{"lineNumber":61,"author":{"gitId":"ivanmaister7"},"content":"        when(service.findOptionalSkillById(\"2\")).thenReturn(Optional.of(skill2));"},{"lineNumber":62,"author":{"gitId":"ivanmaister7"},"content":"        when(service.findOptionalSkillById(\"3\")).thenReturn(Optional.empty());"},{"lineNumber":63,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":64,"author":{"gitId":"ivanmaister7"},"content":"        when(service.createSkill(skillDTO5)).thenReturn(Optional.of(skill5));"},{"lineNumber":65,"author":{"gitId":"ivanmaister7"},"content":"        when(service.exist(\"5\")).thenReturn(true);"},{"lineNumber":66,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":67,"author":{"gitId":"ivanmaister7"},"content":"        when(service.createSkill(skillDTO6)).thenReturn(Optional.of(skill6));"},{"lineNumber":68,"author":{"gitId":"ivanmaister7"},"content":"        when(service.exist(\"6\")).thenReturn(false);"},{"lineNumber":69,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":70,"author":{"gitId":"ivanmaister7"},"content":"        when(service.updateSkill(\"5\", skillDTO5)).thenReturn(true);"},{"lineNumber":71,"author":{"gitId":"ivanmaister7"},"content":"        when(service.updateSkill(\"6\", skillDTO6)).thenReturn(false);"},{"lineNumber":72,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":73,"author":{"gitId":"ivanmaister7"},"content":"        when(service.deleteSkill(\"5\")).thenReturn(true);"},{"lineNumber":74,"author":{"gitId":"ivanmaister7"},"content":"        when(service.deleteSkill(\"6\")).thenReturn(false);"},{"lineNumber":75,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":77,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":78,"author":{"gitId":"ivanmaister7"},"content":"    void getAllSkills() throws Exception {"},{"lineNumber":79,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":80,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":81,"author":{"gitId":"ivanmaister7"},"content":"                        get(\"/skill\"))"},{"lineNumber":82,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isOk())"},{"lineNumber":83,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":84,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString("},{"lineNumber":85,"author":{"gitId":"ivanmaister7"},"content":"                        \"[{\\\"skillID\\\":\\\"1\\\",\\\"skillName\\\":\\\"skill1\\\",\\\"parentSkill\\\":null},\" +"},{"lineNumber":86,"author":{"gitId":"ivanmaister7"},"content":"                                \"{\\\"skillID\\\":\\\"2\\\",\\\"skillName\\\":\\\"skill2\\\",\\\"parentSkill\\\":\" +"},{"lineNumber":87,"author":{"gitId":"ivanmaister7"},"content":"                                    \"{\\\"skillID\\\":\\\"1\\\",\\\"skillName\\\":\\\"skill1\\\",\\\"parentSkill\\\":null}}]\")));"},{"lineNumber":88,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":90,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":91,"author":{"gitId":"ivanmaister7"},"content":"    void getSkillById2_OK() throws Exception {"},{"lineNumber":92,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":93,"author":{"gitId":"ivanmaister7"},"content":"                        get(\"/skill/2\"))"},{"lineNumber":94,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isOk())"},{"lineNumber":95,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":96,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString("},{"lineNumber":97,"author":{"gitId":"ivanmaister7"},"content":"                        \"{\\\"skillID\\\":\\\"2\\\",\\\"skillName\\\":\\\"skill2\\\",\\\"parentSkill\\\":\" +"},{"lineNumber":98,"author":{"gitId":"ivanmaister7"},"content":"                                \"{\\\"skillID\\\":\\\"1\\\",\\\"skillName\\\":\\\"skill1\\\",\\\"parentSkill\\\":null}}\")));"},{"lineNumber":99,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":101,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":102,"author":{"gitId":"ivanmaister7"},"content":"    void getSkillById1_OK() throws Exception {"},{"lineNumber":103,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":104,"author":{"gitId":"ivanmaister7"},"content":"                        get(\"/skill/1\"))"},{"lineNumber":105,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isOk())"},{"lineNumber":106,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":107,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString("},{"lineNumber":108,"author":{"gitId":"ivanmaister7"},"content":"                        \"{\\\"skillID\\\":\\\"1\\\",\\\"skillName\\\":\\\"skill1\\\",\\\"parentSkill\\\":null}\")));"},{"lineNumber":109,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":111,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":112,"author":{"gitId":"ivanmaister7"},"content":"    void getSkillById_BAD() throws Exception {"},{"lineNumber":113,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":114,"author":{"gitId":"ivanmaister7"},"content":"                        get(\"/skill/3\"))"},{"lineNumber":115,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isBadRequest())"},{"lineNumber":116,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":117,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"Skill with id \u003d 3 not found\")));"},{"lineNumber":118,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":120,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":121,"author":{"gitId":"ivanmaister7"},"content":"    void createSkill_CREATED() throws Exception {"},{"lineNumber":122,"author":{"gitId":"ivanmaister7"},"content":"        String content \u003d \"{\" +"},{"lineNumber":123,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillId\\\":\\\"5\\\",\" +"},{"lineNumber":124,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillName\\\":\\\"skilldto5\\\",\" +"},{"lineNumber":125,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"parentSkillID\\\":\\\"1\\\"\" +"},{"lineNumber":126,"author":{"gitId":"ivanmaister7"},"content":"                \"}\";"},{"lineNumber":127,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":128,"author":{"gitId":"ivanmaister7"},"content":"                        post(\"/skill\")"},{"lineNumber":129,"author":{"gitId":"ivanmaister7"},"content":"                                .contentType(MediaType.APPLICATION_JSON)"},{"lineNumber":130,"author":{"gitId":"ivanmaister7"},"content":"                                .content(content))"},{"lineNumber":131,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isCreated())"},{"lineNumber":132,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":133,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"New Skill created\")));"},{"lineNumber":134,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":136,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":137,"author":{"gitId":"ivanmaister7"},"content":"    void createSkill_BAD() throws Exception {"},{"lineNumber":138,"author":{"gitId":"ivanmaister7"},"content":"        String content \u003d \"{\" +"},{"lineNumber":139,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillId\\\":\\\"6\\\",\" +"},{"lineNumber":140,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillName\\\":\\\"skilldto6\\\",\" +"},{"lineNumber":141,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"parentSkillID\\\":\\\"1\\\"\" +"},{"lineNumber":142,"author":{"gitId":"ivanmaister7"},"content":"                \"}\";"},{"lineNumber":143,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":144,"author":{"gitId":"ivanmaister7"},"content":"                        post(\"/skill\")"},{"lineNumber":145,"author":{"gitId":"ivanmaister7"},"content":"                                .contentType(MediaType.APPLICATION_JSON)"},{"lineNumber":146,"author":{"gitId":"ivanmaister7"},"content":"                                .content(content))"},{"lineNumber":147,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isBadRequest())"},{"lineNumber":148,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":149,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"New Skill not created\")));"},{"lineNumber":150,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":152,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":153,"author":{"gitId":"ivanmaister7"},"content":"    void updateSkill_OK() throws Exception {"},{"lineNumber":154,"author":{"gitId":"ivanmaister7"},"content":"        String content \u003d \"{\" +"},{"lineNumber":155,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillId\\\":\\\"5\\\",\" +"},{"lineNumber":156,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillName\\\":\\\"skilldto5\\\",\" +"},{"lineNumber":157,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"parentSkillID\\\":\\\"1\\\"\" +"},{"lineNumber":158,"author":{"gitId":"ivanmaister7"},"content":"                \"}\";"},{"lineNumber":159,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":160,"author":{"gitId":"ivanmaister7"},"content":"                        put(\"/skill/5\")"},{"lineNumber":161,"author":{"gitId":"ivanmaister7"},"content":"                                .contentType(MediaType.APPLICATION_JSON)"},{"lineNumber":162,"author":{"gitId":"ivanmaister7"},"content":"                                .content(content))"},{"lineNumber":163,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isOk())"},{"lineNumber":164,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":165,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"Skill with id \u003d 5 updated\")));"},{"lineNumber":166,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":168,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":169,"author":{"gitId":"ivanmaister7"},"content":"    void updateSkill_BAD() throws Exception {"},{"lineNumber":170,"author":{"gitId":"ivanmaister7"},"content":"        String content \u003d \"{\" +"},{"lineNumber":171,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillId\\\":\\\"6\\\",\" +"},{"lineNumber":172,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillName\\\":\\\"skilldto6\\\",\" +"},{"lineNumber":173,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"parentSkillID\\\":\\\"1\\\"\" +"},{"lineNumber":174,"author":{"gitId":"ivanmaister7"},"content":"                \"}\";"},{"lineNumber":175,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":176,"author":{"gitId":"ivanmaister7"},"content":"                        put(\"/skill/6\")"},{"lineNumber":177,"author":{"gitId":"ivanmaister7"},"content":"                                .contentType(MediaType.APPLICATION_JSON)"},{"lineNumber":178,"author":{"gitId":"ivanmaister7"},"content":"                                .content(content))"},{"lineNumber":179,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isBadRequest())"},{"lineNumber":180,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":181,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"Skill with id \u003d 6 not updated\")));"},{"lineNumber":182,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":184,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":185,"author":{"gitId":"ivanmaister7"},"content":"    void deleteSkill_OK() throws Exception {"},{"lineNumber":186,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":187,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":188,"author":{"gitId":"ivanmaister7"},"content":"                        delete(\"/skill/5\"))"},{"lineNumber":189,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isOk())"},{"lineNumber":190,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":191,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"Skill with id \u003d 5 deleted\")));"},{"lineNumber":192,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":193,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":194,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":195,"author":{"gitId":"ivanmaister7"},"content":"    void deleteSkill_BAD() throws Exception {"},{"lineNumber":196,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":197,"author":{"gitId":"ivanmaister7"},"content":"                        delete(\"/skill/6\"))"},{"lineNumber":198,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isBadRequest())"},{"lineNumber":199,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":200,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"Skill with id \u003d 6 not deleted\")));"},{"lineNumber":201,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":202,"author":{"gitId":"ivanmaister7"},"content":"}"}],"authorContributionMap":{"ivanmaister7":202}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/controller/SkillSetControllerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanmaister7"},"content":"package edu.kmaooad.controller;"},{"lineNumber":2,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.DTO.SkillSetDTO;"},{"lineNumber":4,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.models.Skill;"},{"lineNumber":5,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.models.SkillSet;"},{"lineNumber":6,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.repository.ProjectRepository;"},{"lineNumber":7,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.repository.SkillRepository;"},{"lineNumber":8,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.repository.SkillSetRepository;"},{"lineNumber":9,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.repository.TopicRepository;"},{"lineNumber":10,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.service.SkillSetService;"},{"lineNumber":11,"author":{"gitId":"ivanmaister7"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":12,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":13,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;"},{"lineNumber":14,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.boot.test.mock.mockito.MockBean;"},{"lineNumber":15,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.http.MediaType;"},{"lineNumber":16,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.test.web.servlet.MockMvc;"},{"lineNumber":17,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":18,"author":{"gitId":"ivanmaister7"},"content":"import javax.annotation.PostConstruct;"},{"lineNumber":19,"author":{"gitId":"ivanmaister7"},"content":"import java.util.HashSet;"},{"lineNumber":20,"author":{"gitId":"ivanmaister7"},"content":"import java.util.List;"},{"lineNumber":21,"author":{"gitId":"ivanmaister7"},"content":"import java.util.Optional;"},{"lineNumber":22,"author":{"gitId":"ivanmaister7"},"content":"import java.util.Set;"},{"lineNumber":23,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":24,"author":{"gitId":"ivanmaister7"},"content":"import static org.hamcrest.Matchers.containsString;"},{"lineNumber":25,"author":{"gitId":"ivanmaister7"},"content":"import static org.mockito.Mockito.when;"},{"lineNumber":26,"author":{"gitId":"ivanmaister7"},"content":"import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;"},{"lineNumber":27,"author":{"gitId":"ivanmaister7"},"content":"import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;"},{"lineNumber":28,"author":{"gitId":"ivanmaister7"},"content":"import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;"},{"lineNumber":29,"author":{"gitId":"ivanmaister7"},"content":"import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;"},{"lineNumber":30,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":31,"author":{"gitId":"ivanmaister7"},"content":"@WebMvcTest(SkillSetController.class)"},{"lineNumber":32,"author":{"gitId":"ivanmaister7"},"content":"class SkillSetControllerTest {"},{"lineNumber":33,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":34,"author":{"gitId":"ivanmaister7"},"content":"    @Autowired"},{"lineNumber":35,"author":{"gitId":"ivanmaister7"},"content":"    private MockMvc mockMvc;"},{"lineNumber":36,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":37,"author":{"gitId":"ivanmaister7"},"content":"    @MockBean"},{"lineNumber":38,"author":{"gitId":"ivanmaister7"},"content":"    private SkillSetService service;"},{"lineNumber":39,"author":{"gitId":"ivanmaister7"},"content":"    @MockBean"},{"lineNumber":40,"author":{"gitId":"ivanmaister7"},"content":"    private ProjectRepository projectRepository;"},{"lineNumber":41,"author":{"gitId":"ivanmaister7"},"content":"    @MockBean"},{"lineNumber":42,"author":{"gitId":"ivanmaister7"},"content":"    private TopicRepository topicRepository;"},{"lineNumber":43,"author":{"gitId":"ivanmaister7"},"content":"    @MockBean"},{"lineNumber":44,"author":{"gitId":"ivanmaister7"},"content":"    private SkillSetRepository skillSetRepository;"},{"lineNumber":45,"author":{"gitId":"ivanmaister7"},"content":"    @MockBean"},{"lineNumber":46,"author":{"gitId":"ivanmaister7"},"content":"    private SkillRepository skillRepository;"},{"lineNumber":47,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":48,"author":{"gitId":"ivanmaister7"},"content":"    @PostConstruct"},{"lineNumber":49,"author":{"gitId":"ivanmaister7"},"content":"    public void loadMock() {"},{"lineNumber":50,"author":{"gitId":"ivanmaister7"},"content":"        Skill skill1 \u003d new Skill(\"1\", \"skill1\", null);"},{"lineNumber":51,"author":{"gitId":"ivanmaister7"},"content":"        Skill skill2 \u003d new Skill(\"2\", \"skill2\", skill1);"},{"lineNumber":52,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":53,"author":{"gitId":"ivanmaister7"},"content":"        SkillSet skillSet1 \u003d new SkillSet(\"1\", \"SkillSet1\", new HashSet\u003c\u003e());"},{"lineNumber":54,"author":{"gitId":"ivanmaister7"},"content":"        SkillSet skillSet2 \u003d new SkillSet(\"2\", \"SkillSet2\", Set.of(skill2));"},{"lineNumber":55,"author":{"gitId":"ivanmaister7"},"content":"        SkillSet skillSet5 \u003d new SkillSet(\"5\", \"SkillSet5\", new HashSet\u003c\u003e());"},{"lineNumber":56,"author":{"gitId":"ivanmaister7"},"content":"        SkillSet skillSet6 \u003d new SkillSet(\"6\", \"SkillSet6\", Set.of(skill1));"},{"lineNumber":57,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":58,"author":{"gitId":"ivanmaister7"},"content":"        SkillSetDTO skillSetDTO5 \u003d new SkillSetDTO(\"5\", \"SkillSetDTO5\", new HashSet\u003c\u003e());"},{"lineNumber":59,"author":{"gitId":"ivanmaister7"},"content":"        SkillSetDTO skillSetDTO6 \u003d new SkillSetDTO(\"6\", \"SkillSetDTO6\", new HashSet\u003c\u003e());"},{"lineNumber":60,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":61,"author":{"gitId":"ivanmaister7"},"content":"        when(service.findAllSkillSets()).thenReturn(List.of(skillSet1,skillSet2));"},{"lineNumber":62,"author":{"gitId":"ivanmaister7"},"content":"        when(service.findOptionalSkillSetById(\"1\")).thenReturn(Optional.of(skillSet1));"},{"lineNumber":63,"author":{"gitId":"ivanmaister7"},"content":"        when(service.findOptionalSkillSetById(\"2\")).thenReturn(Optional.of(skillSet2));"},{"lineNumber":64,"author":{"gitId":"ivanmaister7"},"content":"        when(service.findOptionalSkillSetById(\"3\")).thenReturn(Optional.empty());"},{"lineNumber":65,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":66,"author":{"gitId":"ivanmaister7"},"content":"        when(service.createSkillSet(skillSetDTO5)).thenReturn(skillSet5);"},{"lineNumber":67,"author":{"gitId":"ivanmaister7"},"content":"        when(service.exist(\"5\")).thenReturn(true);"},{"lineNumber":68,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":69,"author":{"gitId":"ivanmaister7"},"content":"        when(service.createSkillSet(skillSetDTO6)).thenReturn(skillSet6);"},{"lineNumber":70,"author":{"gitId":"ivanmaister7"},"content":"        when(service.exist(\"6\")).thenReturn(false);"},{"lineNumber":71,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":72,"author":{"gitId":"ivanmaister7"},"content":"        when(service.updateSkillSet(\"5\", skillSetDTO5)).thenReturn(true);"},{"lineNumber":73,"author":{"gitId":"ivanmaister7"},"content":"        when(service.updateSkillSet(\"6\", skillSetDTO6)).thenReturn(false);"},{"lineNumber":74,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":75,"author":{"gitId":"ivanmaister7"},"content":"        when(service.deleteSkillSet(\"5\")).thenReturn(true);"},{"lineNumber":76,"author":{"gitId":"ivanmaister7"},"content":"        when(service.deleteSkillSet(\"6\")).thenReturn(false);"},{"lineNumber":77,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":79,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":80,"author":{"gitId":"ivanmaister7"},"content":"    void getAllSkillSets() throws Exception {"},{"lineNumber":81,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":82,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":83,"author":{"gitId":"ivanmaister7"},"content":"                        get(\"/skillSet\"))"},{"lineNumber":84,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isOk())"},{"lineNumber":85,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":86,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString("},{"lineNumber":87,"author":{"gitId":"ivanmaister7"},"content":"                        \"[{\\\"skillSetID\\\":\\\"1\\\",\\\"skillSetName\\\":\\\"SkillSet1\\\",\\\"skills\\\":[]},\" +"},{"lineNumber":88,"author":{"gitId":"ivanmaister7"},"content":"                                \"{\\\"skillSetID\\\":\\\"2\\\",\\\"skillSetName\\\":\\\"SkillSet2\\\",\\\"skills\\\":\" +"},{"lineNumber":89,"author":{"gitId":"ivanmaister7"},"content":"                                \"[{\\\"skillID\\\":\\\"2\\\",\\\"skillName\\\":\\\"skill2\\\",\\\"parentSkill\\\":\" +"},{"lineNumber":90,"author":{"gitId":"ivanmaister7"},"content":"                                \"{\\\"skillID\\\":\\\"1\\\",\\\"skillName\\\":\\\"skill1\\\",\\\"parentSkill\\\":null}}]}]\")));"},{"lineNumber":91,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":93,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":94,"author":{"gitId":"ivanmaister7"},"content":"    void getSkillSetById2_OK() throws Exception {"},{"lineNumber":95,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":96,"author":{"gitId":"ivanmaister7"},"content":"                        get(\"/skillSet/2\"))"},{"lineNumber":97,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isOk())"},{"lineNumber":98,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":99,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString("},{"lineNumber":100,"author":{"gitId":"ivanmaister7"},"content":"                        \"{\\\"skillSetID\\\":\\\"2\\\",\\\"skillSetName\\\":\\\"SkillSet2\\\",\\\"skills\\\":\" +"},{"lineNumber":101,"author":{"gitId":"ivanmaister7"},"content":"                                \"[{\\\"skillID\\\":\\\"2\\\",\\\"skillName\\\":\\\"skill2\\\",\\\"parentSkill\\\":\" +"},{"lineNumber":102,"author":{"gitId":"ivanmaister7"},"content":"                                \"{\\\"skillID\\\":\\\"1\\\",\\\"skillName\\\":\\\"skill1\\\",\\\"parentSkill\\\":null}}]}\")));"},{"lineNumber":103,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":105,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":106,"author":{"gitId":"ivanmaister7"},"content":"    void getSkillSetById1_OK() throws Exception {"},{"lineNumber":107,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":108,"author":{"gitId":"ivanmaister7"},"content":"                        get(\"/skillSet/1\"))"},{"lineNumber":109,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isOk())"},{"lineNumber":110,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":111,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString("},{"lineNumber":112,"author":{"gitId":"ivanmaister7"},"content":"                        \"{\\\"skillSetID\\\":\\\"1\\\",\\\"skillSetName\\\":\\\"SkillSet1\\\",\\\"skills\\\":[]}\")));"},{"lineNumber":113,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":115,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":116,"author":{"gitId":"ivanmaister7"},"content":"    void getSkillSetById_BAD() throws Exception {"},{"lineNumber":117,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":118,"author":{"gitId":"ivanmaister7"},"content":"                        get(\"/skillSet/3\"))"},{"lineNumber":119,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isBadRequest())"},{"lineNumber":120,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":121,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"SkillSet with id \u003d 3 not found\")));"},{"lineNumber":122,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":124,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":125,"author":{"gitId":"ivanmaister7"},"content":"    void createSkillSet_CREATED() throws Exception {"},{"lineNumber":126,"author":{"gitId":"ivanmaister7"},"content":"        String content \u003d \"{\" +"},{"lineNumber":127,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillSetId\\\":\\\"5\\\",\" +"},{"lineNumber":128,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillSetName\\\":\\\"SkillSetDTO5\\\",\" +"},{"lineNumber":129,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillIds\\\":[]\" +"},{"lineNumber":130,"author":{"gitId":"ivanmaister7"},"content":"                \"}\";"},{"lineNumber":131,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":132,"author":{"gitId":"ivanmaister7"},"content":"                        post(\"/skillSet\")"},{"lineNumber":133,"author":{"gitId":"ivanmaister7"},"content":"                                .contentType(MediaType.APPLICATION_JSON)"},{"lineNumber":134,"author":{"gitId":"ivanmaister7"},"content":"                                .content(content))"},{"lineNumber":135,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isCreated())"},{"lineNumber":136,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":137,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"New SkillSet created\")));"},{"lineNumber":138,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":140,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":141,"author":{"gitId":"ivanmaister7"},"content":"    void createSkillSet_BAD() throws Exception {"},{"lineNumber":142,"author":{"gitId":"ivanmaister7"},"content":"        String content \u003d \"{\" +"},{"lineNumber":143,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillSetId\\\":\\\"6\\\",\" +"},{"lineNumber":144,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillSetName\\\":\\\"SkillSetDTO6\\\",\" +"},{"lineNumber":145,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillIds\\\":[]\" +"},{"lineNumber":146,"author":{"gitId":"ivanmaister7"},"content":"                \"}\";"},{"lineNumber":147,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":148,"author":{"gitId":"ivanmaister7"},"content":"                        post(\"/skillSet\")"},{"lineNumber":149,"author":{"gitId":"ivanmaister7"},"content":"                                .contentType(MediaType.APPLICATION_JSON)"},{"lineNumber":150,"author":{"gitId":"ivanmaister7"},"content":"                                .content(content))"},{"lineNumber":151,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isBadRequest())"},{"lineNumber":152,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":153,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"New SkillSet not created\")));"},{"lineNumber":154,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":156,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":157,"author":{"gitId":"ivanmaister7"},"content":"    void updateSkillSet_OK() throws Exception {"},{"lineNumber":158,"author":{"gitId":"ivanmaister7"},"content":"        String content \u003d \"{\" +"},{"lineNumber":159,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillSetId\\\":\\\"5\\\",\" +"},{"lineNumber":160,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillSetName\\\":\\\"SkillSetDTO5\\\",\" +"},{"lineNumber":161,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillIds\\\":[]\" +"},{"lineNumber":162,"author":{"gitId":"ivanmaister7"},"content":"                \"}\";"},{"lineNumber":163,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":164,"author":{"gitId":"ivanmaister7"},"content":"                        put(\"/skillSet/5\")"},{"lineNumber":165,"author":{"gitId":"ivanmaister7"},"content":"                                .contentType(MediaType.APPLICATION_JSON)"},{"lineNumber":166,"author":{"gitId":"ivanmaister7"},"content":"                                .content(content))"},{"lineNumber":167,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isOk())"},{"lineNumber":168,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":169,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"SkillSet with id \u003d 5 updated\")));"},{"lineNumber":170,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":172,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":173,"author":{"gitId":"ivanmaister7"},"content":"    void updateSkillSet_BAD() throws Exception {"},{"lineNumber":174,"author":{"gitId":"ivanmaister7"},"content":"        String content \u003d \"{\" +"},{"lineNumber":175,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillSetId\\\":\\\"6\\\",\" +"},{"lineNumber":176,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillSetName\\\":\\\"SkillSetDTO5\\\",\" +"},{"lineNumber":177,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"skillIds\\\":[]\" +"},{"lineNumber":178,"author":{"gitId":"ivanmaister7"},"content":"                \"}\";"},{"lineNumber":179,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":180,"author":{"gitId":"ivanmaister7"},"content":"                        put(\"/skillSet/6\")"},{"lineNumber":181,"author":{"gitId":"ivanmaister7"},"content":"                                .contentType(MediaType.APPLICATION_JSON)"},{"lineNumber":182,"author":{"gitId":"ivanmaister7"},"content":"                                .content(content))"},{"lineNumber":183,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isBadRequest())"},{"lineNumber":184,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":185,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"SkillSet with id \u003d 6 not updated\")));"},{"lineNumber":186,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":188,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":189,"author":{"gitId":"ivanmaister7"},"content":"    void deleteSkillSet_OK() throws Exception {"},{"lineNumber":190,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":191,"author":{"gitId":"ivanmaister7"},"content":"                        delete(\"/skillSet/5\"))"},{"lineNumber":192,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isOk())"},{"lineNumber":193,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":194,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"SkillSet with id \u003d 5 deleted\")));"},{"lineNumber":195,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":196,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":197,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":198,"author":{"gitId":"ivanmaister7"},"content":"    void deleteSkillSet_BAD() throws Exception {"},{"lineNumber":199,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":200,"author":{"gitId":"ivanmaister7"},"content":"                        delete(\"/skillSet/6\"))"},{"lineNumber":201,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isBadRequest())"},{"lineNumber":202,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":203,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"SkillSet with id \u003d 6 not deleted\")));"},{"lineNumber":204,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":205,"author":{"gitId":"ivanmaister7"},"content":"}"}],"authorContributionMap":{"ivanmaister7":205}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/controller/TopicControllerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanmaister7"},"content":"package edu.kmaooad.controller;"},{"lineNumber":2,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.DTO.TopicDTO;"},{"lineNumber":4,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.models.Topic;"},{"lineNumber":5,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.repository.ProjectRepository;"},{"lineNumber":6,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.repository.SkillRepository;"},{"lineNumber":7,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.repository.SkillSetRepository;"},{"lineNumber":8,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.repository.TopicRepository;"},{"lineNumber":9,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.service.TopicService;"},{"lineNumber":10,"author":{"gitId":"ivanmaister7"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":11,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":12,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;"},{"lineNumber":13,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.boot.test.mock.mockito.MockBean;"},{"lineNumber":14,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.http.MediaType;"},{"lineNumber":15,"author":{"gitId":"ivanmaister7"},"content":"import org.springframework.test.web.servlet.MockMvc;"},{"lineNumber":16,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":17,"author":{"gitId":"ivanmaister7"},"content":"import javax.annotation.PostConstruct;"},{"lineNumber":18,"author":{"gitId":"ivanmaister7"},"content":"import java.util.List;"},{"lineNumber":19,"author":{"gitId":"ivanmaister7"},"content":"import java.util.Optional;"},{"lineNumber":20,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":21,"author":{"gitId":"ivanmaister7"},"content":"import static org.hamcrest.Matchers.containsString;"},{"lineNumber":22,"author":{"gitId":"ivanmaister7"},"content":"import static org.mockito.Mockito.when;"},{"lineNumber":23,"author":{"gitId":"ivanmaister7"},"content":"import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;"},{"lineNumber":24,"author":{"gitId":"ivanmaister7"},"content":"import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;"},{"lineNumber":25,"author":{"gitId":"ivanmaister7"},"content":"import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;"},{"lineNumber":26,"author":{"gitId":"ivanmaister7"},"content":"import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;"},{"lineNumber":27,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":28,"author":{"gitId":"ivanmaister7"},"content":"@WebMvcTest(TopicController.class)"},{"lineNumber":29,"author":{"gitId":"ivanmaister7"},"content":"class TopicControllerTest {"},{"lineNumber":30,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":31,"author":{"gitId":"ivanmaister7"},"content":"    @Autowired"},{"lineNumber":32,"author":{"gitId":"ivanmaister7"},"content":"    private MockMvc mockMvc;"},{"lineNumber":33,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":34,"author":{"gitId":"ivanmaister7"},"content":"    @MockBean"},{"lineNumber":35,"author":{"gitId":"ivanmaister7"},"content":"    private TopicService service;"},{"lineNumber":36,"author":{"gitId":"ivanmaister7"},"content":"    @MockBean"},{"lineNumber":37,"author":{"gitId":"ivanmaister7"},"content":"    private ProjectRepository projectRepository;"},{"lineNumber":38,"author":{"gitId":"ivanmaister7"},"content":"    @MockBean"},{"lineNumber":39,"author":{"gitId":"ivanmaister7"},"content":"    private TopicRepository topicRepository;"},{"lineNumber":40,"author":{"gitId":"ivanmaister7"},"content":"    @MockBean"},{"lineNumber":41,"author":{"gitId":"ivanmaister7"},"content":"    private SkillRepository skillRepository;"},{"lineNumber":42,"author":{"gitId":"ivanmaister7"},"content":"    @MockBean"},{"lineNumber":43,"author":{"gitId":"ivanmaister7"},"content":"    private SkillSetRepository skillSetRepository;"},{"lineNumber":44,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":45,"author":{"gitId":"ivanmaister7"},"content":"    @PostConstruct"},{"lineNumber":46,"author":{"gitId":"ivanmaister7"},"content":"    public void loadMock() {"},{"lineNumber":47,"author":{"gitId":"ivanmaister7"},"content":"        Topic topic1 \u003d new Topic(\"1\", \"Topic1\", null);"},{"lineNumber":48,"author":{"gitId":"ivanmaister7"},"content":"        Topic topic2 \u003d new Topic(\"2\", \"Topic2\", topic1);"},{"lineNumber":49,"author":{"gitId":"ivanmaister7"},"content":"        Topic topic5 \u003d new Topic(\"5\", \"Topic5\", topic1);"},{"lineNumber":50,"author":{"gitId":"ivanmaister7"},"content":"        Topic topic6 \u003d new Topic(\"6\", \"Topic6\", topic1);"},{"lineNumber":51,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":52,"author":{"gitId":"ivanmaister7"},"content":"        TopicDTO topicDTO5 \u003d new TopicDTO(\"5\", \"Topicdto5\", \"1\");"},{"lineNumber":53,"author":{"gitId":"ivanmaister7"},"content":"        TopicDTO topicDTO6 \u003d new TopicDTO(\"6\",\"Topicdto6\", \"1\");"},{"lineNumber":54,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":55,"author":{"gitId":"ivanmaister7"},"content":"        when(service.findAllTopics()).thenReturn(List.of(topic1,topic2));"},{"lineNumber":56,"author":{"gitId":"ivanmaister7"},"content":"        when(service.findOptionalTopicById(\"1\")).thenReturn(Optional.of(topic1));"},{"lineNumber":57,"author":{"gitId":"ivanmaister7"},"content":"        when(service.findOptionalTopicById(\"2\")).thenReturn(Optional.of(topic2));"},{"lineNumber":58,"author":{"gitId":"ivanmaister7"},"content":"        when(service.findOptionalTopicById(\"3\")).thenReturn(Optional.empty());"},{"lineNumber":59,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":60,"author":{"gitId":"ivanmaister7"},"content":"        when(service.createTopic(topicDTO5)).thenReturn(Optional.of(topic5));"},{"lineNumber":61,"author":{"gitId":"ivanmaister7"},"content":"        when(service.exist(\"5\")).thenReturn(true);"},{"lineNumber":62,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":63,"author":{"gitId":"ivanmaister7"},"content":"        when(service.createTopic(topicDTO6)).thenReturn(Optional.of(topic6));"},{"lineNumber":64,"author":{"gitId":"ivanmaister7"},"content":"        when(service.exist(\"6\")).thenReturn(false);"},{"lineNumber":65,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":66,"author":{"gitId":"ivanmaister7"},"content":"        when(service.updateTopic(\"5\", topicDTO5)).thenReturn(true);"},{"lineNumber":67,"author":{"gitId":"ivanmaister7"},"content":"        when(service.updateTopic(\"6\", topicDTO6)).thenReturn(false);"},{"lineNumber":68,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":69,"author":{"gitId":"ivanmaister7"},"content":"        when(service.deleteTopic(\"5\")).thenReturn(true);"},{"lineNumber":70,"author":{"gitId":"ivanmaister7"},"content":"        when(service.deleteTopic(\"6\")).thenReturn(false);"},{"lineNumber":71,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":73,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":74,"author":{"gitId":"ivanmaister7"},"content":"    void getAllTopics() throws Exception {"},{"lineNumber":75,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":76,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":77,"author":{"gitId":"ivanmaister7"},"content":"                        get(\"/topic\"))"},{"lineNumber":78,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isOk())"},{"lineNumber":79,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":80,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString("},{"lineNumber":81,"author":{"gitId":"ivanmaister7"},"content":"                        \"[{\\\"topicID\\\":\\\"1\\\",\\\"topicName\\\":\\\"Topic1\\\",\\\"parentTopic\\\":null},\" +"},{"lineNumber":82,"author":{"gitId":"ivanmaister7"},"content":"                                \"{\\\"topicID\\\":\\\"2\\\",\\\"topicName\\\":\\\"Topic2\\\",\\\"parentTopic\\\":\" +"},{"lineNumber":83,"author":{"gitId":"ivanmaister7"},"content":"                                \"{\\\"topicID\\\":\\\"1\\\",\\\"topicName\\\":\\\"Topic1\\\",\\\"parentTopic\\\":null}}]\")));"},{"lineNumber":84,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":86,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":87,"author":{"gitId":"ivanmaister7"},"content":"    void getTopicById2_OK() throws Exception {"},{"lineNumber":88,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":89,"author":{"gitId":"ivanmaister7"},"content":"                        get(\"/topic/2\"))"},{"lineNumber":90,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isOk())"},{"lineNumber":91,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":92,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString("},{"lineNumber":93,"author":{"gitId":"ivanmaister7"},"content":"                        \"{\\\"topicID\\\":\\\"2\\\",\\\"topicName\\\":\\\"Topic2\\\",\\\"parentTopic\\\":\" +"},{"lineNumber":94,"author":{"gitId":"ivanmaister7"},"content":"                                \"{\\\"topicID\\\":\\\"1\\\",\\\"topicName\\\":\\\"Topic1\\\",\\\"parentTopic\\\":null}}\")));"},{"lineNumber":95,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":97,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":98,"author":{"gitId":"ivanmaister7"},"content":"    void getTopicById1_OK() throws Exception {"},{"lineNumber":99,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":100,"author":{"gitId":"ivanmaister7"},"content":"                        get(\"/topic/1\"))"},{"lineNumber":101,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isOk())"},{"lineNumber":102,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":103,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString("},{"lineNumber":104,"author":{"gitId":"ivanmaister7"},"content":"                        \"{\\\"topicID\\\":\\\"1\\\",\\\"topicName\\\":\\\"Topic1\\\",\\\"parentTopic\\\":null}\")));"},{"lineNumber":105,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":107,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":108,"author":{"gitId":"ivanmaister7"},"content":"    void getTopicById_BAD() throws Exception {"},{"lineNumber":109,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":110,"author":{"gitId":"ivanmaister7"},"content":"                        get(\"/topic/3\"))"},{"lineNumber":111,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isBadRequest())"},{"lineNumber":112,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":113,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"Topic with id \u003d 3 not found\")));"},{"lineNumber":114,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":116,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":117,"author":{"gitId":"ivanmaister7"},"content":"    void createTopic_CREATED() throws Exception {"},{"lineNumber":118,"author":{"gitId":"ivanmaister7"},"content":"        String content \u003d \"{\" +"},{"lineNumber":119,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"topicId\\\":\\\"5\\\",\" +"},{"lineNumber":120,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"topicName\\\":\\\"Topicdto5\\\",\" +"},{"lineNumber":121,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"parentTopicId\\\":\\\"1\\\"\" +"},{"lineNumber":122,"author":{"gitId":"ivanmaister7"},"content":"                \"}\";"},{"lineNumber":123,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":124,"author":{"gitId":"ivanmaister7"},"content":"                        post(\"/topic\")"},{"lineNumber":125,"author":{"gitId":"ivanmaister7"},"content":"                                .contentType(MediaType.APPLICATION_JSON)"},{"lineNumber":126,"author":{"gitId":"ivanmaister7"},"content":"                                .content(content))"},{"lineNumber":127,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isCreated())"},{"lineNumber":128,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":129,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"New Topic created\")));"},{"lineNumber":130,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":132,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":133,"author":{"gitId":"ivanmaister7"},"content":"    void createTopic_BAD() throws Exception {"},{"lineNumber":134,"author":{"gitId":"ivanmaister7"},"content":"        String content \u003d \"{\" +"},{"lineNumber":135,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"topicId\\\":\\\"6\\\",\" +"},{"lineNumber":136,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"topicName\\\":\\\"Topicdto6\\\",\" +"},{"lineNumber":137,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"parentTopicId\\\":\\\"1\\\"\" +"},{"lineNumber":138,"author":{"gitId":"ivanmaister7"},"content":"                \"}\";"},{"lineNumber":139,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":140,"author":{"gitId":"ivanmaister7"},"content":"                        post(\"/topic\")"},{"lineNumber":141,"author":{"gitId":"ivanmaister7"},"content":"                                .contentType(MediaType.APPLICATION_JSON)"},{"lineNumber":142,"author":{"gitId":"ivanmaister7"},"content":"                                .content(content))"},{"lineNumber":143,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isBadRequest())"},{"lineNumber":144,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":145,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"New Topic not created\")));"},{"lineNumber":146,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":148,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":149,"author":{"gitId":"ivanmaister7"},"content":"    void updateTopic_OK() throws Exception {"},{"lineNumber":150,"author":{"gitId":"ivanmaister7"},"content":"        String content \u003d \"{\" +"},{"lineNumber":151,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"topicId\\\":\\\"5\\\",\" +"},{"lineNumber":152,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"topicName\\\":\\\"Topicdto5\\\",\" +"},{"lineNumber":153,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"parentTopicId\\\":\\\"1\\\"\" +"},{"lineNumber":154,"author":{"gitId":"ivanmaister7"},"content":"                \"}\";"},{"lineNumber":155,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":156,"author":{"gitId":"ivanmaister7"},"content":"                        put(\"/topic/5\")"},{"lineNumber":157,"author":{"gitId":"ivanmaister7"},"content":"                                .contentType(MediaType.APPLICATION_JSON)"},{"lineNumber":158,"author":{"gitId":"ivanmaister7"},"content":"                                .content(content))"},{"lineNumber":159,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isOk())"},{"lineNumber":160,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":161,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"Topic with id \u003d 5 updated\")));"},{"lineNumber":162,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":164,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":165,"author":{"gitId":"ivanmaister7"},"content":"    void updateTopic_BAD() throws Exception {"},{"lineNumber":166,"author":{"gitId":"ivanmaister7"},"content":"        String content \u003d \"{\" +"},{"lineNumber":167,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"topicId\\\":\\\"6\\\",\" +"},{"lineNumber":168,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"topicName\\\":\\\"Topicdto6\\\",\" +"},{"lineNumber":169,"author":{"gitId":"ivanmaister7"},"content":"                \"\\\"parentTopicId\\\":\\\"1\\\"\" +"},{"lineNumber":170,"author":{"gitId":"ivanmaister7"},"content":"                \"}\";"},{"lineNumber":171,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":172,"author":{"gitId":"ivanmaister7"},"content":"                        put(\"/topic/6\")"},{"lineNumber":173,"author":{"gitId":"ivanmaister7"},"content":"                                .contentType(MediaType.APPLICATION_JSON)"},{"lineNumber":174,"author":{"gitId":"ivanmaister7"},"content":"                                .content(content))"},{"lineNumber":175,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isBadRequest())"},{"lineNumber":176,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":177,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"Topic with id \u003d 6 not updated\")));"},{"lineNumber":178,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":180,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":181,"author":{"gitId":"ivanmaister7"},"content":"    void deleteTopic_OK() throws Exception {"},{"lineNumber":182,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":183,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":184,"author":{"gitId":"ivanmaister7"},"content":"                        delete(\"/topic/5\"))"},{"lineNumber":185,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isOk())"},{"lineNumber":186,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":187,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"Topic with id \u003d 5 deleted\")));"},{"lineNumber":188,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":190,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":191,"author":{"gitId":"ivanmaister7"},"content":"    void deleteTopic_BAD() throws Exception {"},{"lineNumber":192,"author":{"gitId":"ivanmaister7"},"content":"        this.mockMvc.perform("},{"lineNumber":193,"author":{"gitId":"ivanmaister7"},"content":"                        delete(\"/topic/6\"))"},{"lineNumber":194,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(status().isBadRequest())"},{"lineNumber":195,"author":{"gitId":"ivanmaister7"},"content":"                .andDo(print())"},{"lineNumber":196,"author":{"gitId":"ivanmaister7"},"content":"                .andExpect(content().string(containsString(\"Topic with id \u003d 6 not deleted\")));"},{"lineNumber":197,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":198,"author":{"gitId":"ivanmaister7"},"content":"}"}],"authorContributionMap":{"ivanmaister7":198}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/repository/ProjectRepositoryTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anastasiia Bezruka"},"content":"package edu.kmaooad.repository;"},{"lineNumber":2,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":3,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.models.Project;"},{"lineNumber":4,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.models.Skill;"},{"lineNumber":5,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.models.SkillSet;"},{"lineNumber":6,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.models.Topic;"},{"lineNumber":7,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":8,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":9,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.junit.jupiter.api.extension.ExtendWith;"},{"lineNumber":11,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":12,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.boot.test.autoconfigure.data.mongo.DataMongoTest;"},{"lineNumber":13,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.test.context.TestPropertySource;"},{"lineNumber":14,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.test.context.junit.jupiter.SpringExtension;"},{"lineNumber":15,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":16,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.List;"},{"lineNumber":17,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.Optional;"},{"lineNumber":18,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.stream.Collectors;"},{"lineNumber":19,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.stream.Stream;"},{"lineNumber":20,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":21,"author":{"gitId":"Anastasiia Bezruka"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":22,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":23,"author":{"gitId":"Anastasiia Bezruka"},"content":"@DataMongoTest"},{"lineNumber":24,"author":{"gitId":"Anastasiia Bezruka"},"content":"@ExtendWith(SpringExtension.class)"},{"lineNumber":25,"author":{"gitId":"Anastasiia Bezruka"},"content":"@TestPropertySource(properties \u003d \"spring.mongodb.embedded.version\u003d3.5.5\")"},{"lineNumber":26,"author":{"gitId":"Anastasiia Bezruka"},"content":"public class ProjectRepositoryTest {"},{"lineNumber":27,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Autowired"},{"lineNumber":28,"author":{"gitId":"Anastasiia Bezruka"},"content":"    ProjectRepository projectRepository;"},{"lineNumber":29,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":30,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public final List\u003cProject\u003e PROJECT_LIST \u003d initProjectList();"},{"lineNumber":31,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":32,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @BeforeEach"},{"lineNumber":33,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public void initDB() {"},{"lineNumber":34,"author":{"gitId":"Anastasiia Bezruka"},"content":"        projectRepository.saveAll(PROJECT_LIST);"},{"lineNumber":35,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":37,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @AfterEach"},{"lineNumber":38,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public void clearDB() {"},{"lineNumber":39,"author":{"gitId":"Anastasiia Bezruka"},"content":"        projectRepository.deleteAll();"},{"lineNumber":40,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":42,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public void findProject_byExistingTitle_shouldReturnProject() {"},{"lineNumber":44,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Project expected \u003d PROJECT_LIST.get(0);"},{"lineNumber":45,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Optional\u003cProject\u003e skillSetOptional \u003d projectRepository.findProjectByProjectTitle(expected.getProjectTitle());"},{"lineNumber":46,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertTrue(skillSetOptional.isPresent());"},{"lineNumber":47,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(expected, skillSetOptional.get());"},{"lineNumber":48,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":50,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public void findProject_byNonExistentTitle_shouldReturnEmptyOptional() {"},{"lineNumber":52,"author":{"gitId":"Anastasiia Bezruka"},"content":"        String nonexistent \u003d \"some name\";"},{"lineNumber":53,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Optional\u003cProject\u003e skillSetOptional \u003d projectRepository.findProjectByProjectTitle(nonexistent);"},{"lineNumber":54,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertFalse(skillSetOptional.isPresent());"},{"lineNumber":55,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":57,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private List\u003cProject\u003e initProjectList() {"},{"lineNumber":58,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Project project1 \u003d new Project();"},{"lineNumber":59,"author":{"gitId":"Anastasiia Bezruka"},"content":"        project1.setProjectID(\"projectId\");"},{"lineNumber":60,"author":{"gitId":"Anastasiia Bezruka"},"content":"        project1.setProjectTitle(\"Project\");"},{"lineNumber":61,"author":{"gitId":"Anastasiia Bezruka"},"content":"        project1.setProjectDescription(\"Description\");"},{"lineNumber":62,"author":{"gitId":"Anastasiia Bezruka"},"content":"        return Stream.of(project1).collect(Collectors.toList());"},{"lineNumber":63,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Anastasiia Bezruka"},"content":"}"}],"authorContributionMap":{"Anastasiia Bezruka":64}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/repository/SkillRepositoryTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OleksandRomaniuk"},"content":"package edu.kmaooad.repository;"},{"lineNumber":2,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":3,"author":{"gitId":"yostashko"},"content":"import edu.kmaooad.DTO.SkillDTO;"},{"lineNumber":4,"author":{"gitId":"yostashko"},"content":"import edu.kmaooad.DTO.TopicDTO;"},{"lineNumber":5,"author":{"gitId":"yostashko"},"content":"import edu.kmaooad.exeptions.SkillNotFoundException;"},{"lineNumber":6,"author":{"gitId":"yostashko"},"content":"import edu.kmaooad.exeptions.TopicNotFoundException;"},{"lineNumber":7,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.models.Skill;"},{"lineNumber":8,"author":{"gitId":"yostashko"},"content":"import edu.kmaooad.service.SkillService;"},{"lineNumber":9,"author":{"gitId":"yostashko"},"content":"import edu.kmaooad.service.TopicService;"},{"lineNumber":10,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":11,"author":{"gitId":"yostashko"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":12,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":13,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":14,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.junit.jupiter.api.extension.ExtendWith;"},{"lineNumber":15,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":16,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.springframework.boot.test.autoconfigure.data.mongo.DataMongoTest;"},{"lineNumber":17,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.springframework.test.context.TestPropertySource;"},{"lineNumber":18,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.springframework.test.context.junit.jupiter.SpringExtension;"},{"lineNumber":19,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":20,"author":{"gitId":"OleksandRomaniuk"},"content":"import java.util.List;"},{"lineNumber":21,"author":{"gitId":"OleksandRomaniuk"},"content":"import java.util.Optional;"},{"lineNumber":22,"author":{"gitId":"OleksandRomaniuk"},"content":"import java.util.stream.Collectors;"},{"lineNumber":23,"author":{"gitId":"OleksandRomaniuk"},"content":"import java.util.stream.Stream;"},{"lineNumber":24,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":25,"author":{"gitId":"yostashko"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":26,"author":{"gitId":"yostashko"},"content":"import static org.junit.Assert.assertNotEquals;"},{"lineNumber":27,"author":{"gitId":"OleksandRomaniuk"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":28,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":29,"author":{"gitId":"OleksandRomaniuk"},"content":"@DataMongoTest"},{"lineNumber":30,"author":{"gitId":"OleksandRomaniuk"},"content":"@ExtendWith(SpringExtension.class)"},{"lineNumber":31,"author":{"gitId":"OleksandRomaniuk"},"content":"@TestPropertySource(properties \u003d \"spring.mongodb.embedded.version\u003d3.5.5\")"},{"lineNumber":32,"author":{"gitId":"OleksandRomaniuk"},"content":"public class SkillRepositoryTest {"},{"lineNumber":33,"author":{"gitId":"OleksandRomaniuk"},"content":"    @Autowired"},{"lineNumber":34,"author":{"gitId":"OleksandRomaniuk"},"content":"    SkillRepository skillRepository;"},{"lineNumber":35,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":36,"author":{"gitId":"OleksandRomaniuk"},"content":"    public final List\u003cSkill\u003e PROJECT_LIST \u003d initSkill();"},{"lineNumber":37,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":38,"author":{"gitId":"OleksandRomaniuk"},"content":"    @BeforeEach"},{"lineNumber":39,"author":{"gitId":"OleksandRomaniuk"},"content":"    public void initDB() {"},{"lineNumber":40,"author":{"gitId":"OleksandRomaniuk"},"content":"        skillRepository.saveAll(PROJECT_LIST);"},{"lineNumber":41,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":43,"author":{"gitId":"OleksandRomaniuk"},"content":"    @AfterEach"},{"lineNumber":44,"author":{"gitId":"OleksandRomaniuk"},"content":"    public void clearDB() {"},{"lineNumber":45,"author":{"gitId":"OleksandRomaniuk"},"content":"        skillRepository.deleteAll();"},{"lineNumber":46,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":48,"author":{"gitId":"OleksandRomaniuk"},"content":"    @Test"},{"lineNumber":49,"author":{"gitId":"OleksandRomaniuk"},"content":"    public void findSkillbyName() {"},{"lineNumber":50,"author":{"gitId":"OleksandRomaniuk"},"content":"        Skill expected \u003d PROJECT_LIST.get(0);"},{"lineNumber":51,"author":{"gitId":"OleksandRomaniuk"},"content":"        Optional\u003cSkill\u003e skillOptional \u003d skillRepository.findSkillBySkillName(expected.getSkillName());"},{"lineNumber":52,"author":{"gitId":"OleksandRomaniuk"},"content":"        assertTrue(skillOptional.isPresent());"},{"lineNumber":53,"author":{"gitId":"OleksandRomaniuk"},"content":"        assertEquals(expected, skillOptional.get());"},{"lineNumber":54,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":56,"author":{"gitId":"OleksandRomaniuk"},"content":"    @Test"},{"lineNumber":57,"author":{"gitId":"OleksandRomaniuk"},"content":"    public void findSkillById() {"},{"lineNumber":58,"author":{"gitId":"OleksandRomaniuk"},"content":"        Skill expected \u003d PROJECT_LIST.get(0);"},{"lineNumber":59,"author":{"gitId":"OleksandRomaniuk"},"content":"        Optional\u003cSkill\u003e skillOptional \u003d skillRepository.findSkillBySkillID(expected.getSkillID());"},{"lineNumber":60,"author":{"gitId":"OleksandRomaniuk"},"content":"        assertTrue(skillOptional.isPresent());"},{"lineNumber":61,"author":{"gitId":"OleksandRomaniuk"},"content":"        assertEquals(expected, skillOptional.get());"},{"lineNumber":62,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"yostashko"},"content":"    @Test"},{"lineNumber":64,"author":{"gitId":"yostashko"},"content":"    public void createSkill() {"},{"lineNumber":65,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":66,"author":{"gitId":"yostashko"},"content":"        SkillService skillService \u003d new SkillService(skillRepository);"},{"lineNumber":67,"author":{"gitId":"yostashko"},"content":"        SkillDTO dto \u003d new SkillDTO(\"topic\");"},{"lineNumber":68,"author":{"gitId":"yostashko"},"content":"        dto.setSkillId(String.valueOf(12));"},{"lineNumber":69,"author":{"gitId":"yostashko"},"content":"        skillService.createSkill(dto);"},{"lineNumber":70,"author":{"gitId":"yostashko"},"content":"        assertNotNull(skillService.findSkillById(String.valueOf(12)));"},{"lineNumber":71,"author":{"gitId":"yostashko"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":73,"author":{"gitId":"yostashko"},"content":"    @Test"},{"lineNumber":74,"author":{"gitId":"yostashko"},"content":"    public void createTopic2() {"},{"lineNumber":75,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":76,"author":{"gitId":"yostashko"},"content":"        SkillService topicService \u003d new SkillService(skillRepository);"},{"lineNumber":77,"author":{"gitId":"yostashko"},"content":"        SkillDTO dto \u003d new SkillDTO(\"16\", \"fd\", \"fdfd\");"},{"lineNumber":78,"author":{"gitId":"yostashko"},"content":"        assertEquals(\"16\", dto.getSkillId());"},{"lineNumber":79,"author":{"gitId":"yostashko"},"content":"        assertTrue(dto.getSkillId().equals(\"16\"));"},{"lineNumber":80,"author":{"gitId":"yostashko"},"content":"        topicService.createSkill(dto);"},{"lineNumber":81,"author":{"gitId":"yostashko"},"content":"        assertNotNull(topicService.findSkillById(String.valueOf(16)));"},{"lineNumber":82,"author":{"gitId":"yostashko"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":84,"author":{"gitId":"yostashko"},"content":"    @Test"},{"lineNumber":85,"author":{"gitId":"yostashko"},"content":"    public void createTopic3() {"},{"lineNumber":86,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":87,"author":{"gitId":"yostashko"},"content":"        SkillService skillService \u003d new SkillService(skillRepository);"},{"lineNumber":88,"author":{"gitId":"yostashko"},"content":"        SkillDTO dto \u003d new SkillDTO(\"16\", \"fd\", \"fdfd\");"},{"lineNumber":89,"author":{"gitId":"yostashko"},"content":"        assertNotEquals(\"15\", dto.getSkillName());"},{"lineNumber":90,"author":{"gitId":"yostashko"},"content":"        assertFalse(dto.getSkillId().equals(\"1532\"));"},{"lineNumber":91,"author":{"gitId":"yostashko"},"content":"        skillService.createSkill(dto);"},{"lineNumber":92,"author":{"gitId":"yostashko"},"content":"        SkillNotFoundException thrown \u003d Assertions.assertThrows(SkillNotFoundException.class, () -\u003e {"},{"lineNumber":93,"author":{"gitId":"yostashko"},"content":"            skillService.findSkillById(String.valueOf(124));"},{"lineNumber":94,"author":{"gitId":"yostashko"},"content":"        });"},{"lineNumber":95,"author":{"gitId":"yostashko"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":97,"author":{"gitId":"yostashko"},"content":"    @Test"},{"lineNumber":98,"author":{"gitId":"yostashko"},"content":"    public void testDeleteTopic() {"},{"lineNumber":99,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":100,"author":{"gitId":"yostashko"},"content":"        SkillService skillService \u003d new SkillService(skillRepository);"},{"lineNumber":101,"author":{"gitId":"yostashko"},"content":"        SkillDTO dto \u003d new SkillDTO(\"16\", \"fd\", \"fdfd\");"},{"lineNumber":102,"author":{"gitId":"yostashko"},"content":"        skillService.createSkill(dto);"},{"lineNumber":103,"author":{"gitId":"yostashko"},"content":"        SkillNotFoundException thrown \u003d Assertions.assertThrows(SkillNotFoundException.class, () -\u003e {"},{"lineNumber":104,"author":{"gitId":"yostashko"},"content":"            skillService.updateSkill(String.valueOf(16),dto);"},{"lineNumber":105,"author":{"gitId":"yostashko"},"content":"        });"},{"lineNumber":106,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":107,"author":{"gitId":"yostashko"},"content":"        assertNotEquals(skillService.findSkillById(String.valueOf(16)), dto);"},{"lineNumber":108,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":109,"author":{"gitId":"yostashko"},"content":"        skillService.deleteSkill(String.valueOf(16));"},{"lineNumber":110,"author":{"gitId":"yostashko"},"content":"        SkillNotFoundException thrown2 \u003d Assertions.assertThrows(SkillNotFoundException.class, () -\u003e {"},{"lineNumber":111,"author":{"gitId":"yostashko"},"content":"            skillService.findSkillById(String.valueOf(16));"},{"lineNumber":112,"author":{"gitId":"yostashko"},"content":"        });"},{"lineNumber":113,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":114,"author":{"gitId":"yostashko"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":116,"author":{"gitId":"OleksandRomaniuk"},"content":"    private List\u003cSkill\u003e initSkill() {"},{"lineNumber":117,"author":{"gitId":"OleksandRomaniuk"},"content":"        Skill skill1 \u003d new Skill();"},{"lineNumber":118,"author":{"gitId":"OleksandRomaniuk"},"content":"        skill1.setSkillID(\"skillId\");"},{"lineNumber":119,"author":{"gitId":"OleksandRomaniuk"},"content":"        skill1.setSkillName(\"skill\");"},{"lineNumber":120,"author":{"gitId":"OleksandRomaniuk"},"content":"        return Stream.of(skill1).collect(Collectors.toList());"},{"lineNumber":121,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"OleksandRomaniuk"},"content":"}"}],"authorContributionMap":{"yostashko":62,"OleksandRomaniuk":60}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/repository/SkillSetRepositoryTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anastasiia Bezruka"},"content":"package edu.kmaooad.repository;"},{"lineNumber":2,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":3,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.models.Skill;"},{"lineNumber":4,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.models.SkillSet;"},{"lineNumber":5,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":6,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":7,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.junit.jupiter.api.extension.ExtendWith;"},{"lineNumber":9,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":10,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.boot.test.autoconfigure.data.mongo.DataMongoTest;"},{"lineNumber":11,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.data.mongodb.core.MongoTemplate;"},{"lineNumber":12,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.test.context.TestPropertySource;"},{"lineNumber":13,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.test.context.junit.jupiter.SpringExtension;"},{"lineNumber":14,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":15,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.List;"},{"lineNumber":16,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.Optional;"},{"lineNumber":17,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.stream.Collectors;"},{"lineNumber":18,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.stream.Stream;"},{"lineNumber":19,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":20,"author":{"gitId":"Anastasiia Bezruka"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":21,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":22,"author":{"gitId":"Anastasiia Bezruka"},"content":"@DataMongoTest"},{"lineNumber":23,"author":{"gitId":"Anastasiia Bezruka"},"content":"@ExtendWith(SpringExtension.class)"},{"lineNumber":24,"author":{"gitId":"Anastasiia Bezruka"},"content":"@TestPropertySource(properties \u003d \"spring.mongodb.embedded.version\u003d3.5.5\")"},{"lineNumber":25,"author":{"gitId":"Anastasiia Bezruka"},"content":"public class SkillSetRepositoryTest {"},{"lineNumber":26,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":27,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Autowired"},{"lineNumber":28,"author":{"gitId":"Anastasiia Bezruka"},"content":"    SkillSetRepository skillSetRepository;"},{"lineNumber":29,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":30,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public final List\u003cSkillSet\u003e SKILL_SETS \u003d initSkillSetList();"},{"lineNumber":31,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":32,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @BeforeEach"},{"lineNumber":33,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public void initDB() {"},{"lineNumber":34,"author":{"gitId":"Anastasiia Bezruka"},"content":"        skillSetRepository.saveAll(SKILL_SETS);"},{"lineNumber":35,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":37,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @AfterEach"},{"lineNumber":38,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public void clearDB() {"},{"lineNumber":39,"author":{"gitId":"Anastasiia Bezruka"},"content":"        skillSetRepository.deleteAll();"},{"lineNumber":40,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":42,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public void findSkillSet_byExistingName_shouldReturnSkill() {"},{"lineNumber":44,"author":{"gitId":"Anastasiia Bezruka"},"content":"        SkillSet expected \u003d SKILL_SETS.get(0);"},{"lineNumber":45,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Optional\u003cSkillSet\u003e skillSetOptional \u003d skillSetRepository.findSkillSetBySkillSetName(expected.getSkillSetName());"},{"lineNumber":46,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertTrue(skillSetOptional.isPresent());"},{"lineNumber":47,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(expected, skillSetOptional.get());"},{"lineNumber":48,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":50,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public void findSkillSet_byNonExistentName_shouldReturnEmptyOptional() {"},{"lineNumber":52,"author":{"gitId":"Anastasiia Bezruka"},"content":"        String nonexistent \u003d \"some name\";"},{"lineNumber":53,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Optional\u003cSkillSet\u003e skillSetOptional \u003d skillSetRepository.findSkillSetBySkillSetName(nonexistent);"},{"lineNumber":54,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertFalse(skillSetOptional.isPresent());"},{"lineNumber":55,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":57,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private List\u003cSkillSet\u003e initSkillSetList() {"},{"lineNumber":58,"author":{"gitId":"Anastasiia Bezruka"},"content":"        SkillSet skillSet \u003d new SkillSet();"},{"lineNumber":59,"author":{"gitId":"Anastasiia Bezruka"},"content":"        skillSet.setSkillSetID(\"skillsetId\");"},{"lineNumber":60,"author":{"gitId":"Anastasiia Bezruka"},"content":"        skillSet.setSkillSetName(\"SkillSet1\");"},{"lineNumber":61,"author":{"gitId":"Anastasiia Bezruka"},"content":"        SkillSet skillSet1 \u003d new SkillSet();"},{"lineNumber":62,"author":{"gitId":"Anastasiia Bezruka"},"content":"        skillSet1.setSkillSetID(\"skillsetId1\");"},{"lineNumber":63,"author":{"gitId":"Anastasiia Bezruka"},"content":"        skillSet1.setSkillSetName(\"SkillSet2\");"},{"lineNumber":64,"author":{"gitId":"Anastasiia Bezruka"},"content":"        return Stream.of(skillSet1, skillSet).collect(Collectors.toList());"},{"lineNumber":65,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"Anastasiia Bezruka"},"content":"}"}],"authorContributionMap":{"Anastasiia Bezruka":66}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/repository/TopicRepositoryTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OleksandRomaniuk"},"content":"package edu.kmaooad.repository;"},{"lineNumber":2,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":3,"author":{"gitId":"yostashko"},"content":"import edu.kmaooad.DTO.TopicDTO;"},{"lineNumber":4,"author":{"gitId":"yostashko"},"content":"import edu.kmaooad.exeptions.TopicNotFoundException;"},{"lineNumber":5,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.models.Skill;"},{"lineNumber":6,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.models.Topic;"},{"lineNumber":7,"author":{"gitId":"yostashko"},"content":"import edu.kmaooad.service.SkillService;"},{"lineNumber":8,"author":{"gitId":"yostashko"},"content":"import edu.kmaooad.service.TopicService;"},{"lineNumber":9,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":10,"author":{"gitId":"yostashko"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":11,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":12,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":13,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.junit.jupiter.api.extension.ExtendWith;"},{"lineNumber":14,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":15,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.springframework.boot.test.autoconfigure.data.mongo.DataMongoTest;"},{"lineNumber":16,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.springframework.test.context.TestPropertySource;"},{"lineNumber":17,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.springframework.test.context.junit.jupiter.SpringExtension;"},{"lineNumber":18,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":19,"author":{"gitId":"OleksandRomaniuk"},"content":"import java.util.List;"},{"lineNumber":20,"author":{"gitId":"OleksandRomaniuk"},"content":"import java.util.Optional;"},{"lineNumber":21,"author":{"gitId":"OleksandRomaniuk"},"content":"import java.util.stream.Collectors;"},{"lineNumber":22,"author":{"gitId":"OleksandRomaniuk"},"content":"import java.util.stream.Stream;"},{"lineNumber":23,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":24,"author":{"gitId":"yostashko"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":25,"author":{"gitId":"yostashko"},"content":"import static org.junit.Assert.assertNotEquals;"},{"lineNumber":26,"author":{"gitId":"yostashko"},"content":"import static org.junit.Assert.assertNull;"},{"lineNumber":27,"author":{"gitId":"OleksandRomaniuk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":28,"author":{"gitId":"yostashko"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;"},{"lineNumber":29,"author":{"gitId":"OleksandRomaniuk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":30,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":31,"author":{"gitId":"OleksandRomaniuk"},"content":"@DataMongoTest"},{"lineNumber":32,"author":{"gitId":"OleksandRomaniuk"},"content":"@ExtendWith(SpringExtension.class)"},{"lineNumber":33,"author":{"gitId":"OleksandRomaniuk"},"content":"@TestPropertySource(properties \u003d \"spring.mongodb.embedded.version\u003d3.5.5\")"},{"lineNumber":34,"author":{"gitId":"OleksandRomaniuk"},"content":"public class TopicRepositoryTest {"},{"lineNumber":35,"author":{"gitId":"OleksandRomaniuk"},"content":"    @Autowired"},{"lineNumber":36,"author":{"gitId":"OleksandRomaniuk"},"content":"    TopicRepository topicRepository;"},{"lineNumber":37,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":38,"author":{"gitId":"OleksandRomaniuk"},"content":"    public final List\u003cTopic\u003e PROJECT_LIST \u003d initSkill();"},{"lineNumber":39,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":40,"author":{"gitId":"OleksandRomaniuk"},"content":"    @BeforeEach"},{"lineNumber":41,"author":{"gitId":"OleksandRomaniuk"},"content":"    public void initDB() {"},{"lineNumber":42,"author":{"gitId":"OleksandRomaniuk"},"content":"        topicRepository.saveAll(PROJECT_LIST);"},{"lineNumber":43,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":45,"author":{"gitId":"OleksandRomaniuk"},"content":"    @AfterEach"},{"lineNumber":46,"author":{"gitId":"OleksandRomaniuk"},"content":"    public void clearDB() {"},{"lineNumber":47,"author":{"gitId":"OleksandRomaniuk"},"content":"        topicRepository.deleteAll();"},{"lineNumber":48,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":50,"author":{"gitId":"OleksandRomaniuk"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"OleksandRomaniuk"},"content":"    public void findTopicByName() {"},{"lineNumber":52,"author":{"gitId":"OleksandRomaniuk"},"content":"        Topic expected \u003d PROJECT_LIST.get(0);"},{"lineNumber":53,"author":{"gitId":"OleksandRomaniuk"},"content":"        Optional\u003cTopic\u003e topicOptional \u003d topicRepository.findTopicByTopicName(expected.getTopicName());"},{"lineNumber":54,"author":{"gitId":"OleksandRomaniuk"},"content":"        assertTrue(topicOptional.isPresent());"},{"lineNumber":55,"author":{"gitId":"OleksandRomaniuk"},"content":"        assertEquals(expected, topicOptional.get());"},{"lineNumber":56,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":58,"author":{"gitId":"yostashko"},"content":"    @Test"},{"lineNumber":59,"author":{"gitId":"yostashko"},"content":"    public void createTopic() {"},{"lineNumber":60,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":61,"author":{"gitId":"yostashko"},"content":"        TopicService topicService \u003d new TopicService(topicRepository);"},{"lineNumber":62,"author":{"gitId":"yostashko"},"content":"        TopicDTO dto \u003d new TopicDTO(\"topic\");"},{"lineNumber":63,"author":{"gitId":"yostashko"},"content":"        dto.setTopicId(String.valueOf(12));"},{"lineNumber":64,"author":{"gitId":"yostashko"},"content":"        topicService.createTopic(dto);"},{"lineNumber":65,"author":{"gitId":"yostashko"},"content":"        assertNotNull(topicService.findTopicById(String.valueOf(12)));"},{"lineNumber":66,"author":{"gitId":"yostashko"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":68,"author":{"gitId":"yostashko"},"content":"    @Test"},{"lineNumber":69,"author":{"gitId":"yostashko"},"content":"    public void createTopic2() {"},{"lineNumber":70,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":71,"author":{"gitId":"yostashko"},"content":"        TopicService topicService \u003d new TopicService(topicRepository);"},{"lineNumber":72,"author":{"gitId":"yostashko"},"content":"        TopicDTO dto \u003d new TopicDTO(\"16\", \"fd\", \"fdfd\");"},{"lineNumber":73,"author":{"gitId":"yostashko"},"content":"        assertEquals(\"16\", dto.getTopicId());"},{"lineNumber":74,"author":{"gitId":"yostashko"},"content":"        assertTrue(dto.getTopicId().equals(\"16\"));"},{"lineNumber":75,"author":{"gitId":"yostashko"},"content":"        topicService.createTopic(dto);"},{"lineNumber":76,"author":{"gitId":"yostashko"},"content":"        assertNotNull(topicService.findTopicById(String.valueOf(16)));"},{"lineNumber":77,"author":{"gitId":"yostashko"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":79,"author":{"gitId":"yostashko"},"content":"    @Test"},{"lineNumber":80,"author":{"gitId":"yostashko"},"content":"    public void createTopic3() {"},{"lineNumber":81,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":82,"author":{"gitId":"yostashko"},"content":"        TopicService topicService \u003d new TopicService(topicRepository);"},{"lineNumber":83,"author":{"gitId":"yostashko"},"content":"        TopicDTO dto \u003d new TopicDTO(\"16\", \"fd\", \"fdfd\");"},{"lineNumber":84,"author":{"gitId":"yostashko"},"content":"        assertNotEquals(\"15\", dto.getTopicId());"},{"lineNumber":85,"author":{"gitId":"yostashko"},"content":"        assertFalse(dto.getTopicId().equals(\"15\"));"},{"lineNumber":86,"author":{"gitId":"yostashko"},"content":"        topicService.createTopic(dto);"},{"lineNumber":87,"author":{"gitId":"yostashko"},"content":"        TopicNotFoundException thrown \u003d Assertions.assertThrows(TopicNotFoundException.class, () -\u003e {"},{"lineNumber":88,"author":{"gitId":"yostashko"},"content":"            topicService.findTopicById(String.valueOf(124));"},{"lineNumber":89,"author":{"gitId":"yostashko"},"content":"        });"},{"lineNumber":90,"author":{"gitId":"yostashko"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":92,"author":{"gitId":"yostashko"},"content":"    @Test"},{"lineNumber":93,"author":{"gitId":"yostashko"},"content":"    public void testDeleteTopic() {"},{"lineNumber":94,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":95,"author":{"gitId":"yostashko"},"content":"        TopicService topicService \u003d new TopicService(topicRepository);"},{"lineNumber":96,"author":{"gitId":"yostashko"},"content":"        TopicDTO dto \u003d new TopicDTO(\"16\", \"fd\", \"fdfd\");"},{"lineNumber":97,"author":{"gitId":"yostashko"},"content":"        topicService.createTopic(dto);"},{"lineNumber":98,"author":{"gitId":"yostashko"},"content":"        TopicNotFoundException thrown \u003d Assertions.assertThrows(TopicNotFoundException.class, () -\u003e {"},{"lineNumber":99,"author":{"gitId":"yostashko"},"content":"            topicService.updateTopic(String.valueOf(16),dto);"},{"lineNumber":100,"author":{"gitId":"yostashko"},"content":"        });"},{"lineNumber":101,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":102,"author":{"gitId":"yostashko"},"content":"        assertNotEquals(topicService.findTopicById(String.valueOf(16)), dto);"},{"lineNumber":103,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":104,"author":{"gitId":"yostashko"},"content":"        topicService.deleteTopic(String.valueOf(16));"},{"lineNumber":105,"author":{"gitId":"yostashko"},"content":"        TopicNotFoundException thrown2 \u003d Assertions.assertThrows(TopicNotFoundException.class, () -\u003e {"},{"lineNumber":106,"author":{"gitId":"yostashko"},"content":"            topicService.findTopicById(String.valueOf(16));"},{"lineNumber":107,"author":{"gitId":"yostashko"},"content":"        });"},{"lineNumber":108,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":109,"author":{"gitId":"yostashko"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":111,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":112,"author":{"gitId":"OleksandRomaniuk"},"content":"    private List\u003cTopic\u003e initSkill() {"},{"lineNumber":113,"author":{"gitId":"OleksandRomaniuk"},"content":"        Topic topic1 \u003d new Topic();"},{"lineNumber":114,"author":{"gitId":"OleksandRomaniuk"},"content":"        topic1.setTopicID(\"skillId\");"},{"lineNumber":115,"author":{"gitId":"OleksandRomaniuk"},"content":"        topic1.setTopicName(\"skill\");"},{"lineNumber":116,"author":{"gitId":"OleksandRomaniuk"},"content":"        return Stream.of(topic1).collect(Collectors.toList());"},{"lineNumber":117,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"OleksandRomaniuk"},"content":"}"}],"authorContributionMap":{"yostashko":63,"OleksandRomaniuk":55}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/service/BotServiceTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanmaister7"},"content":"package edu.kmaooad.service;"},{"lineNumber":2,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":3,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.BotRequest;"},{"lineNumber":4,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.BotResponse;"},{"lineNumber":5,"author":{"gitId":"ivanmaister7"},"content":"import edu.kmaooad.Message;"},{"lineNumber":6,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.junit.jupiter.api.extension.ExtendWith;"},{"lineNumber":8,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.mockito.InjectMocks;"},{"lineNumber":9,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.mockito.Mock;"},{"lineNumber":10,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.mockito.junit.jupiter.MockitoExtension;"},{"lineNumber":11,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":12,"author":{"gitId":"Anastasiia Bezruka"},"content":"import static edu.kmaooad.Constants.REQUEST_WITHOUT_MESSAGE_ID;"},{"lineNumber":13,"author":{"gitId":"Anastasiia Bezruka"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":14,"author":{"gitId":"Anastasiia Bezruka"},"content":"import static org.mockito.Mockito.doThrow;"},{"lineNumber":15,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":16,"author":{"gitId":"Anastasiia Bezruka"},"content":"@ExtendWith(MockitoExtension.class)"},{"lineNumber":17,"author":{"gitId":"Anastasiia Bezruka"},"content":"public class BotServiceTest {"},{"lineNumber":18,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":19,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Mock"},{"lineNumber":20,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private MongoService mongoService;"},{"lineNumber":21,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @InjectMocks"},{"lineNumber":22,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private BotService botService;"},{"lineNumber":23,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":24,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public void testBotServiceWithMessageIdZero() {"},{"lineNumber":26,"author":{"gitId":"Anastasiia Bezruka"},"content":"        long id \u003d 0;"},{"lineNumber":27,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Message message \u003d new Message(id, null);"},{"lineNumber":28,"author":{"gitId":"Anastasiia Bezruka"},"content":"        BotRequest botRequest \u003d new BotRequest(id, message);"},{"lineNumber":29,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":30,"author":{"gitId":"Anastasiia Bezruka"},"content":"        RuntimeException runtimeException \u003d assertThrows(RuntimeException.class, () -\u003e botService.apply(botRequest));"},{"lineNumber":31,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(REQUEST_WITHOUT_MESSAGE_ID, runtimeException.getMessage());"},{"lineNumber":32,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":34,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public void testBotServiceWithMessageTextNull() {"},{"lineNumber":36,"author":{"gitId":"Anastasiia Bezruka"},"content":"        long id \u003d 7;"},{"lineNumber":37,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Message message \u003d new Message(id, null);"},{"lineNumber":38,"author":{"gitId":"Anastasiia Bezruka"},"content":"        BotRequest botRequest \u003d new BotRequest(id, message);"},{"lineNumber":39,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":40,"author":{"gitId":"Anastasiia Bezruka"},"content":"        RuntimeException runtimeException \u003d assertThrows(RuntimeException.class, () -\u003e botService.apply(botRequest));"},{"lineNumber":41,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(REQUEST_WITHOUT_MESSAGE_ID, runtimeException.getMessage());"},{"lineNumber":42,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":44,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":45,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public void testBotServiceWithCorrectMessage() {"},{"lineNumber":46,"author":{"gitId":"Anastasiia Bezruka"},"content":"        long id \u003d 7;"},{"lineNumber":47,"author":{"gitId":"Anastasiia Bezruka"},"content":"        BotResponse expected \u003d new BotResponse(id);"},{"lineNumber":48,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":49,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Message message \u003d new Message(id, \"simple\");"},{"lineNumber":50,"author":{"gitId":"Anastasiia Bezruka"},"content":"        BotRequest botRequest \u003d new BotRequest(id, message);"},{"lineNumber":51,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":52,"author":{"gitId":"Anastasiia Bezruka"},"content":"        BotResponse response \u003d assertDoesNotThrow(() -\u003e botService.apply(botRequest));"},{"lineNumber":53,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(expected, response);"},{"lineNumber":54,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":56,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":57,"author":{"gitId":"Anastasiia Bezruka"},"content":"    public void testBotService_whenMongoServiceThrowsException_shouldRethrow() {"},{"lineNumber":58,"author":{"gitId":"Anastasiia Bezruka"},"content":"        long id \u003d 7;"},{"lineNumber":59,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Message message \u003d new Message(id, \"simple\");"},{"lineNumber":60,"author":{"gitId":"Anastasiia Bezruka"},"content":"        BotRequest botRequest \u003d new BotRequest(id, message);"},{"lineNumber":61,"author":{"gitId":"Anastasiia Bezruka"},"content":"        String exceptionMessage \u003d \"exception\";"},{"lineNumber":62,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":63,"author":{"gitId":"Anastasiia Bezruka"},"content":"        doThrow(new RuntimeException(exceptionMessage)).when(mongoService).insertOneRequest(botRequest);"},{"lineNumber":64,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":65,"author":{"gitId":"Anastasiia Bezruka"},"content":"        RuntimeException runtimeException \u003d assertThrows(RuntimeException.class, () -\u003e botService.apply(botRequest));"},{"lineNumber":66,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(exceptionMessage, runtimeException.getMessage());"},{"lineNumber":67,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"Anastasiia Bezruka"},"content":"}"}],"authorContributionMap":{"ivanmaister7":4,"Anastasiia Bezruka":64}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/service/ProjectServiceTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anastasiia Bezruka"},"content":"package edu.kmaooad.service;"},{"lineNumber":2,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":3,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.DTO.ProjectDTO;"},{"lineNumber":4,"author":{"gitId":"yostashko"},"content":"import edu.kmaooad.DTO.SkillDTO;"},{"lineNumber":5,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.DTO.SkillSetDTO;"},{"lineNumber":6,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.exeptions.ProjectNotFoundException;"},{"lineNumber":7,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.exeptions.SkillSetNotFoundException;"},{"lineNumber":8,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.models.Project;"},{"lineNumber":9,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.models.Skill;"},{"lineNumber":10,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.models.SkillSet;"},{"lineNumber":11,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.models.Topic;"},{"lineNumber":12,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.repository.ProjectRepository;"},{"lineNumber":13,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":14,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.junit.jupiter.api.extension.ExtendWith;"},{"lineNumber":15,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.mockito.InjectMocks;"},{"lineNumber":16,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.mockito.Mock;"},{"lineNumber":17,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.mockito.junit.jupiter.MockitoExtension;"},{"lineNumber":18,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":19,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":20,"author":{"gitId":"ivanmaister7"},"content":"import java.util.List;"},{"lineNumber":21,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.Optional;"},{"lineNumber":22,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.Set;"},{"lineNumber":23,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.stream.Collectors;"},{"lineNumber":24,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.stream.Stream;"},{"lineNumber":25,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":26,"author":{"gitId":"Anastasiia Bezruka"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":27,"author":{"gitId":"Anastasiia Bezruka"},"content":"import static org.mockito.ArgumentMatchers.any;"},{"lineNumber":28,"author":{"gitId":"Anastasiia Bezruka"},"content":"import static org.mockito.Mockito.*;"},{"lineNumber":29,"author":{"gitId":"Anastasiia Bezruka"},"content":"import static org.mockito.Mockito.when;"},{"lineNumber":30,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":31,"author":{"gitId":"Anastasiia Bezruka"},"content":"@ExtendWith(MockitoExtension.class)"},{"lineNumber":32,"author":{"gitId":"Anastasiia Bezruka"},"content":"public class ProjectServiceTest {"},{"lineNumber":33,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Mock"},{"lineNumber":34,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private ProjectRepository projectRepository;"},{"lineNumber":35,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Mock"},{"lineNumber":36,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private SkillService skillService;"},{"lineNumber":37,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Mock"},{"lineNumber":38,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private SkillSetService skillSetService;"},{"lineNumber":39,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Mock"},{"lineNumber":40,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private TopicService topicService;"},{"lineNumber":41,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @InjectMocks"},{"lineNumber":42,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private ProjectService projectService;"},{"lineNumber":43,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":44,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private static final Project PROJECT \u003d initTestObject();"},{"lineNumber":45,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private static final ProjectDTO PROJECT_DTO \u003d initTestDto();"},{"lineNumber":46,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private static final RuntimeException EXCEPTION \u003d new RuntimeException(\"Just test\");"},{"lineNumber":47,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":48,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":49,"author":{"gitId":"Anastasiia Bezruka"},"content":"    void saveProject_RepositoryFine_shouldSave() {"},{"lineNumber":50,"author":{"gitId":"Anastasiia Bezruka"},"content":"        when(projectRepository.save(any())).thenReturn(PROJECT);"},{"lineNumber":51,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":52,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Project res \u003d assertDoesNotThrow(() -\u003e projectService.createProject(PROJECT_DTO));"},{"lineNumber":53,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(PROJECT, res);"},{"lineNumber":54,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":56,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":57,"author":{"gitId":"Anastasiia Bezruka"},"content":"    void saveProject_RepositoryThrowsException_shouldRethrowException() {"},{"lineNumber":58,"author":{"gitId":"Anastasiia Bezruka"},"content":"        when(projectRepository.save(any())).thenThrow(EXCEPTION);"},{"lineNumber":59,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":60,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Exception res \u003d assertThrows(EXCEPTION.getClass(), () -\u003e projectService.createProject(PROJECT_DTO));"},{"lineNumber":61,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(EXCEPTION, res);"},{"lineNumber":62,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":64,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":65,"author":{"gitId":"Anastasiia Bezruka"},"content":"    void deleteProject_RepositoryFine_shouldDelete() {"},{"lineNumber":66,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertDoesNotThrow(() -\u003e projectService.deleteProject(PROJECT_DTO.getProjectId()));"},{"lineNumber":67,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":69,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":70,"author":{"gitId":"Anastasiia Bezruka"},"content":"    void deleteProject_RepositoryThrowsException_shouldRethrowException() {"},{"lineNumber":71,"author":{"gitId":"Anastasiia Bezruka"},"content":"        doThrow(EXCEPTION).when(projectRepository).deleteById(any());"},{"lineNumber":72,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":73,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Exception res \u003d assertThrows(EXCEPTION.getClass(), () -\u003e projectService.deleteProject(PROJECT_DTO.getProjectId()));"},{"lineNumber":74,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(EXCEPTION, res);"},{"lineNumber":75,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":77,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":78,"author":{"gitId":"Anastasiia Bezruka"},"content":"    void updateProject_projectExists_shouldUpdate() {"},{"lineNumber":79,"author":{"gitId":"Anastasiia Bezruka"},"content":"        when(projectRepository.findById(any())).thenReturn(Optional.of(PROJECT));"},{"lineNumber":80,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":81,"author":{"gitId":"Anastasiia Bezruka"},"content":"        ProjectDTO updated \u003d new ProjectDTO(PROJECT_DTO.getProjectId(), \"neeew name\", \"new description\","},{"lineNumber":82,"author":{"gitId":"Anastasiia Bezruka"},"content":"                PROJECT_DTO.getTopicIds(), PROJECT_DTO.getSkillIds(), PROJECT_DTO.getSkillSetIds());"},{"lineNumber":83,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Project project \u003d projectService.mapFromDtoToEntity(updated);"},{"lineNumber":84,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":85,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertDoesNotThrow(() -\u003e projectService.updateProject(PROJECT_DTO.getProjectId(), updated));"},{"lineNumber":86,"author":{"gitId":"Anastasiia Bezruka"},"content":"        verify(projectRepository).save(project);"},{"lineNumber":87,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":89,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":90,"author":{"gitId":"Anastasiia Bezruka"},"content":"    void updateProject_projectDoesNotExists_shouldThrowExceptionAndNotUpdate() {"},{"lineNumber":91,"author":{"gitId":"Anastasiia Bezruka"},"content":"        when(projectRepository.findById(any())).thenReturn(Optional.empty());"},{"lineNumber":92,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":93,"author":{"gitId":"Anastasiia Bezruka"},"content":"        ProjectDTO updated \u003d new ProjectDTO(PROJECT_DTO.getProjectId(), \"neeew name\", \"new description\","},{"lineNumber":94,"author":{"gitId":"Anastasiia Bezruka"},"content":"                PROJECT_DTO.getTopicIds(), PROJECT_DTO.getSkillIds(), PROJECT_DTO.getSkillSetIds());"},{"lineNumber":95,"author":{"gitId":"Anastasiia Bezruka"},"content":"        String unexistingId \u003d \"unexistingId\";"},{"lineNumber":96,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Exception res \u003d assertThrows(ProjectNotFoundException.class,"},{"lineNumber":97,"author":{"gitId":"Anastasiia Bezruka"},"content":"                () -\u003e projectService.updateProject(unexistingId, updated));"},{"lineNumber":98,"author":{"gitId":"Anastasiia Bezruka"},"content":"        verify(projectRepository, never()).save(any());"},{"lineNumber":99,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":100,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertTrue(res.getMessage().contains(unexistingId));"},{"lineNumber":101,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"yostashko"},"content":"    @Test"},{"lineNumber":103,"author":{"gitId":"yostashko"},"content":"    void testDTOs() {"},{"lineNumber":104,"author":{"gitId":"yostashko"},"content":"        ProjectDTO projectDTO \u003d new ProjectDTO(PROJECT_DTO.getProjectId(), \"neeew name\", \"new description\","},{"lineNumber":105,"author":{"gitId":"yostashko"},"content":"                PROJECT_DTO.getTopicIds(), PROJECT_DTO.getSkillIds(), PROJECT_DTO.getSkillSetIds());"},{"lineNumber":106,"author":{"gitId":"yostashko"},"content":"        assertNotNull(projectDTO.getProjectDescription());"},{"lineNumber":107,"author":{"gitId":"yostashko"},"content":"        assertNotNull(projectDTO.getProjectTitle());"},{"lineNumber":108,"author":{"gitId":"yostashko"},"content":"        assertNotNull(projectDTO.getSkillSetIds());"},{"lineNumber":109,"author":{"gitId":"yostashko"},"content":"        assertNotNull(projectDTO.getTopicIds());"},{"lineNumber":110,"author":{"gitId":"yostashko"},"content":"        assertNotNull(projectDTO.getSkillIds());"},{"lineNumber":111,"author":{"gitId":"yostashko"},"content":"        assertNotNull(projectDTO.getSkillSetIds());"},{"lineNumber":112,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":113,"author":{"gitId":"yostashko"},"content":"        assertTrue(true);"},{"lineNumber":114,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":115,"author":{"gitId":"yostashko"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"yostashko"},"content":"    @Test"},{"lineNumber":117,"author":{"gitId":"yostashko"},"content":"    void testDTOs2() {"},{"lineNumber":118,"author":{"gitId":"yostashko"},"content":"        ProjectDTO projectDTO \u003d new ProjectDTO(PROJECT_DTO.getProjectId(), \"neeew name\", \"new description\","},{"lineNumber":119,"author":{"gitId":"yostashko"},"content":"                PROJECT_DTO.getTopicIds(), PROJECT_DTO.getSkillIds(), PROJECT_DTO.getSkillSetIds());"},{"lineNumber":120,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":121,"author":{"gitId":"yostashko"},"content":"        projectDTO.setProjectId(null);"},{"lineNumber":122,"author":{"gitId":"yostashko"},"content":"        projectDTO.setProjectTitle(null);"},{"lineNumber":123,"author":{"gitId":"yostashko"},"content":"        projectDTO.setProjectDescription(null);"},{"lineNumber":124,"author":{"gitId":"yostashko"},"content":"        projectDTO.setTopicIds(null);"},{"lineNumber":125,"author":{"gitId":"yostashko"},"content":"        projectDTO.setSkillSetIds(null);"},{"lineNumber":126,"author":{"gitId":"yostashko"},"content":"        projectDTO.setSkillIds(null);"},{"lineNumber":127,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":128,"author":{"gitId":"yostashko"},"content":"        assertNull(projectDTO.getProjectDescription());"},{"lineNumber":129,"author":{"gitId":"yostashko"},"content":"        assertNull(projectDTO.getProjectTitle());"},{"lineNumber":130,"author":{"gitId":"yostashko"},"content":"        assertNull(projectDTO.getSkillSetIds());"},{"lineNumber":131,"author":{"gitId":"yostashko"},"content":"        assertNull(projectDTO.getTopicIds());"},{"lineNumber":132,"author":{"gitId":"yostashko"},"content":"        assertNull(projectDTO.getSkillIds());"},{"lineNumber":133,"author":{"gitId":"yostashko"},"content":"        assertNull(projectDTO.getSkillSetIds());"},{"lineNumber":134,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":135,"author":{"gitId":"yostashko"},"content":"        assertTrue(true);"},{"lineNumber":136,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":137,"author":{"gitId":"yostashko"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":139,"author":{"gitId":"yostashko"},"content":"    @Test"},{"lineNumber":140,"author":{"gitId":"yostashko"},"content":"    void testDTOsSkillDTO() {"},{"lineNumber":141,"author":{"gitId":"yostashko"},"content":"        SkillDTO skillDTO \u003d new SkillDTO(\"skill\");"},{"lineNumber":142,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":143,"author":{"gitId":"yostashko"},"content":"        skillDTO.setSkillId(null);"},{"lineNumber":144,"author":{"gitId":"yostashko"},"content":"        skillDTO.setParentSkillID(null);"},{"lineNumber":145,"author":{"gitId":"yostashko"},"content":"        skillDTO.setParentSkillID(null);"},{"lineNumber":146,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":147,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":148,"author":{"gitId":"yostashko"},"content":"        assertNull(skillDTO.getSkillId());"},{"lineNumber":149,"author":{"gitId":"yostashko"},"content":"        assertNull(skillDTO.getParentSkillID());"},{"lineNumber":150,"author":{"gitId":"yostashko"},"content":"        assertNull(skillDTO.getParentSkillID());"},{"lineNumber":151,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":152,"author":{"gitId":"yostashko"},"content":"        assertTrue(true);"},{"lineNumber":153,"author":{"gitId":"yostashko"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":155,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":156,"author":{"gitId":"ivanmaister7"},"content":"    void findById() {"},{"lineNumber":157,"author":{"gitId":"ivanmaister7"},"content":"        when(projectRepository.findById(\"1\")).thenReturn(Optional.of(PROJECT));"},{"lineNumber":158,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(Optional.of(PROJECT), projectService.findById(\"1\"));"},{"lineNumber":159,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":161,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":162,"author":{"gitId":"ivanmaister7"},"content":"    void findAll() {"},{"lineNumber":163,"author":{"gitId":"ivanmaister7"},"content":"        when(projectRepository.findAll()).thenReturn(List.of(PROJECT));"},{"lineNumber":164,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(List.of(PROJECT).size(), projectService.findAll().size());"},{"lineNumber":165,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(List.of(PROJECT), projectService.findAll());"},{"lineNumber":166,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":168,"author":{"gitId":"ivanmaister7"},"content":"    void exist_Ok() {"},{"lineNumber":169,"author":{"gitId":"ivanmaister7"},"content":"        when(projectRepository.existsById(\"1\")).thenReturn(true);"},{"lineNumber":170,"author":{"gitId":"ivanmaister7"},"content":"        assertTrue(projectService.exist(\"1\"));"},{"lineNumber":171,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":173,"author":{"gitId":"ivanmaister7"},"content":"    void exist_Bad() {"},{"lineNumber":174,"author":{"gitId":"ivanmaister7"},"content":"        when(projectRepository.existsById(\"2\")).thenReturn(false);"},{"lineNumber":175,"author":{"gitId":"ivanmaister7"},"content":"        assertFalse(projectService.exist(\"2\"));"},{"lineNumber":176,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":178,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private static Project initTestObject() {"},{"lineNumber":179,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Set\u003cTopic\u003e topicSet \u003d Stream.of(new Topic(\"1\", \"topic\")).collect(Collectors.toSet());"},{"lineNumber":180,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Set\u003cSkill\u003e skills \u003d Stream.of(new Skill(\"1\", \"skill\")).collect(Collectors.toSet());"},{"lineNumber":181,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Set\u003cSkillSet\u003e skillSet \u003d Stream.of(new SkillSet(\"1\", \"skillSet\", skills)).collect(Collectors.toSet());"},{"lineNumber":182,"author":{"gitId":"Anastasiia Bezruka"},"content":"        return new Project(\"1\", \"Name\", \"Description\", topicSet, skills, skillSet);"},{"lineNumber":183,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":185,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private static ProjectDTO initTestDto() {"},{"lineNumber":186,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Set\u003cString\u003e ids \u003d Stream.of(\"1\").collect(Collectors.toSet());"},{"lineNumber":187,"author":{"gitId":"Anastasiia Bezruka"},"content":"        return new ProjectDTO(\"1\", \"Name\", \"Description\", ids, ids, ids);"},{"lineNumber":188,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":190,"author":{"gitId":"Anastasiia Bezruka"},"content":"}"}],"authorContributionMap":{"yostashko":53,"ivanmaister7":24,"Anastasiia Bezruka":113}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/service/SkillServiceTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OleksandRomaniuk"},"content":"package edu.kmaooad.service;"},{"lineNumber":2,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":3,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.DTO.SkillDTO;"},{"lineNumber":4,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.exeptions.SkillNotFoundException;"},{"lineNumber":5,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.models.Skill;"},{"lineNumber":6,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.repository.SkillRepository;"},{"lineNumber":7,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.junit.jupiter.api.extension.ExtendWith;"},{"lineNumber":9,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.mockito.InjectMocks;"},{"lineNumber":10,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.mockito.Mock;"},{"lineNumber":11,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.mockito.junit.jupiter.MockitoExtension;"},{"lineNumber":12,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":13,"author":{"gitId":"ivanmaister7"},"content":"import java.util.List;"},{"lineNumber":14,"author":{"gitId":"OleksandRomaniuk"},"content":"import java.util.Optional;"},{"lineNumber":15,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":16,"author":{"gitId":"OleksandRomaniuk"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":17,"author":{"gitId":"OleksandRomaniuk"},"content":"import static org.mockito.ArgumentMatchers.any;"},{"lineNumber":18,"author":{"gitId":"OleksandRomaniuk"},"content":"import static org.mockito.Mockito.when;"},{"lineNumber":19,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":20,"author":{"gitId":"OleksandRomaniuk"},"content":"@ExtendWith(MockitoExtension.class)"},{"lineNumber":21,"author":{"gitId":"OleksandRomaniuk"},"content":"public class SkillServiceTest {"},{"lineNumber":22,"author":{"gitId":"OleksandRomaniuk"},"content":"    @Mock"},{"lineNumber":23,"author":{"gitId":"OleksandRomaniuk"},"content":"    private SkillRepository skillRepository;"},{"lineNumber":24,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":25,"author":{"gitId":"OleksandRomaniuk"},"content":"    @Mock"},{"lineNumber":26,"author":{"gitId":"OleksandRomaniuk"},"content":"    private SkillSetService skillSetService;"},{"lineNumber":27,"author":{"gitId":"OleksandRomaniuk"},"content":"    @InjectMocks"},{"lineNumber":28,"author":{"gitId":"OleksandRomaniuk"},"content":"    private SkillService skillService;"},{"lineNumber":29,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":30,"author":{"gitId":"OleksandRomaniuk"},"content":"    private static final SkillNotFoundException EXCEPTION \u003d new SkillNotFoundException(\"Skill not found\");"},{"lineNumber":31,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":32,"author":{"gitId":"OleksandRomaniuk"},"content":"    private static final Skill SKILL \u003d initTestObject();"},{"lineNumber":33,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":34,"author":{"gitId":"OleksandRomaniuk"},"content":"    private static final SkillDTO SKILL_DTO \u003d initTestDto();"},{"lineNumber":35,"author":{"gitId":"OleksandRomaniuk"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"OleksandRomaniuk"},"content":"    public void updateParentSkill(){"},{"lineNumber":37,"author":{"gitId":"OleksandRomaniuk"},"content":"        Skill  skill \u003d initTestObject();"},{"lineNumber":38,"author":{"gitId":"OleksandRomaniuk"},"content":"        Optional\u003cSkill\u003e  parentSkill \u003d initParentTestObject();"},{"lineNumber":39,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":40,"author":{"gitId":"OleksandRomaniuk"},"content":"        if (!parentSkill.isPresent()) {"},{"lineNumber":41,"author":{"gitId":"OleksandRomaniuk"},"content":"            throw new SkillNotFoundException(\"Skill not found\");"},{"lineNumber":42,"author":{"gitId":"OleksandRomaniuk"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"OleksandRomaniuk"},"content":"        skill.setParentSkill(parentSkill.get());"},{"lineNumber":44,"author":{"gitId":"OleksandRomaniuk"},"content":"        skillRepository.save(skill);"},{"lineNumber":45,"author":{"gitId":"OleksandRomaniuk"},"content":"        assertEquals(skill , new Skill(\"1\",\"Name1\",parentSkill.get()));"},{"lineNumber":46,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"OleksandRomaniuk"},"content":"    @Test"},{"lineNumber":48,"author":{"gitId":"OleksandRomaniuk"},"content":"    public void createSkill(){"},{"lineNumber":49,"author":{"gitId":"OleksandRomaniuk"},"content":"        Optional\u003cSkill\u003e topic \u003d Optional.of(new Skill(\"1\", \"Name1\", null));"},{"lineNumber":50,"author":{"gitId":"OleksandRomaniuk"},"content":"        Optional\u003cSkill\u003e createdTopic \u003d skillService.createSkill(initTestDto());"},{"lineNumber":51,"author":{"gitId":"OleksandRomaniuk"},"content":"        assertEquals(topic,createdTopic);"},{"lineNumber":52,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":53,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"OleksandRomaniuk"},"content":"    @Test"},{"lineNumber":55,"author":{"gitId":"ivanmaister7"},"content":"    void deleteSkill_Ok() {"},{"lineNumber":56,"author":{"gitId":"ivanmaister7"},"content":"        when(skillRepository.findSkillBySkillID(SKILL_DTO.getSkillId())).thenReturn(Optional.of(SKILL));"},{"lineNumber":57,"author":{"gitId":"ivanmaister7"},"content":"        assertTrue(skillService.deleteSkill(SKILL_DTO.getSkillId()));"},{"lineNumber":58,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":60,"author":{"gitId":"OleksandRomaniuk"},"content":"    void deleteSkill() {"},{"lineNumber":61,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":62,"author":{"gitId":"ivanmaister7"},"content":"        when(skillRepository.findSkillBySkillID(SKILL_DTO.getSkillId())).thenReturn(Optional.of(SKILL));"},{"lineNumber":63,"author":{"gitId":"ivanmaister7"},"content":"        when(skillService.deleteSkill(SKILL_DTO.getSkillId())).thenReturn(true);"},{"lineNumber":64,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":65,"author":{"gitId":"OleksandRomaniuk"},"content":"        assertDoesNotThrow(() -\u003e skillService.deleteSkill(SKILL_DTO.getSkillId()));"},{"lineNumber":66,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":68,"author":{"gitId":"OleksandRomaniuk"},"content":"    @Test"},{"lineNumber":69,"author":{"gitId":"OleksandRomaniuk"},"content":"    void deleteSkillException() {"},{"lineNumber":70,"author":{"gitId":"ivanmaister7"},"content":"        when(skillRepository.findSkillBySkillID(SKILL_DTO.getSkillId())).thenReturn(Optional.of(SKILL));"},{"lineNumber":71,"author":{"gitId":"ivanmaister7"},"content":"        when(skillService.deleteSkill(SKILL_DTO.getSkillId())).thenThrow(EXCEPTION);"},{"lineNumber":72,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":73,"author":{"gitId":"ivanmaister7"},"content":"        assertThrows(EXCEPTION.getClass(), () -\u003e skillService.deleteSkill(SKILL_DTO.getSkillId()));"},{"lineNumber":74,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"OleksandRomaniuk"},"content":"    @Test"},{"lineNumber":76,"author":{"gitId":"OleksandRomaniuk"},"content":"    void findSkill() {"},{"lineNumber":77,"author":{"gitId":"OleksandRomaniuk"},"content":"        when(skillRepository.findById(any())).thenReturn(Optional.of(SKILL));"},{"lineNumber":78,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":79,"author":{"gitId":"OleksandRomaniuk"},"content":"        Skill res \u003d assertDoesNotThrow(() -\u003e skillService.findSkillById(SKILL.getSkillID()));"},{"lineNumber":80,"author":{"gitId":"OleksandRomaniuk"},"content":"        assertEquals(SKILL, res);"},{"lineNumber":81,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":83,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":84,"author":{"gitId":"ivanmaister7"},"content":"    void findOptionalSkillById() {"},{"lineNumber":85,"author":{"gitId":"ivanmaister7"},"content":"        when(skillRepository.findById(\"1\")).thenReturn(Optional.of(SKILL));"},{"lineNumber":86,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(Optional.of(SKILL), skillService.findOptionalSkillById(\"1\"));"},{"lineNumber":87,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":89,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":90,"author":{"gitId":"ivanmaister7"},"content":"    void findAllSkills() {"},{"lineNumber":91,"author":{"gitId":"ivanmaister7"},"content":"        when(skillRepository.findAll()).thenReturn(List.of(SKILL));"},{"lineNumber":92,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(List.of(SKILL).size(), skillService.findAllSkills().size());"},{"lineNumber":93,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(List.of(SKILL), skillService.findAllSkills());"},{"lineNumber":94,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":96,"author":{"gitId":"ivanmaister7"},"content":"    void exist_Ok() {"},{"lineNumber":97,"author":{"gitId":"ivanmaister7"},"content":"        when(skillRepository.existsById(\"1\")).thenReturn(true);"},{"lineNumber":98,"author":{"gitId":"ivanmaister7"},"content":"        assertTrue(skillService.exist(\"1\"));"},{"lineNumber":99,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":101,"author":{"gitId":"ivanmaister7"},"content":"    void exist_Bad() {"},{"lineNumber":102,"author":{"gitId":"ivanmaister7"},"content":"        when(skillRepository.existsById(\"2\")).thenReturn(false);"},{"lineNumber":103,"author":{"gitId":"ivanmaister7"},"content":"        assertFalse(skillService.exist(\"2\"));"},{"lineNumber":104,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"OleksandRomaniuk"},"content":"    private static Skill initTestObject() {"},{"lineNumber":106,"author":{"gitId":"OleksandRomaniuk"},"content":"        return new Skill(\"1\", \"Name1\", null);"},{"lineNumber":107,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"OleksandRomaniuk"},"content":"    private static Optional\u003cSkill\u003e initParentTestObject() {"},{"lineNumber":109,"author":{"gitId":"OleksandRomaniuk"},"content":"        return Optional.of(new Skill(\"2\", \"Name2\", null));"},{"lineNumber":110,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"OleksandRomaniuk"},"content":"    private static SkillDTO initTestDto() {"},{"lineNumber":112,"author":{"gitId":"OleksandRomaniuk"},"content":"        return new SkillDTO(\"1\", \"Name1\", \"null\");"},{"lineNumber":113,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":115,"author":{"gitId":"OleksandRomaniuk"},"content":"}"}],"authorContributionMap":{"ivanmaister7":36,"OleksandRomaniuk":79}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/service/SkillSetServiceTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anastasiia Bezruka"},"content":"package edu.kmaooad.service;"},{"lineNumber":2,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":3,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.DTO.SkillSetDTO;"},{"lineNumber":4,"author":{"gitId":"yostashko"},"content":"import edu.kmaooad.exeptions.SkillNotFoundException;"},{"lineNumber":5,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.exeptions.SkillSetNotFoundException;"},{"lineNumber":6,"author":{"gitId":"yostashko"},"content":"import edu.kmaooad.exeptions.TopicNotFoundException;"},{"lineNumber":7,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.models.Skill;"},{"lineNumber":8,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.models.SkillSet;"},{"lineNumber":9,"author":{"gitId":"Anastasiia Bezruka"},"content":"import edu.kmaooad.repository.SkillSetRepository;"},{"lineNumber":10,"author":{"gitId":"yostashko"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":11,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":12,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.junit.jupiter.api.extension.ExtendWith;"},{"lineNumber":13,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.mockito.InjectMocks;"},{"lineNumber":14,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.mockito.Mock;"},{"lineNumber":15,"author":{"gitId":"Anastasiia Bezruka"},"content":"import org.mockito.junit.jupiter.MockitoExtension;"},{"lineNumber":16,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":17,"author":{"gitId":"ivanmaister7"},"content":"import java.util.List;"},{"lineNumber":18,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.Optional;"},{"lineNumber":19,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.Set;"},{"lineNumber":20,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.stream.Collectors;"},{"lineNumber":21,"author":{"gitId":"Anastasiia Bezruka"},"content":"import java.util.stream.Stream;"},{"lineNumber":22,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":23,"author":{"gitId":"Anastasiia Bezruka"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":24,"author":{"gitId":"Anastasiia Bezruka"},"content":"import static org.mockito.ArgumentMatchers.any;"},{"lineNumber":25,"author":{"gitId":"Anastasiia Bezruka"},"content":"import static org.mockito.Mockito.*;"},{"lineNumber":26,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":27,"author":{"gitId":"Anastasiia Bezruka"},"content":"@ExtendWith(MockitoExtension.class)"},{"lineNumber":28,"author":{"gitId":"Anastasiia Bezruka"},"content":"public class SkillSetServiceTest {"},{"lineNumber":29,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Mock"},{"lineNumber":30,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private SkillSetRepository skillSetRepository;"},{"lineNumber":31,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Mock"},{"lineNumber":32,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private SkillService skillService;"},{"lineNumber":33,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @InjectMocks"},{"lineNumber":34,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private SkillSetService skillSetService;"},{"lineNumber":35,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":36,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private static final SkillSet SKILL_SET \u003d initTestObject();"},{"lineNumber":37,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private static final SkillSetDTO SKILL_SET_DTO \u003d initTestDto();"},{"lineNumber":38,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private static final RuntimeException EXCEPTION \u003d new RuntimeException(\"Just test\");"},{"lineNumber":39,"author":{"gitId":"ivanmaister7"},"content":"    private static final SkillNotFoundException SKILL_EXCEPTION \u003d new SkillNotFoundException(\"Skill not found\");"},{"lineNumber":40,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":41,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":42,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"Anastasiia Bezruka"},"content":"    void saveSkillSet_RepositoryFine_shouldSave() {"},{"lineNumber":44,"author":{"gitId":"Anastasiia Bezruka"},"content":"        when(skillSetRepository.save(any())).thenReturn(SKILL_SET);"},{"lineNumber":45,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":46,"author":{"gitId":"Anastasiia Bezruka"},"content":"        SkillSet res \u003d assertDoesNotThrow(() -\u003e skillSetService.createSkillSet(SKILL_SET_DTO));"},{"lineNumber":47,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(SKILL_SET, res);"},{"lineNumber":48,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":50,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"Anastasiia Bezruka"},"content":"    void saveSkillSet_RepositoryThrowsException_shouldRethrowException() {"},{"lineNumber":52,"author":{"gitId":"Anastasiia Bezruka"},"content":"        when(skillSetRepository.save(any())).thenThrow(EXCEPTION);"},{"lineNumber":53,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":54,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Exception res \u003d assertThrows(EXCEPTION.getClass(), () -\u003e skillSetService.createSkillSet(SKILL_SET_DTO));"},{"lineNumber":55,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(EXCEPTION, res);"},{"lineNumber":56,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":58,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":59,"author":{"gitId":"Anastasiia Bezruka"},"content":"    void deleteSkillSet_RepositoryFine_shouldDelete() {"},{"lineNumber":60,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertDoesNotThrow(() -\u003e skillSetService.deleteSkillSet(SKILL_SET_DTO.getSkillSetId()));"},{"lineNumber":61,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":63,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":64,"author":{"gitId":"Anastasiia Bezruka"},"content":"    void deleteSkillSet_RepositoryThrowsException_shouldRethrowException() {"},{"lineNumber":65,"author":{"gitId":"Anastasiia Bezruka"},"content":"        doThrow(EXCEPTION).when(skillSetRepository).deleteById(any());"},{"lineNumber":66,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":67,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Exception res \u003d assertThrows(EXCEPTION.getClass(), () -\u003e skillSetService.deleteSkillSet(SKILL_SET_DTO.getSkillSetId()));"},{"lineNumber":68,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(EXCEPTION, res);"},{"lineNumber":69,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":71,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":72,"author":{"gitId":"Anastasiia Bezruka"},"content":"    void updateSkillSet_skillSetExists_shouldUpdate() {"},{"lineNumber":73,"author":{"gitId":"Anastasiia Bezruka"},"content":"        when(skillSetRepository.findById(any())).thenReturn(Optional.of(SKILL_SET));"},{"lineNumber":74,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":75,"author":{"gitId":"Anastasiia Bezruka"},"content":"        SkillSetDTO updated \u003d new SkillSetDTO(SKILL_SET_DTO.getSkillSetId(), \"neeew name\","},{"lineNumber":76,"author":{"gitId":"Anastasiia Bezruka"},"content":"                SKILL_SET_DTO.getSkillIds());"},{"lineNumber":77,"author":{"gitId":"Anastasiia Bezruka"},"content":"        SkillSet skillSet \u003d skillSetService.mapFromDtoToEntity(updated);"},{"lineNumber":78,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":79,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertDoesNotThrow(() -\u003e skillSetService.updateSkillSet(SKILL_SET_DTO.getSkillSetId(), updated));"},{"lineNumber":80,"author":{"gitId":"Anastasiia Bezruka"},"content":"        verify(skillSetRepository).save(skillSet);"},{"lineNumber":81,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":83,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":84,"author":{"gitId":"Anastasiia Bezruka"},"content":"    void updateSkillSet_skillSetDoesNotExists_shouldThrowExceptionAndNotUpdate() {"},{"lineNumber":85,"author":{"gitId":"Anastasiia Bezruka"},"content":"        when(skillSetRepository.findById(any())).thenReturn(Optional.empty());"},{"lineNumber":86,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":87,"author":{"gitId":"Anastasiia Bezruka"},"content":"        SkillSetDTO updated \u003d new SkillSetDTO(SKILL_SET_DTO.getSkillSetId(), \"neeew name\","},{"lineNumber":88,"author":{"gitId":"Anastasiia Bezruka"},"content":"                SKILL_SET_DTO.getSkillIds());"},{"lineNumber":89,"author":{"gitId":"Anastasiia Bezruka"},"content":"        String unexistingId \u003d \"unexistingId\";"},{"lineNumber":90,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Exception res \u003d assertThrows(SkillSetNotFoundException.class,"},{"lineNumber":91,"author":{"gitId":"Anastasiia Bezruka"},"content":"                () -\u003e skillSetService.updateSkillSet(unexistingId, updated));"},{"lineNumber":92,"author":{"gitId":"Anastasiia Bezruka"},"content":"        verify(skillSetRepository, never()).save(any());"},{"lineNumber":93,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":94,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertTrue(res.getMessage().contains(unexistingId));"},{"lineNumber":95,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":97,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":98,"author":{"gitId":"Anastasiia Bezruka"},"content":"    void addSkill_skillAndSkillSetExists_shouldAdd() {"},{"lineNumber":99,"author":{"gitId":"Anastasiia Bezruka"},"content":"        String skillId \u003d \"10\";"},{"lineNumber":100,"author":{"gitId":"Anastasiia Bezruka"},"content":"        when(skillSetRepository.findById(any())).thenReturn(Optional.of(SKILL_SET));"},{"lineNumber":101,"author":{"gitId":"Anastasiia Bezruka"},"content":"        when(skillService.findSkillById(any())).thenReturn(new Skill(skillId, \"name\", null));"},{"lineNumber":102,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":103,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertDoesNotThrow(() -\u003e skillSetService.addSkillToSkillSet(SKILL_SET_DTO.getSkillSetId(), skillId));"},{"lineNumber":104,"author":{"gitId":"Anastasiia Bezruka"},"content":"        verify(skillSetRepository).save(any());"},{"lineNumber":105,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":107,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":108,"author":{"gitId":"Anastasiia Bezruka"},"content":"    void addSkill_skillServiceThrowsException_shouldRethrow() {"},{"lineNumber":109,"author":{"gitId":"Anastasiia Bezruka"},"content":"        when(skillService.findSkillById(any())).thenThrow(EXCEPTION);"},{"lineNumber":110,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertThrows(EXCEPTION.getClass(), () -\u003e skillSetService.addSkillToSkillSet(SKILL_SET_DTO.getSkillSetId(), \"12\"));"},{"lineNumber":111,"author":{"gitId":"Anastasiia Bezruka"},"content":"        verify(skillSetRepository, never()).save(any());"},{"lineNumber":112,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":114,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":115,"author":{"gitId":"Anastasiia Bezruka"},"content":"    void addSkill_skillSetDoesNotExists_shouldThrowException() {"},{"lineNumber":116,"author":{"gitId":"Anastasiia Bezruka"},"content":"        String skillId \u003d \"10\";"},{"lineNumber":117,"author":{"gitId":"Anastasiia Bezruka"},"content":"        when(skillSetRepository.findById(any())).thenReturn(Optional.empty());"},{"lineNumber":118,"author":{"gitId":"Anastasiia Bezruka"},"content":"        when(skillService.findSkillById(any())).thenReturn(new Skill(skillId, \"name\", null));"},{"lineNumber":119,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Exception res \u003d assertThrows(SkillSetNotFoundException.class, () -\u003e skillSetService.addSkillToSkillSet(SKILL_SET_DTO.getSkillSetId(), skillId));"},{"lineNumber":120,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertTrue(res.getMessage().contains(SKILL_SET_DTO.getSkillSetId()));"},{"lineNumber":121,"author":{"gitId":"Anastasiia Bezruka"},"content":"        verify(skillSetRepository, never()).save(any());"},{"lineNumber":122,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":124,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":125,"author":{"gitId":"Anastasiia Bezruka"},"content":"    void removeSkill_skillAndSkillSetExists_shouldAdd() {"},{"lineNumber":126,"author":{"gitId":"Anastasiia Bezruka"},"content":"        String skillId \u003d \"10\";"},{"lineNumber":127,"author":{"gitId":"Anastasiia Bezruka"},"content":"        when(skillSetRepository.findById(any())).thenReturn(Optional.of(SKILL_SET));"},{"lineNumber":128,"author":{"gitId":"Anastasiia Bezruka"},"content":"        when(skillService.findSkillById(any())).thenReturn(new Skill(skillId, \"name\", null));"},{"lineNumber":129,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":130,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertDoesNotThrow(() -\u003e skillSetService.removeSkillFromSkillSet(SKILL_SET_DTO.getSkillSetId(), skillId));"},{"lineNumber":131,"author":{"gitId":"Anastasiia Bezruka"},"content":"        verify(skillSetRepository).save(any());"},{"lineNumber":132,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":134,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":135,"author":{"gitId":"ivanmaister7"},"content":"    void deleteSkillSet_skillAndSkillSetExists_true() {"},{"lineNumber":136,"author":{"gitId":"ivanmaister7"},"content":"        when(skillSetService.exist(\"1\")).thenReturn(false);"},{"lineNumber":137,"author":{"gitId":"ivanmaister7"},"content":"        assertTrue(skillSetService.deleteSkillSet(\"1\"));"},{"lineNumber":138,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":140,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":141,"author":{"gitId":"ivanmaister7"},"content":"    void deleteSkillSet_skillAndSkillSetExists_false() {"},{"lineNumber":142,"author":{"gitId":"ivanmaister7"},"content":"        when(skillSetService.exist(\"111\")).thenReturn(true);"},{"lineNumber":143,"author":{"gitId":"ivanmaister7"},"content":"        assertFalse(skillSetService.deleteSkillSet(\"111\"));"},{"lineNumber":144,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":146,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":147,"author":{"gitId":"Anastasiia Bezruka"},"content":"    void removeSkill_skillServiceThrowsException_shouldRethrow() {"},{"lineNumber":148,"author":{"gitId":"Anastasiia Bezruka"},"content":"        when(skillService.findSkillById(any())).thenThrow(EXCEPTION);"},{"lineNumber":149,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertThrows(EXCEPTION.getClass(), () -\u003e skillSetService.removeSkillFromSkillSet(SKILL_SET_DTO.getSkillSetId(), \"12\"));"},{"lineNumber":150,"author":{"gitId":"Anastasiia Bezruka"},"content":"        verify(skillSetRepository, never()).save(any());"},{"lineNumber":151,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":153,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":154,"author":{"gitId":"Anastasiia Bezruka"},"content":"    void removeSkill_skillSetDoesNotExists_shouldThrowException() {"},{"lineNumber":155,"author":{"gitId":"Anastasiia Bezruka"},"content":"        String skillId \u003d \"10\";"},{"lineNumber":156,"author":{"gitId":"Anastasiia Bezruka"},"content":"        when(skillSetRepository.findById(any())).thenReturn(Optional.empty());"},{"lineNumber":157,"author":{"gitId":"Anastasiia Bezruka"},"content":"        when(skillService.findSkillById(any())).thenReturn(new Skill(skillId, \"name\", null));"},{"lineNumber":158,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Exception res \u003d assertThrows(SkillSetNotFoundException.class, () -\u003e skillSetService.removeSkillFromSkillSet(SKILL_SET_DTO.getSkillSetId(), skillId));"},{"lineNumber":159,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertTrue(res.getMessage().contains(SKILL_SET_DTO.getSkillSetId()));"},{"lineNumber":160,"author":{"gitId":"Anastasiia Bezruka"},"content":"        verify(skillSetRepository, never()).save(any());"},{"lineNumber":161,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":163,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":164,"author":{"gitId":"Anastasiia Bezruka"},"content":"    void findSkillSetById_skillSetExists_shouldReturnSkillSet() {"},{"lineNumber":165,"author":{"gitId":"Anastasiia Bezruka"},"content":"        when(skillSetRepository.findById(any())).thenReturn(Optional.of(SKILL_SET));"},{"lineNumber":166,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":167,"author":{"gitId":"Anastasiia Bezruka"},"content":"        SkillSet res \u003d assertDoesNotThrow(() -\u003e skillSetService.findSkillSetById(SKILL_SET_DTO.getSkillSetId()));"},{"lineNumber":168,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertEquals(SKILL_SET, res);"},{"lineNumber":169,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":171,"author":{"gitId":"Anastasiia Bezruka"},"content":"    @Test"},{"lineNumber":172,"author":{"gitId":"Anastasiia Bezruka"},"content":"    void findSkillSetById_skillSetDoesNotExists_shouldThrowException() {"},{"lineNumber":173,"author":{"gitId":"Anastasiia Bezruka"},"content":"        when(skillSetRepository.findById(any())).thenReturn(Optional.empty());"},{"lineNumber":174,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":175,"author":{"gitId":"Anastasiia Bezruka"},"content":"        String unexistingId \u003d \"unexistingId\";"},{"lineNumber":176,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Exception res \u003d assertThrows(SkillSetNotFoundException.class,"},{"lineNumber":177,"author":{"gitId":"Anastasiia Bezruka"},"content":"                () -\u003e skillSetService.findSkillSetById(unexistingId));"},{"lineNumber":178,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":179,"author":{"gitId":"Anastasiia Bezruka"},"content":"        assertTrue(res.getMessage().contains(unexistingId));"},{"lineNumber":180,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"yostashko"},"content":"    @Test"},{"lineNumber":182,"author":{"gitId":"ivanmaister7"},"content":"    void findOptionalSkillSetById() {"},{"lineNumber":183,"author":{"gitId":"ivanmaister7"},"content":"        when(skillSetRepository.findById(\"1\")).thenReturn(Optional.of(SKILL_SET));"},{"lineNumber":184,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(Optional.of(SKILL_SET), skillSetService.findOptionalSkillSetById(\"1\"));"},{"lineNumber":185,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":186,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":187,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":188,"author":{"gitId":"ivanmaister7"},"content":"    void findAllSkillSets() {"},{"lineNumber":189,"author":{"gitId":"ivanmaister7"},"content":"        when(skillSetRepository.findAll()).thenReturn(List.of(SKILL_SET));"},{"lineNumber":190,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(List.of(SKILL_SET).size(), skillSetService.findAllSkillSets().size());"},{"lineNumber":191,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(List.of(SKILL_SET), skillSetService.findAllSkillSets());"},{"lineNumber":192,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":193,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":194,"author":{"gitId":"ivanmaister7"},"content":"    void exist_Ok() {"},{"lineNumber":195,"author":{"gitId":"ivanmaister7"},"content":"        when(skillSetRepository.existsById(\"1\")).thenReturn(true);"},{"lineNumber":196,"author":{"gitId":"ivanmaister7"},"content":"        assertTrue(skillSetService.exist(\"1\"));"},{"lineNumber":197,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":198,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":199,"author":{"gitId":"ivanmaister7"},"content":"    void exist_Bad() {"},{"lineNumber":200,"author":{"gitId":"ivanmaister7"},"content":"        when(skillSetRepository.existsById(\"2\")).thenReturn(false);"},{"lineNumber":201,"author":{"gitId":"ivanmaister7"},"content":"        assertFalse(skillSetService.exist(\"2\"));"},{"lineNumber":202,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":203,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":204,"author":{"gitId":"yostashko"},"content":"    void skillNotFoundEx() {"},{"lineNumber":205,"author":{"gitId":"yostashko"},"content":"        SkillNotFoundException thrown \u003d Assertions.assertThrows(SkillNotFoundException.class, () -\u003e {"},{"lineNumber":206,"author":{"gitId":"yostashko"},"content":"            throw new SkillNotFoundException(\"fd\");"},{"lineNumber":207,"author":{"gitId":"yostashko"},"content":"        });"},{"lineNumber":208,"author":{"gitId":"yostashko"},"content":"        Assertions.assertEquals(\"fd\", thrown.getMessage());"},{"lineNumber":209,"author":{"gitId":"yostashko"},"content":"    }"},{"lineNumber":210,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":211,"author":{"gitId":"yostashko"},"content":"    @Test"},{"lineNumber":212,"author":{"gitId":"yostashko"},"content":"    void wrongSkillNotFoundEx() {"},{"lineNumber":213,"author":{"gitId":"yostashko"},"content":"        SkillNotFoundException thrown \u003d Assertions.assertThrows(SkillNotFoundException.class, () -\u003e {"},{"lineNumber":214,"author":{"gitId":"yostashko"},"content":"            throw new SkillNotFoundException(\"fda\");"},{"lineNumber":215,"author":{"gitId":"yostashko"},"content":"        });"},{"lineNumber":216,"author":{"gitId":"yostashko"},"content":"        Assertions.assertNotEquals(\"fd\", thrown.getMessage());"},{"lineNumber":217,"author":{"gitId":"yostashko"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":219,"author":{"gitId":"yostashko"},"content":"    @Test"},{"lineNumber":220,"author":{"gitId":"yostashko"},"content":"    void topicNotFoundEx() {"},{"lineNumber":221,"author":{"gitId":"yostashko"},"content":"        TopicNotFoundException thrown \u003d Assertions.assertThrows(TopicNotFoundException.class, () -\u003e {"},{"lineNumber":222,"author":{"gitId":"yostashko"},"content":"            throw new TopicNotFoundException(\"fd\");"},{"lineNumber":223,"author":{"gitId":"yostashko"},"content":"        });"},{"lineNumber":224,"author":{"gitId":"yostashko"},"content":"        Assertions.assertEquals(\"fd\", thrown.getMessage());"},{"lineNumber":225,"author":{"gitId":"yostashko"},"content":"    }"},{"lineNumber":226,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":227,"author":{"gitId":"yostashko"},"content":"    @Test"},{"lineNumber":228,"author":{"gitId":"yostashko"},"content":"    void wrongTopicNotFoundEx() {"},{"lineNumber":229,"author":{"gitId":"yostashko"},"content":"        TopicNotFoundException thrown \u003d Assertions.assertThrows(TopicNotFoundException.class, () -\u003e {"},{"lineNumber":230,"author":{"gitId":"yostashko"},"content":"            throw new TopicNotFoundException(\"fda\");"},{"lineNumber":231,"author":{"gitId":"yostashko"},"content":"        });"},{"lineNumber":232,"author":{"gitId":"yostashko"},"content":"        Assertions.assertNotEquals(\"fd\", thrown.getMessage());"},{"lineNumber":233,"author":{"gitId":"yostashko"},"content":"    }"},{"lineNumber":234,"author":{"gitId":"yostashko"},"content":""},{"lineNumber":235,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":236,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private static SkillSet initTestObject() {"},{"lineNumber":237,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Skill skill \u003d new Skill(\"1\", \"Skill\", null);"},{"lineNumber":238,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Skill skill1 \u003d new Skill(\"2\", \"sk1\", skill);"},{"lineNumber":239,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Set\u003cSkill\u003e skills \u003d Stream.of(skill1, skill).collect(Collectors.toSet());"},{"lineNumber":240,"author":{"gitId":"Anastasiia Bezruka"},"content":"        return new SkillSet(\"1\", \"SkillSetName\", skills);"},{"lineNumber":241,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":242,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":243,"author":{"gitId":"Anastasiia Bezruka"},"content":"    private static SkillSetDTO initTestDto() {"},{"lineNumber":244,"author":{"gitId":"Anastasiia Bezruka"},"content":"        Set\u003cString\u003e ids \u003d Stream.of(\"1\", \"2\").collect(Collectors.toSet());"},{"lineNumber":245,"author":{"gitId":"Anastasiia Bezruka"},"content":"        return new SkillSetDTO(\"1\", \"SkillSetName\", ids);"},{"lineNumber":246,"author":{"gitId":"Anastasiia Bezruka"},"content":"    }"},{"lineNumber":247,"author":{"gitId":"Anastasiia Bezruka"},"content":""},{"lineNumber":248,"author":{"gitId":"Anastasiia Bezruka"},"content":"}"}],"authorContributionMap":{"yostashko":35,"ivanmaister7":37,"Anastasiia Bezruka":176}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/service/TopicServiceTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OleksandRomaniuk"},"content":"package edu.kmaooad.service;"},{"lineNumber":2,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":3,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.DTO.SkillSetDTO;"},{"lineNumber":4,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.DTO.TopicDTO;"},{"lineNumber":5,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.exeptions.TopicNotFoundException;"},{"lineNumber":6,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.models.SkillSet;"},{"lineNumber":7,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.models.Topic;"},{"lineNumber":8,"author":{"gitId":"OleksandRomaniuk"},"content":"import edu.kmaooad.repository.TopicRepository;"},{"lineNumber":9,"author":{"gitId":"ivanmaister7"},"content":"import org.junit.jupiter.api.Order;"},{"lineNumber":10,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":11,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.junit.jupiter.api.extension.ExtendWith;"},{"lineNumber":12,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.mockito.InjectMocks;"},{"lineNumber":13,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.mockito.Mock;"},{"lineNumber":14,"author":{"gitId":"OleksandRomaniuk"},"content":"import org.mockito.junit.jupiter.MockitoExtension;"},{"lineNumber":15,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":16,"author":{"gitId":"ivanmaister7"},"content":"import java.util.List;"},{"lineNumber":17,"author":{"gitId":"OleksandRomaniuk"},"content":"import java.util.Optional;"},{"lineNumber":18,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":19,"author":{"gitId":"OleksandRomaniuk"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":20,"author":{"gitId":"OleksandRomaniuk"},"content":"import static org.mockito.ArgumentMatchers.any;"},{"lineNumber":21,"author":{"gitId":"OleksandRomaniuk"},"content":"import static org.mockito.Mockito.*;"},{"lineNumber":22,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":23,"author":{"gitId":"OleksandRomaniuk"},"content":"@ExtendWith(MockitoExtension.class)"},{"lineNumber":24,"author":{"gitId":"OleksandRomaniuk"},"content":"public class TopicServiceTest {"},{"lineNumber":25,"author":{"gitId":"OleksandRomaniuk"},"content":"    @Mock"},{"lineNumber":26,"author":{"gitId":"OleksandRomaniuk"},"content":"    private TopicRepository topicRepository;"},{"lineNumber":27,"author":{"gitId":"OleksandRomaniuk"},"content":"    @Mock"},{"lineNumber":28,"author":{"gitId":"OleksandRomaniuk"},"content":"    private SkillService skillService;"},{"lineNumber":29,"author":{"gitId":"OleksandRomaniuk"},"content":"    @Mock"},{"lineNumber":30,"author":{"gitId":"OleksandRomaniuk"},"content":"    private SkillSetService skillSetService;"},{"lineNumber":31,"author":{"gitId":"OleksandRomaniuk"},"content":"    @InjectMocks"},{"lineNumber":32,"author":{"gitId":"OleksandRomaniuk"},"content":"    private TopicService topicService;"},{"lineNumber":33,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":34,"author":{"gitId":"OleksandRomaniuk"},"content":"    private static final TopicNotFoundException EXCEPTION \u003d new TopicNotFoundException(\"Topic not found\");"},{"lineNumber":35,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":36,"author":{"gitId":"OleksandRomaniuk"},"content":"    private static final Topic TOPIC \u003d initTestObject();"},{"lineNumber":37,"author":{"gitId":"OleksandRomaniuk"},"content":"    private static final TopicDTO TOPIC_DTO \u003d initTestDto();"},{"lineNumber":38,"author":{"gitId":"OleksandRomaniuk"},"content":"    @Test"},{"lineNumber":39,"author":{"gitId":"OleksandRomaniuk"},"content":"    public void updateParentTopic(){"},{"lineNumber":40,"author":{"gitId":"OleksandRomaniuk"},"content":"        Topic  topic \u003d initTestObject();"},{"lineNumber":41,"author":{"gitId":"OleksandRomaniuk"},"content":"        Optional\u003cTopic\u003e  parentTopic \u003d initParentTestObject();"},{"lineNumber":42,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":43,"author":{"gitId":"OleksandRomaniuk"},"content":"        if (!parentTopic.isPresent()) {"},{"lineNumber":44,"author":{"gitId":"OleksandRomaniuk"},"content":"            throw new TopicNotFoundException(\"Topic not found\");"},{"lineNumber":45,"author":{"gitId":"OleksandRomaniuk"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"OleksandRomaniuk"},"content":"        topic.setParentTopic(parentTopic.get());"},{"lineNumber":47,"author":{"gitId":"OleksandRomaniuk"},"content":"        topicRepository.save(topic);"},{"lineNumber":48,"author":{"gitId":"OleksandRomaniuk"},"content":"        assertEquals(topic , new Topic(\"1\",\"Name1\",parentTopic.get()));"},{"lineNumber":49,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"OleksandRomaniuk"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"ivanmaister7"},"content":"    @Order(1)"},{"lineNumber":52,"author":{"gitId":"OleksandRomaniuk"},"content":"    public void createTopic(){"},{"lineNumber":53,"author":{"gitId":"OleksandRomaniuk"},"content":"        Optional\u003cTopic\u003e topic \u003d Optional.of(new Topic(\"1\", \"Name1\", null));"},{"lineNumber":54,"author":{"gitId":"OleksandRomaniuk"},"content":"        Optional\u003cTopic\u003e createdTopic \u003d topicService.createTopic(initTestDto());"},{"lineNumber":55,"author":{"gitId":"OleksandRomaniuk"},"content":"        assertEquals(topic,createdTopic);"},{"lineNumber":56,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":57,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"OleksandRomaniuk"},"content":"    @Test"},{"lineNumber":59,"author":{"gitId":"ivanmaister7"},"content":"    void deleteTopic_Ok() {"},{"lineNumber":60,"author":{"gitId":"ivanmaister7"},"content":"        when(topicRepository.findTopicByTopicID(TOPIC_DTO.getTopicId())).thenReturn(Optional.of(TOPIC));"},{"lineNumber":61,"author":{"gitId":"ivanmaister7"},"content":"        assertTrue(topicService.deleteTopic(TOPIC_DTO.getTopicId()));"},{"lineNumber":62,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":64,"author":{"gitId":"OleksandRomaniuk"},"content":"    void deleteTopic() {"},{"lineNumber":65,"author":{"gitId":"ivanmaister7"},"content":"        when(topicRepository.findTopicByTopicID(TOPIC_DTO.getTopicId())).thenReturn(Optional.of(TOPIC));"},{"lineNumber":66,"author":{"gitId":"ivanmaister7"},"content":"        when(topicService.deleteTopic(TOPIC_DTO.getTopicId())).thenReturn(true);"},{"lineNumber":67,"author":{"gitId":"OleksandRomaniuk"},"content":"        assertDoesNotThrow(() -\u003e topicService.deleteTopic(TOPIC_DTO.getTopicId()));"},{"lineNumber":68,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"OleksandRomaniuk"},"content":"    @Test"},{"lineNumber":70,"author":{"gitId":"OleksandRomaniuk"},"content":"    void deleteTopicException() {"},{"lineNumber":71,"author":{"gitId":"ivanmaister7"},"content":"        when(topicRepository.findTopicByTopicID(TOPIC_DTO.getTopicId())).thenReturn(Optional.of(TOPIC));"},{"lineNumber":72,"author":{"gitId":"ivanmaister7"},"content":"        when(topicService.deleteTopic(TOPIC_DTO.getTopicId())).thenThrow(EXCEPTION);"},{"lineNumber":73,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":74,"author":{"gitId":"ivanmaister7"},"content":"        assertThrows(EXCEPTION.getClass(), () -\u003e topicService.deleteTopic(TOPIC_DTO.getTopicId()));"},{"lineNumber":75,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"OleksandRomaniuk"},"content":"    @Test"},{"lineNumber":77,"author":{"gitId":"OleksandRomaniuk"},"content":"    void findTopic() {"},{"lineNumber":78,"author":{"gitId":"OleksandRomaniuk"},"content":"        when(topicRepository.findById(any())).thenReturn(Optional.of(TOPIC));"},{"lineNumber":79,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":80,"author":{"gitId":"OleksandRomaniuk"},"content":"        Topic res \u003d assertDoesNotThrow(() -\u003e topicService.findTopicById(TOPIC.getTopicID()));"},{"lineNumber":81,"author":{"gitId":"OleksandRomaniuk"},"content":"        assertEquals(TOPIC, res);"},{"lineNumber":82,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":84,"author":{"gitId":"ivanmaister7"},"content":"    void findOptionalTopicById() {"},{"lineNumber":85,"author":{"gitId":"ivanmaister7"},"content":"        when(topicRepository.findById(\"1\")).thenReturn(Optional.of(TOPIC));"},{"lineNumber":86,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(Optional.of(TOPIC), topicService.findOptionalTopicById(\"1\"));"},{"lineNumber":87,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"ivanmaister7"},"content":""},{"lineNumber":89,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":90,"author":{"gitId":"ivanmaister7"},"content":"    void findAllTopics() {"},{"lineNumber":91,"author":{"gitId":"ivanmaister7"},"content":"        when(topicRepository.findAll()).thenReturn(List.of(TOPIC));"},{"lineNumber":92,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(List.of(TOPIC).size(), topicService.findAllTopics().size());"},{"lineNumber":93,"author":{"gitId":"ivanmaister7"},"content":"        assertEquals(List.of(TOPIC), topicService.findAllTopics());"},{"lineNumber":94,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":96,"author":{"gitId":"ivanmaister7"},"content":"    void exist_Ok() {"},{"lineNumber":97,"author":{"gitId":"ivanmaister7"},"content":"        when(topicRepository.existsById(\"1\")).thenReturn(true);"},{"lineNumber":98,"author":{"gitId":"ivanmaister7"},"content":"        assertTrue(topicService.exist(\"1\"));"},{"lineNumber":99,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"ivanmaister7"},"content":"    @Test"},{"lineNumber":101,"author":{"gitId":"ivanmaister7"},"content":"    void exist_Bad() {"},{"lineNumber":102,"author":{"gitId":"ivanmaister7"},"content":"        when(topicRepository.existsById(\"2\")).thenReturn(false);"},{"lineNumber":103,"author":{"gitId":"ivanmaister7"},"content":"        assertFalse(topicService.exist(\"2\"));"},{"lineNumber":104,"author":{"gitId":"ivanmaister7"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"OleksandRomaniuk"},"content":"    private static Topic initTestObject() {"},{"lineNumber":106,"author":{"gitId":"OleksandRomaniuk"},"content":"        return new Topic(\"1\", \"Name1\", null);"},{"lineNumber":107,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"OleksandRomaniuk"},"content":"    private static Optional\u003cTopic\u003e initParentTestObject() {"},{"lineNumber":109,"author":{"gitId":"OleksandRomaniuk"},"content":"        return Optional.of(new Topic(\"2\", \"Name2\", null));"},{"lineNumber":110,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"OleksandRomaniuk"},"content":"    private static TopicDTO initTestDto() {"},{"lineNumber":112,"author":{"gitId":"OleksandRomaniuk"},"content":"        return new TopicDTO(\"1\", \"Name1\", \"null\");"},{"lineNumber":113,"author":{"gitId":"OleksandRomaniuk"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"OleksandRomaniuk"},"content":""},{"lineNumber":115,"author":{"gitId":"OleksandRomaniuk"},"content":"}"}],"authorContributionMap":{"ivanmaister7":35,"OleksandRomaniuk":80}}]
