[{"path":"kmaooad-functions/TODO","fileType":"TODO","lines":[{"lineNumber":1,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":2,"author":{"gitId":"illia_sitkov"},"content":"fix AccessCheckServiceImpl -- Illia K."},{"lineNumber":3,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":4,"author":{"gitId":"illia_sitkov"},"content":"CreateAccessRuleHandler -- Illia S."},{"lineNumber":5,"author":{"gitId":"illia_sitkov"},"content":"create Handler interface -- Illia S."},{"lineNumber":6,"author":{"gitId":"illia_sitkov"},"content":"add global error handler -- Illia S."},{"lineNumber":7,"author":{"gitId":"illia_sitkov"},"content":"create Dispatcher (create a separate bean for map) -- Illia S."},{"lineNumber":8,"author":{"gitId":"illia_sitkov"},"content":"add getCommandByName() to CommandService -- Illia S."},{"lineNumber":9,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":10,"author":{"gitId":"Iryna"},"content":"OtherCommandHandler -\u003e send request to the appropriate microservice -\u003e"},{"lineNumber":11,"author":{"gitId":"Iryna"},"content":"-\u003e wait (or async call) for the response -\u003e emit Event -- Ira"},{"lineNumber":12,"author":{"gitId":"illia_sitkov"},"content":"add functionUrl to Command -- Ira"},{"lineNumber":13,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":14,"author":{"gitId":"illia_sitkov"},"content":"set up Spring Events + ResponseSender -- Hlib"},{"lineNumber":15,"author":{"gitId":"illia_sitkov"},"content":"add chat_id (resourceId, resourceType?) to CommandCall -- Hlib"},{"lineNumber":16,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":17,"author":{"gitId":"illia_sitkov"},"content":"implement BanHandler -- Unassigned"},{"lineNumber":18,"author":{"gitId":"illia_sitkov"},"content":"implement UnbanHandler -- Unassigned"},{"lineNumber":19,"author":{"gitId":"illia_sitkov"},"content":"implement UpdateAccessRuleHandler -- Unassigned"},{"lineNumber":20,"author":{"gitId":"illia_sitkov"},"content":"implement DeleteAccessRuleHandler -- Unassigned"}],"authorContributionMap":{"illia_sitkov":18,"Iryna":2}},{"path":"kmaooad-functions/pom.xml","fileType":"xml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\" ?\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cproject xmlns\u003d\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi\u003d\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation\u003d\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cmodelVersion\u003e4.0.0\u003c/modelVersion\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003cgroupId\u003eedu.kmaooad\u003c/groupId\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003cartifactId\u003ekmaooad-functions\u003c/artifactId\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003cversion\u003e1.0-SNAPSHOT\u003c/version\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cpackaging\u003ejar\u003c/packaging\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cname\u003eAzure Java Functions\u003c/name\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cproperties\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \u003cproject.build.sourceEncoding\u003eUTF-8\u003c/project.build.sourceEncoding\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003cjava.version\u003e11\u003c/java.version\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003cazure.functions.maven.plugin.version\u003e1.20.0\u003c/azure.functions.maven.plugin.version\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003cazure.functions.java.library.version\u003e2.0.1\u003c/azure.functions.java.library.version\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cfunctionAppName\u003ekmaooad-functions-20220927162321908\u003c/functionAppName\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cstart-class\u003eedu.kmaooad.Application\u003c/start-class\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/properties\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cparent\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cgroupId\u003eorg.springframework.boot\u003c/groupId\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cartifactId\u003espring-boot-starter-parent\u003c/artifactId\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cversion\u003e2.6.6\u003c/version\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003crelativePath/\u003e \u003c!-- lookup parent from repository --\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/parent\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003cdependencyManagement\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cdependencies\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cdependency\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                \u003cgroupId\u003eorg.springframework.cloud\u003c/groupId\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                \u003cartifactId\u003espring-cloud-function-dependencies\u003c/artifactId\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                \u003cversion\u003e3.2.3\u003c/version\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003ctype\u003epom\u003c/type\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                \u003cscope\u003eimport\u003c/scope\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003c/dependency\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/dependencies\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/dependencyManagement\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003cdependencies\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cdependency\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003cgroupId\u003ecom.microsoft.azure.functions\u003c/groupId\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cartifactId\u003eazure-functions-java-library\u003c/artifactId\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cversion\u003e${azure.functions.java.library.version}\u003c/version\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/dependency\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003cdependency\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            \u003cgroupId\u003eorg.mockito\u003c/groupId\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003cartifactId\u003emockito-core\u003c/artifactId\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cversion\u003e2.23.4\u003c/version\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cscope\u003etest\u003c/scope\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        \u003c/dependency\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003cdependency\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u003cgroupId\u003eorg.springframework.cloud\u003c/groupId\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \u003cartifactId\u003espring-cloud-function-adapter-azure\u003c/artifactId\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003c/dependency\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cdependency\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            \u003cgroupId\u003eorg.springframework.cloud\u003c/groupId\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            \u003cartifactId\u003espring-cloud-starter-function-webflux\u003c/artifactId\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            \u003cscope\u003eprovided\u003c/scope\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003c/dependency\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"        \u003cdependency\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            \u003cgroupId\u003eorg.springframework.boot\u003c/groupId\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \u003cartifactId\u003espring-boot-starter-webflux\u003c/artifactId\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        \u003c/dependency\u003e"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"        \u003cdependency\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            \u003cgroupId\u003eorg.springframework.boot\u003c/groupId\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            \u003cartifactId\u003espring-boot-starter-data-mongodb\u003c/artifactId\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        \u003c/dependency\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"        \u003cdependency\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            \u003cgroupId\u003eorg.projectlombok\u003c/groupId\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \u003cartifactId\u003elombok\u003c/artifactId\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            \u003coptional\u003etrue\u003c/optional\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        \u003c/dependency\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"        \u003cdependency\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            \u003cgroupId\u003eorg.springframework.boot\u003c/groupId\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            \u003cartifactId\u003espring-boot-starter-test\u003c/artifactId\u003e"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            \u003cscope\u003etest\u003c/scope\u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        \u003c/dependency\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"        \u003cdependency\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            \u003cgroupId\u003ecom.fasterxml.jackson.core\u003c/groupId\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            \u003cartifactId\u003ejackson-databind\u003c/artifactId\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            \u003cversion\u003e2.13.3\u003c/version\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        \u003c/dependency\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"Iryna"},"content":"        \u003cdependency\u003e"},{"lineNumber":94,"author":{"gitId":"Iryna"},"content":"            \u003cgroupId\u003ecom.squareup.okhttp3\u003c/groupId\u003e"},{"lineNumber":95,"author":{"gitId":"Iryna"},"content":"            \u003cartifactId\u003emockwebserver\u003c/artifactId\u003e"},{"lineNumber":96,"author":{"gitId":"Iryna"},"content":"            \u003cversion\u003e4.10.0\u003c/version\u003e"},{"lineNumber":97,"author":{"gitId":"Iryna"},"content":"            \u003cscope\u003etest\u003c/scope\u003e"},{"lineNumber":98,"author":{"gitId":"Iryna"},"content":"        \u003c/dependency\u003e"},{"lineNumber":99,"author":{"gitId":"Iryna"},"content":"        \u003cdependency\u003e"},{"lineNumber":100,"author":{"gitId":"Iryna"},"content":"            \u003cgroupId\u003ecom.squareup.okhttp3\u003c/groupId\u003e"},{"lineNumber":101,"author":{"gitId":"Iryna"},"content":"            \u003cartifactId\u003eokhttp\u003c/artifactId\u003e"},{"lineNumber":102,"author":{"gitId":"Iryna"},"content":"            \u003cversion\u003e4.10.0\u003c/version\u003e"},{"lineNumber":103,"author":{"gitId":"Iryna"},"content":"            \u003cscope\u003etest\u003c/scope\u003e"},{"lineNumber":104,"author":{"gitId":"Iryna"},"content":"        \u003c/dependency\u003e"},{"lineNumber":105,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \u003c/dependencies\u003e"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"    \u003cbuild\u003e"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        \u003cplugins\u003e"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            \u003cplugin\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                \u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                \u003cartifactId\u003emaven-compiler-plugin\u003c/artifactId\u003e"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u003cversion\u003e3.8.1\u003c/version\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                \u003cconfiguration\u003e"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                    \u003csource\u003e${java.version}\u003c/source\u003e"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                    \u003ctarget\u003e${java.version}\u003c/target\u003e"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                    \u003cencoding\u003e${project.build.sourceEncoding}\u003c/encoding\u003e"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                    \u003cannotationProcessorPaths\u003e"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                        \u003cpath\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                            \u003cgroupId\u003eorg.projectlombok\u003c/groupId\u003e"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                            \u003cartifactId\u003elombok\u003c/artifactId\u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                            \u003cversion\u003e${lombok.version}\u003c/version\u003e"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                        \u003c/path\u003e"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    \u003c/annotationProcessorPaths\u003e"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                \u003c/configuration\u003e"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            \u003c/plugin\u003e"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            \u003cplugin\u003e"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                \u003cgroupId\u003ecom.microsoft.azure\u003c/groupId\u003e"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                \u003cartifactId\u003eazure-functions-maven-plugin\u003c/artifactId\u003e"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                \u003cversion\u003e${azure.functions.maven.plugin.version}\u003c/version\u003e"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u003cconfiguration\u003e"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                    \u003c!-- function app name --\u003e"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                    \u003cappName\u003e${functionAppName}\u003c/appName\u003e"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                    \u003c!-- function app resource group --\u003e"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                    \u003cresourceGroup\u003ejava-functions-group\u003c/resourceGroup\u003e"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                    \u003c!-- function app service plan name --\u003e"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                    \u003cappServicePlanName\u003ejava-functions-app-service-plan\u003c/appServicePlanName\u003e"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                    \u003c!-- function app region--\u003e"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                    \u003c!-- refers https://github.com/microsoft/azure-maven-plugins/wiki/Azure-Functions:-Configuration-Details#supported-regions for all valid values --\u003e"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                    \u003cregion\u003ewestus\u003c/region\u003e"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                    \u003c!-- function pricingTier, default to be consumption if not specified --\u003e"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                    \u003c!-- refers https://github.com/microsoft/azure-maven-plugins/wiki/Azure-Functions:-Configuration-Details#supported-pricing-tiers for all valid values --\u003e"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                    \u003c!-- \u003cpricingTier\u003e\u003c/pricingTier\u003e --\u003e"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                    \u003c!-- Whether to disable application insights, default is false --\u003e"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                    \u003c!-- refers https://github.com/microsoft/azure-maven-plugins/wiki/Azure-Functions:-Configuration-Details for all valid configurations for application insights--\u003e"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                    \u003c!-- \u003cdisableAppInsights\u003e\u003c/disableAppInsights\u003e --\u003e"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                    \u003cruntime\u003e"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                        \u003c!-- runtime os, could be windows, linux or docker--\u003e"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                        \u003cos\u003ewindows\u003c/os\u003e"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                        \u003cjavaVersion\u003e11\u003c/javaVersion\u003e"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    \u003c/runtime\u003e"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    \u003cappSettings\u003e"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                        \u003cproperty\u003e"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                            \u003cname\u003eFUNCTIONS_EXTENSION_VERSION\u003c/name\u003e"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                            \u003cvalue\u003e~4\u003c/value\u003e"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                        \u003c/property\u003e"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    \u003c/appSettings\u003e"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                \u003c/configuration\u003e"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                \u003cexecutions\u003e"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                    \u003cexecution\u003e"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                        \u003cid\u003epackage-functions\u003c/id\u003e"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                        \u003cgoals\u003e"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                            \u003cgoal\u003epackage\u003c/goal\u003e"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                        \u003c/goals\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                    \u003c/execution\u003e"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                \u003c/executions\u003e"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            \u003c/plugin\u003e"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            \u003cplugin\u003e"},{"lineNumber":169,"author":{"gitId":"-"},"content":"\t\t\t\t\u003cgroupId\u003eorg.jacoco\u003c/groupId\u003e"},{"lineNumber":170,"author":{"gitId":"-"},"content":"\t\t\t\t\u003cartifactId\u003ejacoco-maven-plugin\u003c/artifactId\u003e"},{"lineNumber":171,"author":{"gitId":"-"},"content":"\t\t\t\t\u003cversion\u003e0.8.8\u003c/version\u003e"},{"lineNumber":172,"author":{"gitId":"-"},"content":"\t\t\t\t\u003cexecutions\u003e"},{"lineNumber":173,"author":{"gitId":"-"},"content":"\t\t\t\t\t\u003cexecution\u003e"},{"lineNumber":174,"author":{"gitId":"-"},"content":"\t\t\t\t\t\t\u003cid\u003eprepare-agent\u003c/id\u003e"},{"lineNumber":175,"author":{"gitId":"-"},"content":"\t\t\t\t\t\t\u003cgoals\u003e"},{"lineNumber":176,"author":{"gitId":"-"},"content":"\t\t\t\t\t\t\t\u003cgoal\u003eprepare-agent\u003c/goal\u003e"},{"lineNumber":177,"author":{"gitId":"-"},"content":"\t\t\t\t\t\t\u003c/goals\u003e"},{"lineNumber":178,"author":{"gitId":"-"},"content":"\t\t\t\t\t\u003c/execution\u003e"},{"lineNumber":179,"author":{"gitId":"-"},"content":"\t\t\t\t\t\u003cexecution\u003e"},{"lineNumber":180,"author":{"gitId":"-"},"content":"\t\t\t\t\t\t\u003cid\u003ereport\u003c/id\u003e"},{"lineNumber":181,"author":{"gitId":"-"},"content":"\t\t\t\t\t\t\u003cphase\u003etest\u003c/phase\u003e"},{"lineNumber":182,"author":{"gitId":"-"},"content":"\t\t\t\t\t\t\u003cgoals\u003e"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\t\t\t\t\t\t\t\u003cgoal\u003ereport\u003c/goal\u003e"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\t\t\t\t\t\t\u003c/goals\u003e"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\t\t\t\t\t\u003c/execution\u003e"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\t\t\t\t\u003c/executions\u003e"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\t\t\t\u003c/plugin\u003e"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            \u003cplugin\u003e"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                \u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                \u003cartifactId\u003emaven-surefire-plugin\u003c/artifactId\u003e"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                \u003cversion\u003e3.0.0-M7\u003c/version\u003e"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                \u003cconfiguration\u003e"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                    \u003cfailIfNoTests\u003etrue\u003c/failIfNoTests\u003e"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                \u003c/configuration\u003e"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            \u003c/plugin\u003e"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            \u003c!--Remove obj folder generated by .NET SDK in maven clean--\u003e"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            \u003cplugin\u003e"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                \u003cartifactId\u003emaven-clean-plugin\u003c/artifactId\u003e"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                \u003cversion\u003e3.1.0\u003c/version\u003e"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                \u003cconfiguration\u003e"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                    \u003cfilesets\u003e"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                        \u003cfileset\u003e"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                            \u003cdirectory\u003eobj\u003c/directory\u003e"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                        \u003c/fileset\u003e"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                    \u003c/filesets\u003e"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                \u003c/configuration\u003e"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            \u003c/plugin\u003e"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"            \u003c!-- spring maven plugin --\u003e"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"            \u003cplugin\u003e"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                \u003cgroupId\u003eorg.springframework.boot\u003c/groupId\u003e"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                \u003cartifactId\u003espring-boot-maven-plugin\u003c/artifactId\u003e"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            \u003c/plugin\u003e"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"        \u003c/plugins\u003e"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    \u003c/build\u003e"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"    \u003c!-- spring repositories (?) --\u003e"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"    \u003crepositories\u003e"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        \u003crepository\u003e"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            \u003cid\u003espring-snapshots\u003c/id\u003e"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            \u003cname\u003eSpring Snapshots\u003c/name\u003e"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            \u003curl\u003ehttps://repo.spring.io/libs-snapshot-local\u003c/url\u003e"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            \u003csnapshots\u003e"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                \u003cenabled\u003etrue\u003c/enabled\u003e"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            \u003c/snapshots\u003e"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            \u003creleases\u003e"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                \u003cenabled\u003efalse\u003c/enabled\u003e"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            \u003c/releases\u003e"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        \u003c/repository\u003e"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        \u003crepository\u003e"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            \u003cid\u003espring-milestones\u003c/id\u003e"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            \u003cname\u003eSpring Milestones\u003c/name\u003e"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            \u003curl\u003ehttps://repo.spring.io/libs-milestone-local\u003c/url\u003e"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            \u003csnapshots\u003e"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                \u003cenabled\u003efalse\u003c/enabled\u003e"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            \u003c/snapshots\u003e"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        \u003c/repository\u003e"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        \u003crepository\u003e"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            \u003cid\u003espring-releases\u003c/id\u003e"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            \u003cname\u003eSpring Releases\u003c/name\u003e"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            \u003curl\u003ehttps://repo.spring.io/release\u003c/url\u003e"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            \u003csnapshots\u003e"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                \u003cenabled\u003efalse\u003c/enabled\u003e"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            \u003c/snapshots\u003e"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        \u003c/repository\u003e"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    \u003c/repositories\u003e"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"\u003c/project\u003e"}],"authorContributionMap":{"-":238,"Iryna":13}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/apiCommunication/OrgsWebClient.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.apiCommunication;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"soloway24"},"content":"import lombok.RequiredArgsConstructor;"},{"lineNumber":4,"author":{"gitId":"soloway24"},"content":"import org.springframework.beans.factory.annotation.Qualifier;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.springframework.web.reactive.function.client.WebClient;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"@Component"},{"lineNumber":10,"author":{"gitId":"soloway24"},"content":"@RequiredArgsConstructor"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class OrgsWebClient {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"soloway24"},"content":"    @Qualifier(\"organizationsWebClient\")"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final WebClient webClient;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    //fetch method stubs"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public Long fetchUserOrganizations(Long userId) {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"//        perform http call to endpoint"},{"lineNumber":19,"author":{"gitId":"-"},"content":"//        this.webClient.get()"},{"lineNumber":20,"author":{"gitId":"-"},"content":"//                .uri(uriBuilder -\u003e uriBuilder"},{"lineNumber":21,"author":{"gitId":"-"},"content":"//                        .path(\"?? some endpoint/ ??\" + userId)"},{"lineNumber":22,"author":{"gitId":"-"},"content":"//                        .build())"},{"lineNumber":23,"author":{"gitId":"-"},"content":"//                .accept(MediaType.APPLICATION_JSON)"},{"lineNumber":24,"author":{"gitId":"-"},"content":"//                .retrieve()"},{"lineNumber":25,"author":{"gitId":"-"},"content":"//                .bodyToMono(Long[].class)"},{"lineNumber":26,"author":{"gitId":"-"},"content":"//                .block();"},{"lineNumber":27,"author":{"gitId":"-"},"content":"//        return new Long[] {1L, 2L, 3L};"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return 3L;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Long fetchUserDepartments(Long userId) {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"//        perform http call to endpoint"},{"lineNumber":34,"author":{"gitId":"-"},"content":"//        this.webClient.get()"},{"lineNumber":35,"author":{"gitId":"-"},"content":"//                .uri(uriBuilder -\u003e uriBuilder"},{"lineNumber":36,"author":{"gitId":"-"},"content":"//                        .path(\"?? some other endpoint/ ??\" + userId)"},{"lineNumber":37,"author":{"gitId":"-"},"content":"//                        .build())"},{"lineNumber":38,"author":{"gitId":"-"},"content":"//                .accept(MediaType.APPLICATION_JSON)"},{"lineNumber":39,"author":{"gitId":"-"},"content":"//                .retrieve()"},{"lineNumber":40,"author":{"gitId":"-"},"content":"//                .bodyToMono(Long[].class)"},{"lineNumber":41,"author":{"gitId":"-"},"content":"//                .block();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"//        return new Long[] {4L, 5L, 6L};"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return 3L;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"soloway24":4,"-":42}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/apiCommunication/OtherMicroservicesWebClient.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Iryna"},"content":"package edu.kmaooad.apiCommunication;"},{"lineNumber":2,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":3,"author":{"gitId":"soloway24"},"content":"import lombok.RequiredArgsConstructor;"},{"lineNumber":4,"author":{"gitId":"Iryna"},"content":"import org.springframework.http.HttpStatus;"},{"lineNumber":5,"author":{"gitId":"Iryna"},"content":"import org.springframework.http.MediaType;"},{"lineNumber":6,"author":{"gitId":"Iryna"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":7,"author":{"gitId":"Iryna"},"content":"import org.springframework.web.reactive.function.client.WebClient;"},{"lineNumber":8,"author":{"gitId":"Iryna"},"content":"import reactor.core.publisher.Mono;"},{"lineNumber":9,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":10,"author":{"gitId":"Iryna"},"content":"@Component"},{"lineNumber":11,"author":{"gitId":"soloway24"},"content":"@RequiredArgsConstructor"},{"lineNumber":12,"author":{"gitId":"Iryna"},"content":"public class OtherMicroservicesWebClient {"},{"lineNumber":13,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":14,"author":{"gitId":"Iryna"},"content":"    private final WebClient webClient;"},{"lineNumber":15,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":16,"author":{"gitId":"Iryna"},"content":"    public Mono\u003cString\u003e sendPostRequest(String functionUrl, String fullCommand) {"},{"lineNumber":17,"author":{"gitId":"Iryna"},"content":"        return this.webClient.post()"},{"lineNumber":18,"author":{"gitId":"Iryna"},"content":"                .uri(functionUrl)"},{"lineNumber":19,"author":{"gitId":"Iryna"},"content":"                .body(Mono.just(fullCommand), String.class)"},{"lineNumber":20,"author":{"gitId":"Iryna"},"content":"                .accept(MediaType.TEXT_PLAIN)"},{"lineNumber":21,"author":{"gitId":"Iryna"},"content":"                .exchangeToMono(r -\u003e {"},{"lineNumber":22,"author":{"gitId":"Iryna"},"content":"                    if (r.statusCode().equals(HttpStatus.OK)) {"},{"lineNumber":23,"author":{"gitId":"Iryna"},"content":"                        return r.bodyToMono(String.class);"},{"lineNumber":24,"author":{"gitId":"Iryna"},"content":"                    } else if (r.statusCode().is4xxClientError()) {"},{"lineNumber":25,"author":{"gitId":"Iryna"},"content":"                        return Mono.just(\"Error response with code \" + r.statusCode());"},{"lineNumber":26,"author":{"gitId":"Iryna"},"content":"                    } else {"},{"lineNumber":27,"author":{"gitId":"Iryna"},"content":"                        return r.createException().flatMap(Mono::error);"},{"lineNumber":28,"author":{"gitId":"Iryna"},"content":"                    }"},{"lineNumber":29,"author":{"gitId":"Iryna"},"content":"                });"},{"lineNumber":30,"author":{"gitId":"Iryna"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Iryna"},"content":"}"}],"authorContributionMap":{"soloway24":2,"Iryna":29}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/apiCommunication/TelegramWebClient.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.apiCommunication;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.node.ObjectNode;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import edu.kmaooad.config.BotPropertiesConfig;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import edu.kmaooad.exceptions.IncorrectTelegramResponseBodyException;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import edu.kmaooad.exceptions.TelegramBadRequestException;"},{"lineNumber":9,"author":{"gitId":"Hlib Kalinichev"},"content":"import edu.kmaooad.utils.WebClientRequestLogger;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.springframework.http.HttpStatus;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":13,"author":{"gitId":"Hlib Kalinichev"},"content":"import org.springframework.web.reactive.function.client.ExchangeFilterFunction;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.springframework.web.reactive.function.client.WebClient;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"@Component"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class TelegramWebClient {"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private WebClient webClient;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final BotPropertiesConfig config;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"Hlib Kalinichev"},"content":"    private final WebClientRequestLogger logger;"},{"lineNumber":24,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String TG_BASE_URL \u003d \"https://api.telegram.org/bot\";"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Autowired"},{"lineNumber":28,"author":{"gitId":"Hlib Kalinichev"},"content":"    public TelegramWebClient(BotPropertiesConfig config, WebClientRequestLogger logger) {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.config \u003d config;"},{"lineNumber":30,"author":{"gitId":"Hlib Kalinichev"},"content":"        this.logger \u003d logger;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder(TG_BASE_URL);"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        sb.append(this.config.getToken());"},{"lineNumber":33,"author":{"gitId":"Hlib Kalinichev"},"content":"        webClient \u003d WebClient.builder().baseUrl(sb.toString()).filter(logFilter()).build();"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean sendMessage(String text, Long chatId) {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            String response \u003d this.webClient.get()"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .uri(uriBuilder -\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                            uriBuilder.path(\"/sendMessage\")"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                                    .queryParam(\"chat_id\", chatId)"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                                    .queryParam(\"text\", text)"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                                    .build())"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    .retrieve()"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    .onStatus(HttpStatus.BAD_REQUEST::equals,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                            resp -\u003e resp.bodyToMono(String.class).map(TelegramBadRequestException::new))"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                    .bodyToMono(String.class)"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                    .block();"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            ObjectNode node \u003d new ObjectMapper().readValue(response, ObjectNode.class);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return node.get(\"ok\").asBoolean();"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (JsonProcessingException | NullPointerException e) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            e.printStackTrace();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new IncorrectTelegramResponseBodyException();"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"Hlib Kalinichev"},"content":"    private ExchangeFilterFunction logFilter() {"},{"lineNumber":58,"author":{"gitId":"Hlib Kalinichev"},"content":"        return (clientRequest, next) -\u003e {"},{"lineNumber":59,"author":{"gitId":"Hlib Kalinichev"},"content":"            logger.logRequest(clientRequest.url().toString());"},{"lineNumber":60,"author":{"gitId":"Hlib Kalinichev"},"content":"            return next.exchange(clientRequest);"},{"lineNumber":61,"author":{"gitId":"Hlib Kalinichev"},"content":"        };"},{"lineNumber":62,"author":{"gitId":"Hlib Kalinichev"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Hlib Kalinichev":14,"-":50}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/commandDispatcher/CommandDispatcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"illia_sitkov"},"content":"package edu.kmaooad.commandDispatcher;"},{"lineNumber":2,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":3,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.processing.CommandCall;"},{"lineNumber":4,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":5,"author":{"gitId":"illia_sitkov"},"content":"public interface CommandDispatcher {"},{"lineNumber":6,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":7,"author":{"gitId":"illia_sitkov"},"content":"    void dispatch(CommandCall commandCall) throws Exception;"},{"lineNumber":8,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":9,"author":{"gitId":"illia_sitkov"},"content":"}"}],"authorContributionMap":{"illia_sitkov":9}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/commandDispatcher/CommandDispatcherImpl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"illia_sitkov"},"content":"package edu.kmaooad.commandDispatcher;"},{"lineNumber":2,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":3,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.commandHandlers.CommandHandler;"},{"lineNumber":4,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.exceptions.AccessDeniedException;"},{"lineNumber":5,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.models.ResourceType;"},{"lineNumber":6,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.processing.CommandCall;"},{"lineNumber":7,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.services.interfaces.AccessCheckService;"},{"lineNumber":8,"author":{"gitId":"illia_sitkov"},"content":"import lombok.AllArgsConstructor;"},{"lineNumber":9,"author":{"gitId":"illia_sitkov"},"content":"import org.springframework.stereotype.Service;"},{"lineNumber":10,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":11,"author":{"gitId":"illia_sitkov"},"content":"import java.util.Map;"},{"lineNumber":12,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":13,"author":{"gitId":"illia_sitkov"},"content":"@Service"},{"lineNumber":14,"author":{"gitId":"illia_sitkov"},"content":"@AllArgsConstructor"},{"lineNumber":15,"author":{"gitId":"illia_sitkov"},"content":"public class CommandDispatcherImpl implements CommandDispatcher {"},{"lineNumber":16,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":17,"author":{"gitId":"illia_sitkov"},"content":"    private Map\u003cLong, CommandHandler\u003e handlers;"},{"lineNumber":18,"author":{"gitId":"illia_sitkov"},"content":"    private AccessCheckService accessCheckService;"},{"lineNumber":19,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":20,"author":{"gitId":"illia_sitkov"},"content":"    public void dispatch(CommandCall commandCall) throws Exception {"},{"lineNumber":21,"author":{"gitId":"illia_sitkov"},"content":"        if (!accessCheckService.hasAccess(commandCall.getUserId(), Long.parseLong(commandCall.getArgs()[0]), ResourceType.valueOf(commandCall.getArgs()[1]), commandCall.getCommandId())) {"},{"lineNumber":22,"author":{"gitId":"illia_sitkov"},"content":"            throw new AccessDeniedException();"},{"lineNumber":23,"author":{"gitId":"illia_sitkov"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"illia_sitkov"},"content":"        handlers.get(commandCall.getCommandId()).handle(commandCall);"},{"lineNumber":25,"author":{"gitId":"illia_sitkov"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":27,"author":{"gitId":"illia_sitkov"},"content":"}"}],"authorContributionMap":{"illia_sitkov":27}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/commandHandlers/BanHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vdzhos"},"content":"package edu.kmaooad.commandHandlers;"},{"lineNumber":2,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":3,"author":{"gitId":"vdzhos"},"content":"import edu.kmaooad.events.HandlerEvent;"},{"lineNumber":4,"author":{"gitId":"vdzhos"},"content":"import edu.kmaooad.models.IssuerType;"},{"lineNumber":5,"author":{"gitId":"vdzhos"},"content":"import edu.kmaooad.processing.CommandCall;"},{"lineNumber":6,"author":{"gitId":"vdzhos"},"content":"import edu.kmaooad.services.interfaces.BanDepartmentService;"},{"lineNumber":7,"author":{"gitId":"vdzhos"},"content":"import edu.kmaooad.services.interfaces.BanOrganizationService;"},{"lineNumber":8,"author":{"gitId":"vdzhos"},"content":"import edu.kmaooad.services.interfaces.BanUserService;"},{"lineNumber":9,"author":{"gitId":"vdzhos"},"content":"import lombok.AllArgsConstructor;"},{"lineNumber":10,"author":{"gitId":"vdzhos"},"content":"import org.springframework.context.ApplicationEventPublisher;"},{"lineNumber":11,"author":{"gitId":"vdzhos"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":12,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":13,"author":{"gitId":"vdzhos"},"content":"@Component"},{"lineNumber":14,"author":{"gitId":"vdzhos"},"content":"@AllArgsConstructor"},{"lineNumber":15,"author":{"gitId":"vdzhos"},"content":"public class BanHandler implements CommandHandler{"},{"lineNumber":16,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":17,"author":{"gitId":"vdzhos"},"content":"    private BanUserService banUserService;"},{"lineNumber":18,"author":{"gitId":"vdzhos"},"content":"    private BanDepartmentService banDepartmentService;"},{"lineNumber":19,"author":{"gitId":"vdzhos"},"content":"    private BanOrganizationService banOrganizationService;"},{"lineNumber":20,"author":{"gitId":"vdzhos"},"content":"    private ApplicationEventPublisher applicationEventPublisher;"},{"lineNumber":21,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":22,"author":{"gitId":"vdzhos"},"content":"    /*"},{"lineNumber":23,"author":{"gitId":"vdzhos"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"vdzhos"},"content":"     * Command:"},{"lineNumber":25,"author":{"gitId":"vdzhos"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"vdzhos"},"content":"     * ban \u003cissuerType\u003e \u003cissuerId\u003e"},{"lineNumber":27,"author":{"gitId":"vdzhos"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"vdzhos"},"content":"     * */"},{"lineNumber":29,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":30,"author":{"gitId":"vdzhos"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"vdzhos"},"content":"    public void handle(CommandCall commandCall) throws Exception {"},{"lineNumber":32,"author":{"gitId":"vdzhos"},"content":"        String[] args \u003d commandCall.getArgs();"},{"lineNumber":33,"author":{"gitId":"vdzhos"},"content":"        IssuerType issuerType \u003d IssuerType.valueOf(args[0]);"},{"lineNumber":34,"author":{"gitId":"vdzhos"},"content":"        Long issuerId \u003d Long.parseLong(args[1]);"},{"lineNumber":35,"author":{"gitId":"vdzhos"},"content":"        String issuer \u003d \"\";"},{"lineNumber":36,"author":{"gitId":"vdzhos"},"content":"        switch (issuerType) {"},{"lineNumber":37,"author":{"gitId":"vdzhos"},"content":"            case USER:"},{"lineNumber":38,"author":{"gitId":"vdzhos"},"content":"                issuer \u003d \"User\";"},{"lineNumber":39,"author":{"gitId":"vdzhos"},"content":"                if(banUserService.isUserBanned(issuerId)) {"},{"lineNumber":40,"author":{"gitId":"vdzhos"},"content":"                    throw new Exception(\"This user is already banned!\");"},{"lineNumber":41,"author":{"gitId":"vdzhos"},"content":"                } else {"},{"lineNumber":42,"author":{"gitId":"vdzhos"},"content":"                    banUserService.addBanForUser(issuerId);"},{"lineNumber":43,"author":{"gitId":"vdzhos"},"content":"                }"},{"lineNumber":44,"author":{"gitId":"vdzhos"},"content":"                break;"},{"lineNumber":45,"author":{"gitId":"vdzhos"},"content":"            case DEPARTMENT:"},{"lineNumber":46,"author":{"gitId":"vdzhos"},"content":"                issuer \u003d \"Department\";"},{"lineNumber":47,"author":{"gitId":"vdzhos"},"content":"                if(banDepartmentService.isDepartmentBanned(issuerId)) {"},{"lineNumber":48,"author":{"gitId":"vdzhos"},"content":"                    throw new Exception(\"This department is already banned!\");"},{"lineNumber":49,"author":{"gitId":"vdzhos"},"content":"                } else {"},{"lineNumber":50,"author":{"gitId":"vdzhos"},"content":"                    banDepartmentService.addBanForDepartment(issuerId);"},{"lineNumber":51,"author":{"gitId":"vdzhos"},"content":"                }"},{"lineNumber":52,"author":{"gitId":"vdzhos"},"content":"                break;"},{"lineNumber":53,"author":{"gitId":"vdzhos"},"content":"            case ORGANIZATION:"},{"lineNumber":54,"author":{"gitId":"vdzhos"},"content":"                issuer \u003d \"Organization\";"},{"lineNumber":55,"author":{"gitId":"vdzhos"},"content":"                if(banOrganizationService.isOrganizationBanned(issuerId)) {"},{"lineNumber":56,"author":{"gitId":"vdzhos"},"content":"                    throw new Exception(\"This organization is already banned!\");"},{"lineNumber":57,"author":{"gitId":"vdzhos"},"content":"                } else {"},{"lineNumber":58,"author":{"gitId":"vdzhos"},"content":"                    banOrganizationService.addBanForOrganization(issuerId);"},{"lineNumber":59,"author":{"gitId":"vdzhos"},"content":"                }"},{"lineNumber":60,"author":{"gitId":"vdzhos"},"content":"                break;"},{"lineNumber":61,"author":{"gitId":"vdzhos"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"vdzhos"},"content":"        applicationEventPublisher.publishEvent(new HandlerEvent(issuer + \" banned\", commandCall.getChatId()));"},{"lineNumber":63,"author":{"gitId":"vdzhos"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":65,"author":{"gitId":"vdzhos"},"content":"}"}],"authorContributionMap":{"vdzhos":65}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/commandHandlers/CommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"illia_sitkov"},"content":"package edu.kmaooad.commandHandlers;"},{"lineNumber":2,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":3,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.processing.CommandCall;"},{"lineNumber":4,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":5,"author":{"gitId":"illia_sitkov"},"content":"public interface CommandHandler {"},{"lineNumber":6,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":7,"author":{"gitId":"illia_sitkov"},"content":"    void handle(CommandCall commandCall) throws Exception;"},{"lineNumber":8,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":9,"author":{"gitId":"illia_sitkov"},"content":"}"}],"authorContributionMap":{"illia_sitkov":9}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/commandHandlers/CreateAccessRuleHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"illia_sitkov"},"content":"package edu.kmaooad.commandHandlers;"},{"lineNumber":2,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":3,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.events.HandlerEvent;"},{"lineNumber":4,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.models.Command;"},{"lineNumber":5,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.models.IssuerType;"},{"lineNumber":6,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.models.Resource;"},{"lineNumber":7,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.models.ResourceType;"},{"lineNumber":8,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.processing.CommandCall;"},{"lineNumber":9,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.services.interfaces.AccessRuleService;"},{"lineNumber":10,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.services.interfaces.CommandService;"},{"lineNumber":11,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.services.interfaces.ResourceService;"},{"lineNumber":12,"author":{"gitId":"illia_sitkov"},"content":"import lombok.AllArgsConstructor;"},{"lineNumber":13,"author":{"gitId":"illia_sitkov"},"content":"import org.springframework.context.ApplicationEventPublisher;"},{"lineNumber":14,"author":{"gitId":"illia_sitkov"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":15,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":16,"author":{"gitId":"illia_sitkov"},"content":"@Component"},{"lineNumber":17,"author":{"gitId":"illia_sitkov"},"content":"@AllArgsConstructor"},{"lineNumber":18,"author":{"gitId":"illia_sitkov"},"content":"public class CreateAccessRuleHandler implements CommandHandler {"},{"lineNumber":19,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":20,"author":{"gitId":"illia_sitkov"},"content":"    private AccessRuleService accessRuleService;"},{"lineNumber":21,"author":{"gitId":"illia_sitkov"},"content":"    private CommandService commandService;"},{"lineNumber":22,"author":{"gitId":"illia_sitkov"},"content":"    private ResourceService resourceService;"},{"lineNumber":23,"author":{"gitId":"illia_sitkov"},"content":"    private ApplicationEventPublisher applicationEventPublisher;"},{"lineNumber":24,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":25,"author":{"gitId":"illia_sitkov"},"content":"    /*"},{"lineNumber":26,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":27,"author":{"gitId":"illia_sitkov"},"content":"    command looks something like:"},{"lineNumber":28,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":29,"author":{"gitId":"illia_sitkov"},"content":"                     resourceId  resourceType  ...args"},{"lineNumber":30,"author":{"gitId":"illia_sitkov"},"content":"    createAccessRule \u003cissuerId\u003e \u003cissuerType\u003e \u003crealResourceId\u003e \u003crealResourceType\u003e \u003ccommandText\u003e \u003callow|deny\u003e"},{"lineNumber":31,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":32,"author":{"gitId":"illia_sitkov"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":34,"author":{"gitId":"illia_sitkov"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"illia_sitkov"},"content":"    public void handle(CommandCall commandCall) throws Exception {"},{"lineNumber":36,"author":{"gitId":"illia_sitkov"},"content":"        String[] args \u003d commandCall.getArgs();"},{"lineNumber":37,"author":{"gitId":"illia_sitkov"},"content":"        Long issuerId \u003d Long.parseLong(args[0]);"},{"lineNumber":38,"author":{"gitId":"illia_sitkov"},"content":"        IssuerType issuerType \u003d IssuerType.valueOf(args[1]);"},{"lineNumber":39,"author":{"gitId":"illia_sitkov"},"content":"        Long realResourceId \u003d Long.parseLong(args[2]);"},{"lineNumber":40,"author":{"gitId":"illia_sitkov"},"content":"        ResourceType realResourceType \u003d ResourceType.valueOf(args[3]);"},{"lineNumber":41,"author":{"gitId":"illia_sitkov"},"content":"        String commandText \u003d args[4];"},{"lineNumber":42,"author":{"gitId":"illia_sitkov"},"content":"        boolean allow \u003d Boolean.parseBoolean(args[5]);"},{"lineNumber":43,"author":{"gitId":"illia_sitkov"},"content":"        Command command \u003d commandService.getCommandByName(commandText);"},{"lineNumber":44,"author":{"gitId":"illia_sitkov"},"content":"        Resource resource \u003d resourceService.getResourceByRealIdAndType(realResourceId, realResourceType);"},{"lineNumber":45,"author":{"gitId":"illia_sitkov"},"content":"        accessRuleService.upsert(issuerId, issuerType, resource.getId(), command.getId(), allow);"},{"lineNumber":46,"author":{"gitId":"illia_sitkov"},"content":"        applicationEventPublisher.publishEvent(new HandlerEvent(\"Access rule created\", commandCall.getChatId()));"},{"lineNumber":47,"author":{"gitId":"illia_sitkov"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":49,"author":{"gitId":"illia_sitkov"},"content":"}"}],"authorContributionMap":{"illia_sitkov":49}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/commandHandlers/DeleteAccessRuleHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DanilAndriychenko"},"content":"package edu.kmaooad.commandHandlers;"},{"lineNumber":2,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":3,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.events.HandlerEvent;"},{"lineNumber":4,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.exceptions.NotFoundException;"},{"lineNumber":5,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.models.Command;"},{"lineNumber":6,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.models.IssuerType;"},{"lineNumber":7,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.models.Resource;"},{"lineNumber":8,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.models.ResourceType;"},{"lineNumber":9,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.processing.CommandCall;"},{"lineNumber":10,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.services.interfaces.AccessRuleService;"},{"lineNumber":11,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.services.interfaces.CommandService;"},{"lineNumber":12,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.services.interfaces.ResourceService;"},{"lineNumber":13,"author":{"gitId":"DanilAndriychenko"},"content":"import lombok.AllArgsConstructor;"},{"lineNumber":14,"author":{"gitId":"DanilAndriychenko"},"content":"import org.springframework.context.ApplicationEventPublisher;"},{"lineNumber":15,"author":{"gitId":"DanilAndriychenko"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":16,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":17,"author":{"gitId":"DanilAndriychenko"},"content":"@Component"},{"lineNumber":18,"author":{"gitId":"DanilAndriychenko"},"content":"@AllArgsConstructor"},{"lineNumber":19,"author":{"gitId":"DanilAndriychenko"},"content":"public class DeleteAccessRuleHandler implements CommandHandler{"},{"lineNumber":20,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":21,"author":{"gitId":"DanilAndriychenko"},"content":"    private AccessRuleService accessRuleService;"},{"lineNumber":22,"author":{"gitId":"DanilAndriychenko"},"content":"    private CommandService commandService;"},{"lineNumber":23,"author":{"gitId":"DanilAndriychenko"},"content":"    private ResourceService resourceService;"},{"lineNumber":24,"author":{"gitId":"DanilAndriychenko"},"content":"    private ApplicationEventPublisher applicationEventPublisher;"},{"lineNumber":25,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":26,"author":{"gitId":"DanilAndriychenko"},"content":"    /*"},{"lineNumber":27,"author":{"gitId":"DanilAndriychenko"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"DanilAndriychenko"},"content":"     * Command:"},{"lineNumber":29,"author":{"gitId":"DanilAndriychenko"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"DanilAndriychenko"},"content":"     * deleteAccessRule \u003cissuerId\u003e \u003cissuerType\u003e \u003crealResourceId\u003e \u003crealResourceType\u003e \u003ccommandText\u003e"},{"lineNumber":31,"author":{"gitId":"DanilAndriychenko"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"DanilAndriychenko"},"content":"     * */"},{"lineNumber":33,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":34,"author":{"gitId":"DanilAndriychenko"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"DanilAndriychenko"},"content":"    public void handle(CommandCall commandCall) throws Exception {"},{"lineNumber":36,"author":{"gitId":"DanilAndriychenko"},"content":"        String[] args \u003d commandCall.getArgs();"},{"lineNumber":37,"author":{"gitId":"DanilAndriychenko"},"content":"        Long issuerId \u003d Long.parseLong(args[0]);"},{"lineNumber":38,"author":{"gitId":"DanilAndriychenko"},"content":"        IssuerType issuerType \u003d IssuerType.valueOf(args[1]);"},{"lineNumber":39,"author":{"gitId":"DanilAndriychenko"},"content":"        Long realResourceId \u003d Long.parseLong(args[2]);"},{"lineNumber":40,"author":{"gitId":"DanilAndriychenko"},"content":"        ResourceType realResourceType \u003d ResourceType.valueOf(args[3]);"},{"lineNumber":41,"author":{"gitId":"DanilAndriychenko"},"content":"        String commandText \u003d args[4];"},{"lineNumber":42,"author":{"gitId":"DanilAndriychenko"},"content":"        Command command \u003d commandService.getCommandByName(commandText);"},{"lineNumber":43,"author":{"gitId":"DanilAndriychenko"},"content":"        Resource resource \u003d resourceService.getResourceByRealIdAndType(realResourceId, realResourceType);"},{"lineNumber":44,"author":{"gitId":"DanilAndriychenko"},"content":"        if(!accessRuleService.existsById(issuerId, issuerType, resource.getId(), command.getId())){"},{"lineNumber":45,"author":{"gitId":"DanilAndriychenko"},"content":"            throw new NotFoundException(\"Access Rule\");"},{"lineNumber":46,"author":{"gitId":"DanilAndriychenko"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"DanilAndriychenko"},"content":"        accessRuleService.deleteById(issuerId, issuerType, resource.getId(), command.getId());"},{"lineNumber":48,"author":{"gitId":"DanilAndriychenko"},"content":"        applicationEventPublisher.publishEvent(new HandlerEvent(\"Access rule deleted\", commandCall.getChatId()));"},{"lineNumber":49,"author":{"gitId":"DanilAndriychenko"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":51,"author":{"gitId":"DanilAndriychenko"},"content":"}"}],"authorContributionMap":{"DanilAndriychenko":51}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/commandHandlers/OtherCommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Iryna"},"content":"package edu.kmaooad.commandHandlers;"},{"lineNumber":2,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":3,"author":{"gitId":"Iryna"},"content":"import edu.kmaooad.apiCommunication.OtherMicroservicesWebClient;"},{"lineNumber":4,"author":{"gitId":"Hlib Kalinichev"},"content":"import edu.kmaooad.events.HandlerEvent;"},{"lineNumber":5,"author":{"gitId":"Iryna"},"content":"import edu.kmaooad.models.Command;"},{"lineNumber":6,"author":{"gitId":"Iryna"},"content":"import edu.kmaooad.processing.CommandCall;"},{"lineNumber":7,"author":{"gitId":"Iryna"},"content":"import edu.kmaooad.services.interfaces.CommandService;"},{"lineNumber":8,"author":{"gitId":"Hlib Kalinichev"},"content":"import org.springframework.context.ApplicationEventPublisher;"},{"lineNumber":9,"author":{"gitId":"Iryna"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":10,"author":{"gitId":"Iryna"},"content":"import reactor.core.publisher.Mono;"},{"lineNumber":11,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":12,"author":{"gitId":"Iryna"},"content":"@Component"},{"lineNumber":13,"author":{"gitId":"Iryna"},"content":"public class OtherCommandHandler implements CommandHandler{"},{"lineNumber":14,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":15,"author":{"gitId":"Iryna"},"content":"    private final CommandService commandService;"},{"lineNumber":16,"author":{"gitId":"Iryna"},"content":"    private final OtherMicroservicesWebClient otherMicroservicesWebClient;"},{"lineNumber":17,"author":{"gitId":"Hlib Kalinichev"},"content":"    private final ApplicationEventPublisher applicationEventPublisher;"},{"lineNumber":18,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":19,"author":{"gitId":"Iryna"},"content":"    public OtherCommandHandler(CommandService commandService, OtherMicroservicesWebClient otherMicroservicesWebClient, ApplicationEventPublisher applicationEventPublisher) {"},{"lineNumber":20,"author":{"gitId":"Iryna"},"content":"        this.commandService \u003d commandService;"},{"lineNumber":21,"author":{"gitId":"Iryna"},"content":"        this.otherMicroservicesWebClient \u003d otherMicroservicesWebClient;"},{"lineNumber":22,"author":{"gitId":"Hlib Kalinichev"},"content":"        this.applicationEventPublisher \u003d applicationEventPublisher;"},{"lineNumber":23,"author":{"gitId":"Iryna"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":25,"author":{"gitId":"Iryna"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"Iryna"},"content":"    public void handle(CommandCall commandCall) {"},{"lineNumber":27,"author":{"gitId":"Iryna"},"content":"        Command command \u003d commandService.getCommandById(commandCall.getCommandId());"},{"lineNumber":28,"author":{"gitId":"Iryna"},"content":"        String functionUrl \u003d command.getFunctionUrl();"},{"lineNumber":29,"author":{"gitId":"Iryna"},"content":"        String fullCommand \u003d command.getName() + \" \" + String.join(\" \", commandCall.getArgs());"},{"lineNumber":30,"author":{"gitId":"Iryna"},"content":"        Mono\u003cString\u003e response \u003d this.otherMicroservicesWebClient.sendPostRequest(functionUrl, fullCommand);"},{"lineNumber":31,"author":{"gitId":"Iryna"},"content":"        response.subscribe(value -\u003e {"},{"lineNumber":32,"author":{"gitId":"Iryna"},"content":"            System.out.println(\"Got response: \" + value);"},{"lineNumber":33,"author":{"gitId":"Hlib Kalinichev"},"content":"            applicationEventPublisher.publishEvent(new HandlerEvent(value, commandCall.getChatId()));"},{"lineNumber":34,"author":{"gitId":"Iryna"},"content":"        });"},{"lineNumber":35,"author":{"gitId":"Iryna"},"content":"        System.out.println(\"Command sent - \" + command.getName());"},{"lineNumber":36,"author":{"gitId":"Hlib Kalinichev"},"content":"        applicationEventPublisher.publishEvent(new HandlerEvent(\"Command \" + command.getName() + \" being processed..\", commandCall.getChatId()));"},{"lineNumber":37,"author":{"gitId":"Iryna"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":39,"author":{"gitId":"Iryna"},"content":"}"}],"authorContributionMap":{"Hlib Kalinichev":6,"Iryna":33}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/commandHandlers/UnbanHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vdzhos"},"content":"package edu.kmaooad.commandHandlers;"},{"lineNumber":2,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":3,"author":{"gitId":"vdzhos"},"content":"import edu.kmaooad.events.HandlerEvent;"},{"lineNumber":4,"author":{"gitId":"vdzhos"},"content":"import edu.kmaooad.models.IssuerType;"},{"lineNumber":5,"author":{"gitId":"vdzhos"},"content":"import edu.kmaooad.processing.CommandCall;"},{"lineNumber":6,"author":{"gitId":"vdzhos"},"content":"import edu.kmaooad.services.interfaces.BanDepartmentService;"},{"lineNumber":7,"author":{"gitId":"vdzhos"},"content":"import edu.kmaooad.services.interfaces.BanOrganizationService;"},{"lineNumber":8,"author":{"gitId":"vdzhos"},"content":"import edu.kmaooad.services.interfaces.BanUserService;"},{"lineNumber":9,"author":{"gitId":"vdzhos"},"content":"import lombok.AllArgsConstructor;"},{"lineNumber":10,"author":{"gitId":"vdzhos"},"content":"import org.springframework.context.ApplicationEventPublisher;"},{"lineNumber":11,"author":{"gitId":"vdzhos"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":12,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":13,"author":{"gitId":"vdzhos"},"content":"@Component"},{"lineNumber":14,"author":{"gitId":"vdzhos"},"content":"@AllArgsConstructor"},{"lineNumber":15,"author":{"gitId":"vdzhos"},"content":"public class UnbanHandler implements CommandHandler{"},{"lineNumber":16,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":17,"author":{"gitId":"vdzhos"},"content":"    private BanUserService banUserService;"},{"lineNumber":18,"author":{"gitId":"vdzhos"},"content":"    private BanDepartmentService banDepartmentService;"},{"lineNumber":19,"author":{"gitId":"vdzhos"},"content":"    private BanOrganizationService banOrganizationService;"},{"lineNumber":20,"author":{"gitId":"vdzhos"},"content":"    private ApplicationEventPublisher applicationEventPublisher;"},{"lineNumber":21,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":22,"author":{"gitId":"vdzhos"},"content":"    /*"},{"lineNumber":23,"author":{"gitId":"vdzhos"},"content":"    *"},{"lineNumber":24,"author":{"gitId":"vdzhos"},"content":"    * Command:"},{"lineNumber":25,"author":{"gitId":"vdzhos"},"content":"    *"},{"lineNumber":26,"author":{"gitId":"vdzhos"},"content":"    * unban \u003cissuerType\u003e \u003cissuerId\u003e"},{"lineNumber":27,"author":{"gitId":"vdzhos"},"content":"    *"},{"lineNumber":28,"author":{"gitId":"vdzhos"},"content":"    * */"},{"lineNumber":29,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":30,"author":{"gitId":"vdzhos"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"vdzhos"},"content":"    public void handle(CommandCall commandCall) throws Exception {"},{"lineNumber":32,"author":{"gitId":"vdzhos"},"content":"        String[] args \u003d commandCall.getArgs();"},{"lineNumber":33,"author":{"gitId":"vdzhos"},"content":"        IssuerType issuerType \u003d IssuerType.valueOf(args[0]);"},{"lineNumber":34,"author":{"gitId":"vdzhos"},"content":"        Long issuerId \u003d Long.parseLong(args[1]);"},{"lineNumber":35,"author":{"gitId":"vdzhos"},"content":"        String issuer \u003d \"\";"},{"lineNumber":36,"author":{"gitId":"vdzhos"},"content":"        switch (issuerType) {"},{"lineNumber":37,"author":{"gitId":"vdzhos"},"content":"            case USER:"},{"lineNumber":38,"author":{"gitId":"vdzhos"},"content":"                issuer \u003d \"User\";"},{"lineNumber":39,"author":{"gitId":"vdzhos"},"content":"                if(!banUserService.isUserBanned(issuerId)) {"},{"lineNumber":40,"author":{"gitId":"vdzhos"},"content":"                    throw new Exception(\"This user is not banned!\");"},{"lineNumber":41,"author":{"gitId":"vdzhos"},"content":"                } else {"},{"lineNumber":42,"author":{"gitId":"vdzhos"},"content":"                    banUserService.deleteBanForUser(issuerId);"},{"lineNumber":43,"author":{"gitId":"vdzhos"},"content":"                }"},{"lineNumber":44,"author":{"gitId":"vdzhos"},"content":"                break;"},{"lineNumber":45,"author":{"gitId":"vdzhos"},"content":"            case DEPARTMENT:"},{"lineNumber":46,"author":{"gitId":"vdzhos"},"content":"                issuer \u003d \"Department\";"},{"lineNumber":47,"author":{"gitId":"vdzhos"},"content":"                if(!banDepartmentService.isDepartmentBanned(issuerId)) {"},{"lineNumber":48,"author":{"gitId":"vdzhos"},"content":"                    throw new Exception(\"This department is not banned!\");"},{"lineNumber":49,"author":{"gitId":"vdzhos"},"content":"                } else {"},{"lineNumber":50,"author":{"gitId":"vdzhos"},"content":"                    banDepartmentService.deleteBanForDepartment(issuerId);"},{"lineNumber":51,"author":{"gitId":"vdzhos"},"content":"                }"},{"lineNumber":52,"author":{"gitId":"vdzhos"},"content":"                break;"},{"lineNumber":53,"author":{"gitId":"vdzhos"},"content":"            case ORGANIZATION:"},{"lineNumber":54,"author":{"gitId":"vdzhos"},"content":"                issuer \u003d \"Organization\";"},{"lineNumber":55,"author":{"gitId":"vdzhos"},"content":"                if(!banOrganizationService.isOrganizationBanned(issuerId)) {"},{"lineNumber":56,"author":{"gitId":"vdzhos"},"content":"                    throw new Exception(\"This organization is not banned!\");"},{"lineNumber":57,"author":{"gitId":"vdzhos"},"content":"                } else {"},{"lineNumber":58,"author":{"gitId":"vdzhos"},"content":"                    banOrganizationService.deleteBanForOrganization(issuerId);"},{"lineNumber":59,"author":{"gitId":"vdzhos"},"content":"                }"},{"lineNumber":60,"author":{"gitId":"vdzhos"},"content":"                break;"},{"lineNumber":61,"author":{"gitId":"vdzhos"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"vdzhos"},"content":"        applicationEventPublisher.publishEvent(new HandlerEvent(issuer + \" unbanned\", commandCall.getChatId()));"},{"lineNumber":63,"author":{"gitId":"vdzhos"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":65,"author":{"gitId":"vdzhos"},"content":"}"}],"authorContributionMap":{"vdzhos":65}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/commandHandlers/UpdateAccessRuleHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DanilAndriychenko"},"content":"package edu.kmaooad.commandHandlers;"},{"lineNumber":2,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":3,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.events.HandlerEvent;"},{"lineNumber":4,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.exceptions.NotFoundException;"},{"lineNumber":5,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.models.Command;"},{"lineNumber":6,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.models.IssuerType;"},{"lineNumber":7,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.models.Resource;"},{"lineNumber":8,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.models.ResourceType;"},{"lineNumber":9,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.processing.CommandCall;"},{"lineNumber":10,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.services.interfaces.AccessRuleService;"},{"lineNumber":11,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.services.interfaces.CommandService;"},{"lineNumber":12,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.services.interfaces.ResourceService;"},{"lineNumber":13,"author":{"gitId":"DanilAndriychenko"},"content":"import lombok.AllArgsConstructor;"},{"lineNumber":14,"author":{"gitId":"DanilAndriychenko"},"content":"import org.springframework.context.ApplicationEventPublisher;"},{"lineNumber":15,"author":{"gitId":"DanilAndriychenko"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":16,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":17,"author":{"gitId":"DanilAndriychenko"},"content":"@Component"},{"lineNumber":18,"author":{"gitId":"DanilAndriychenko"},"content":"@AllArgsConstructor"},{"lineNumber":19,"author":{"gitId":"DanilAndriychenko"},"content":"public class UpdateAccessRuleHandler implements CommandHandler{"},{"lineNumber":20,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":21,"author":{"gitId":"DanilAndriychenko"},"content":"    private AccessRuleService accessRuleService;"},{"lineNumber":22,"author":{"gitId":"DanilAndriychenko"},"content":"    private CommandService commandService;"},{"lineNumber":23,"author":{"gitId":"DanilAndriychenko"},"content":"    private ResourceService resourceService;"},{"lineNumber":24,"author":{"gitId":"DanilAndriychenko"},"content":"    private ApplicationEventPublisher applicationEventPublisher;"},{"lineNumber":25,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":26,"author":{"gitId":"DanilAndriychenko"},"content":"    /*"},{"lineNumber":27,"author":{"gitId":"DanilAndriychenko"},"content":"    *"},{"lineNumber":28,"author":{"gitId":"DanilAndriychenko"},"content":"    * Command:"},{"lineNumber":29,"author":{"gitId":"DanilAndriychenko"},"content":"    *"},{"lineNumber":30,"author":{"gitId":"DanilAndriychenko"},"content":"    * updateAccessRule \u003cissuerId\u003e \u003cissuerType\u003e \u003crealResourceId\u003e \u003crealResourceType\u003e \u003ccommandText\u003e \u003callow|deny\u003e"},{"lineNumber":31,"author":{"gitId":"DanilAndriychenko"},"content":"    *"},{"lineNumber":32,"author":{"gitId":"DanilAndriychenko"},"content":"    * */"},{"lineNumber":33,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":34,"author":{"gitId":"DanilAndriychenko"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"DanilAndriychenko"},"content":"    public void handle(CommandCall commandCall) throws Exception {"},{"lineNumber":36,"author":{"gitId":"DanilAndriychenko"},"content":"        String[] args \u003d commandCall.getArgs();"},{"lineNumber":37,"author":{"gitId":"DanilAndriychenko"},"content":"        Long issuerId \u003d Long.parseLong(args[0]);"},{"lineNumber":38,"author":{"gitId":"DanilAndriychenko"},"content":"        IssuerType issuerType \u003d IssuerType.valueOf(args[1]);"},{"lineNumber":39,"author":{"gitId":"DanilAndriychenko"},"content":"        Long realResourceId \u003d Long.parseLong(args[2]);"},{"lineNumber":40,"author":{"gitId":"DanilAndriychenko"},"content":"        ResourceType realResourceType \u003d ResourceType.valueOf(args[3]);"},{"lineNumber":41,"author":{"gitId":"DanilAndriychenko"},"content":"        String commandText \u003d args[4];"},{"lineNumber":42,"author":{"gitId":"DanilAndriychenko"},"content":"        boolean allow \u003d Boolean.parseBoolean(args[5]);"},{"lineNumber":43,"author":{"gitId":"DanilAndriychenko"},"content":"        Command command \u003d commandService.getCommandByName(commandText);"},{"lineNumber":44,"author":{"gitId":"DanilAndriychenko"},"content":"        Resource resource \u003d resourceService.getResourceByRealIdAndType(realResourceId, realResourceType);"},{"lineNumber":45,"author":{"gitId":"DanilAndriychenko"},"content":"        if(!accessRuleService.existsById(issuerId, issuerType, resource.getId(), command.getId())){"},{"lineNumber":46,"author":{"gitId":"DanilAndriychenko"},"content":"            throw new NotFoundException(\"Access Rule\");"},{"lineNumber":47,"author":{"gitId":"DanilAndriychenko"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"DanilAndriychenko"},"content":"        accessRuleService.upsert(issuerId, issuerType, resource.getId(), command.getId(), allow);"},{"lineNumber":49,"author":{"gitId":"DanilAndriychenko"},"content":"        applicationEventPublisher.publishEvent(new HandlerEvent(\"Access rule updated\", commandCall.getChatId()));"},{"lineNumber":50,"author":{"gitId":"DanilAndriychenko"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":52,"author":{"gitId":"DanilAndriychenko"},"content":"}"}],"authorContributionMap":{"soloway24":4,"DanilAndriychenko":48}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/config/BeanConfiguration.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"illia_sitkov"},"content":"package edu.kmaooad.config;"},{"lineNumber":2,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":3,"author":{"gitId":"vdzhos"},"content":"import edu.kmaooad.commandHandlers.*;"},{"lineNumber":4,"author":{"gitId":"Iryna"},"content":"import lombok.AllArgsConstructor;"},{"lineNumber":5,"author":{"gitId":"illia_sitkov"},"content":"import org.springframework.context.annotation.Bean;"},{"lineNumber":6,"author":{"gitId":"illia_sitkov"},"content":"import org.springframework.context.annotation.Configuration;"},{"lineNumber":7,"author":{"gitId":"Hlib Kalinichev"},"content":"import org.springframework.scheduling.annotation.EnableAsync;"},{"lineNumber":8,"author":{"gitId":"soloway24"},"content":"import org.springframework.web.reactive.function.client.WebClient;"},{"lineNumber":9,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":10,"author":{"gitId":"illia_sitkov"},"content":"import java.util.HashMap;"},{"lineNumber":11,"author":{"gitId":"illia_sitkov"},"content":"import java.util.Map;"},{"lineNumber":12,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":13,"author":{"gitId":"illia_sitkov"},"content":"@Configuration"},{"lineNumber":14,"author":{"gitId":"Hlib Kalinichev"},"content":"@EnableAsync"},{"lineNumber":15,"author":{"gitId":"Iryna"},"content":"@AllArgsConstructor"},{"lineNumber":16,"author":{"gitId":"illia_sitkov"},"content":"public class BeanConfiguration {"},{"lineNumber":17,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":18,"author":{"gitId":"soloway24"},"content":"    private static final String ORGANIZATIONS_URL \u003d \"\";"},{"lineNumber":19,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":20,"author":{"gitId":"illia_sitkov"},"content":"    @Bean"},{"lineNumber":21,"author":{"gitId":"vdzhos"},"content":"    public Map\u003cLong, CommandHandler\u003e getCommandHandlerMap(OtherCommandHandler otherCommandHandler,"},{"lineNumber":22,"author":{"gitId":"vdzhos"},"content":"                                                          CreateAccessRuleHandler createAccessRuleHandler,"},{"lineNumber":23,"author":{"gitId":"DanilAndriychenko"},"content":"                                                          UpdateAccessRuleHandler updateAccessRuleHandler,"},{"lineNumber":24,"author":{"gitId":"DanilAndriychenko"},"content":"                                                          DeleteAccessRuleHandler deleteAccessRuleHandler,"},{"lineNumber":25,"author":{"gitId":"vdzhos"},"content":"                                                          BanHandler banHandler,"},{"lineNumber":26,"author":{"gitId":"vdzhos"},"content":"                                                          UnbanHandler unbanHandler) {"},{"lineNumber":27,"author":{"gitId":"illia_sitkov"},"content":"        Map\u003cLong, CommandHandler\u003e map \u003d new HashMap\u003c\u003e() {"},{"lineNumber":28,"author":{"gitId":"illia_sitkov"},"content":"            @Override"},{"lineNumber":29,"author":{"gitId":"illia_sitkov"},"content":"            public CommandHandler get(Object key) {"},{"lineNumber":30,"author":{"gitId":"Iryna"},"content":"                return this.getOrDefault(key, otherCommandHandler);"},{"lineNumber":31,"author":{"gitId":"illia_sitkov"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"illia_sitkov"},"content":"        };"},{"lineNumber":33,"author":{"gitId":"illia_sitkov"},"content":"        map.put(0L, createAccessRuleHandler);"},{"lineNumber":34,"author":{"gitId":"DanilAndriychenko"},"content":"        map.put(1L, updateAccessRuleHandler);"},{"lineNumber":35,"author":{"gitId":"DanilAndriychenko"},"content":"        map.put(2L, deleteAccessRuleHandler);"},{"lineNumber":36,"author":{"gitId":"DanilAndriychenko"},"content":"        map.put(3L, banHandler);"},{"lineNumber":37,"author":{"gitId":"DanilAndriychenko"},"content":"        map.put(4L, unbanHandler);"},{"lineNumber":38,"author":{"gitId":"illia_sitkov"},"content":"        return map;"},{"lineNumber":39,"author":{"gitId":"illia_sitkov"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":41,"author":{"gitId":"soloway24"},"content":"    @Bean"},{"lineNumber":42,"author":{"gitId":"soloway24"},"content":"    public WebClient organizationsWebClient() {"},{"lineNumber":43,"author":{"gitId":"soloway24"},"content":"        return WebClient.builder().baseUrl(ORGANIZATIONS_URL).build();"},{"lineNumber":44,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"illia_sitkov"},"content":"}"}],"authorContributionMap":{"illia_sitkov":22,"soloway24":7,"Hlib Kalinichev":2,"vdzhos":5,"DanilAndriychenko":6,"Iryna":3}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/events/HandlerEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hlib Kalinichev"},"content":"package edu.kmaooad.events;"},{"lineNumber":2,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":3,"author":{"gitId":"Hlib Kalinichev"},"content":"import lombok.*;"},{"lineNumber":4,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":5,"author":{"gitId":"Hlib Kalinichev"},"content":"@Getter"},{"lineNumber":6,"author":{"gitId":"Hlib Kalinichev"},"content":"@Setter"},{"lineNumber":7,"author":{"gitId":"Hlib Kalinichev"},"content":"@AllArgsConstructor"},{"lineNumber":8,"author":{"gitId":"Hlib Kalinichev"},"content":"@NoArgsConstructor"},{"lineNumber":9,"author":{"gitId":"Hlib Kalinichev"},"content":"@EqualsAndHashCode"},{"lineNumber":10,"author":{"gitId":"Hlib Kalinichev"},"content":"public class HandlerEvent {"},{"lineNumber":11,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":12,"author":{"gitId":"Hlib Kalinichev"},"content":"    private String message;"},{"lineNumber":13,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":14,"author":{"gitId":"Hlib Kalinichev"},"content":"    private Long chatId;"},{"lineNumber":15,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":16,"author":{"gitId":"Hlib Kalinichev"},"content":"}"}],"authorContributionMap":{"Hlib Kalinichev":16}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/events/listeners/HandlerEventListener.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hlib Kalinichev"},"content":"package edu.kmaooad.events.listeners;"},{"lineNumber":2,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":3,"author":{"gitId":"Hlib Kalinichev"},"content":"import edu.kmaooad.apiCommunication.TelegramWebClient;"},{"lineNumber":4,"author":{"gitId":"Hlib Kalinichev"},"content":"import edu.kmaooad.events.HandlerEvent;"},{"lineNumber":5,"author":{"gitId":"Hlib Kalinichev"},"content":"import lombok.RequiredArgsConstructor;"},{"lineNumber":6,"author":{"gitId":"Hlib Kalinichev"},"content":"import org.springframework.context.event.EventListener;"},{"lineNumber":7,"author":{"gitId":"Hlib Kalinichev"},"content":"import org.springframework.scheduling.annotation.Async;"},{"lineNumber":8,"author":{"gitId":"Hlib Kalinichev"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":9,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":10,"author":{"gitId":"Hlib Kalinichev"},"content":"@Component"},{"lineNumber":11,"author":{"gitId":"Hlib Kalinichev"},"content":"@RequiredArgsConstructor"},{"lineNumber":12,"author":{"gitId":"Hlib Kalinichev"},"content":"public class HandlerEventListener {"},{"lineNumber":13,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":14,"author":{"gitId":"Hlib Kalinichev"},"content":"    private final TelegramWebClient tgClient;"},{"lineNumber":15,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":16,"author":{"gitId":"Hlib Kalinichev"},"content":"    @Async"},{"lineNumber":17,"author":{"gitId":"Hlib Kalinichev"},"content":"    @EventListener"},{"lineNumber":18,"author":{"gitId":"Hlib Kalinichev"},"content":"    public void onHandlerEvent(HandlerEvent e) {"},{"lineNumber":19,"author":{"gitId":"Hlib Kalinichev"},"content":"        tgClient.sendMessage(e.getMessage(), e.getChatId());"},{"lineNumber":20,"author":{"gitId":"Hlib Kalinichev"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":22,"author":{"gitId":"Hlib Kalinichev"},"content":"}"}],"authorContributionMap":{"Hlib Kalinichev":22}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/exceptions/AccessDeniedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"illia_sitkov"},"content":"package edu.kmaooad.exceptions;"},{"lineNumber":2,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":3,"author":{"gitId":"illia_sitkov"},"content":"public class AccessDeniedException extends Exception {"},{"lineNumber":4,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":5,"author":{"gitId":"illia_sitkov"},"content":"    public AccessDeniedException() {"},{"lineNumber":6,"author":{"gitId":"illia_sitkov"},"content":"        super(\"Access denied\");"},{"lineNumber":7,"author":{"gitId":"illia_sitkov"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"illia_sitkov"},"content":"}"}],"authorContributionMap":{"illia_sitkov":8}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/exceptions/NotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.exceptions;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class NotFoundException extends RuntimeException {"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public NotFoundException(String objectName) {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        super(\"Object \u0027\" + objectName +\"\u0027 not found by id\");"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":9,"author":{"gitId":"illia_sitkov"},"content":"    public NotFoundException(String objectName, String searchedBy) {"},{"lineNumber":10,"author":{"gitId":"illia_sitkov"},"content":"        super(\"Object \u0027\" + objectName +\"\u0027 not found by \"+searchedBy);"},{"lineNumber":11,"author":{"gitId":"illia_sitkov"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"illia_sitkov":4,"-":8}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/models/AccessRule.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.models;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import lombok.Getter;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.springframework.data.annotation.Id;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.springframework.data.mongodb.core.mapping.Document;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"@Getter"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@Document"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AccessRule {"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Id"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private AccessRuleCompositeKey id;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private boolean allowed;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AccessRule() {}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"soloway24"},"content":"    public AccessRule(Long issuerId, IssuerType issuerType, Long resourceId, Long commandId, boolean allowed) {"},{"lineNumber":18,"author":{"gitId":"soloway24"},"content":"        this.id \u003d new AccessRuleCompositeKey(issuerId, issuerType, resourceId, commandId);"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.allowed \u003d allowed;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"soloway24":2,"-":21}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/models/AccessRuleCompositeKey.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.models;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"soloway24"},"content":"import lombok.AllArgsConstructor;"},{"lineNumber":4,"author":{"gitId":"soloway24"},"content":"import lombok.EqualsAndHashCode;"},{"lineNumber":5,"author":{"gitId":"soloway24"},"content":"import lombok.Getter;"},{"lineNumber":6,"author":{"gitId":"soloway24"},"content":"import lombok.NoArgsConstructor;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"@Getter"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@AllArgsConstructor"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@NoArgsConstructor"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@EqualsAndHashCode"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AccessRuleCompositeKey {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Long issuerId;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private IssuerType issuerType;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private Long resourceId;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Long commandId;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"soloway24":4,"-":13}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/models/BannedDepartment.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.models;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import lombok.AllArgsConstructor;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import lombok.Getter;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import lombok.NoArgsConstructor;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import lombok.Setter;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.springframework.data.annotation.Id;"},{"lineNumber":8,"author":{"gitId":"Iryna"},"content":"import org.springframework.data.mongodb.core.mapping.Document;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"@Getter"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@Setter"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@AllArgsConstructor"},{"lineNumber":13,"author":{"gitId":"-"},"content":"@NoArgsConstructor"},{"lineNumber":14,"author":{"gitId":"Iryna"},"content":"@Document"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class BannedDepartment {"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Id"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Long id;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":17,"Iryna":2}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/models/BannedOrganization.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.models;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import lombok.AllArgsConstructor;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import lombok.Getter;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import lombok.NoArgsConstructor;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import lombok.Setter;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.springframework.data.annotation.Id;"},{"lineNumber":8,"author":{"gitId":"Iryna"},"content":"import org.springframework.data.mongodb.core.mapping.Document;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"@Getter"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@Setter"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@AllArgsConstructor"},{"lineNumber":13,"author":{"gitId":"-"},"content":"@NoArgsConstructor"},{"lineNumber":14,"author":{"gitId":"Iryna"},"content":"@Document"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class BannedOrganization {"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Id"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Long id;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":17,"Iryna":2}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/models/BannedUser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.models;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import lombok.AllArgsConstructor;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import lombok.Getter;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import lombok.NoArgsConstructor;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import lombok.Setter;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.springframework.data.annotation.Id;"},{"lineNumber":8,"author":{"gitId":"Iryna"},"content":"import org.springframework.data.mongodb.core.mapping.Document;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"@Getter"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@Setter"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@AllArgsConstructor"},{"lineNumber":13,"author":{"gitId":"-"},"content":"@NoArgsConstructor"},{"lineNumber":14,"author":{"gitId":"Iryna"},"content":"@Document"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class BannedUser {"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Id"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Long id;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":17,"Iryna":2}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/models/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.models;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import lombok.AllArgsConstructor;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import lombok.Getter;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import lombok.NoArgsConstructor;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import lombok.Setter;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.springframework.data.annotation.Id;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.springframework.data.mongodb.core.mapping.Document;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"@Getter"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@Setter"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@AllArgsConstructor"},{"lineNumber":13,"author":{"gitId":"-"},"content":"@NoArgsConstructor"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@Document"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Command {"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Id"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Long id;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private String name;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"illia_sitkov"},"content":"    // nullable"},{"lineNumber":23,"author":{"gitId":"illia_sitkov"},"content":"    private String functionUrl;"},{"lineNumber":24,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"illia_sitkov":3,"-":22}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/processing/CommandCall.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.processing;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import lombok.AllArgsConstructor;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import lombok.Getter;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import lombok.NoArgsConstructor;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import lombok.Setter;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"@Getter"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@Setter"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@AllArgsConstructor"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@NoArgsConstructor"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandCall {"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Long commandId;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"Hlib Kalinichev"},"content":"    private Long chatId;"},{"lineNumber":17,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Long userId;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private String[] args;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Hlib Kalinichev":2,"-":20}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/processing/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.processing;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import edu.kmaooad.models.BotUpdate;"},{"lineNumber":4,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.models.Command;"},{"lineNumber":5,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.services.interfaces.CommandService;"},{"lineNumber":6,"author":{"gitId":"illia_sitkov"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.springframework.stereotype.Service;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"@Service"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandParser {"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":15,"author":{"gitId":"illia_sitkov"},"content":"    @Autowired"},{"lineNumber":16,"author":{"gitId":"illia_sitkov"},"content":"    private CommandService commandService;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    //general processor (mediator) operates with (executes) CommandCall object (saves to stack, etc.)"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandCall parse(BotUpdate botUpdate) {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String text \u003d botUpdate.getMessage().getText();"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Long userId \u003d botUpdate.getMessage().getFrom().getId();"},{"lineNumber":22,"author":{"gitId":"Hlib Kalinichev"},"content":"        Long chatId \u003d botUpdate.getMessage().getChat().getId();"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String[] res \u003d text.split(\"\\\\s+\");"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        //retrieve commandId by commandName from commandService"},{"lineNumber":25,"author":{"gitId":"illia_sitkov"},"content":"        Command command \u003d this.commandService.getCommandByName(res[0]);"},{"lineNumber":26,"author":{"gitId":"illia_sitkov"},"content":"        return new CommandCall(command.getId(), chatId, userId, Arrays.copyOfRange(res, 1, res.length));"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"illia_sitkov":8,"Hlib Kalinichev":1,"-":20}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/repositories/CommandRepository.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.repositories;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import edu.kmaooad.models.Command;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.springframework.data.mongodb.repository.MongoRepository;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.springframework.stereotype.Repository;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"illia_sitkov"},"content":"import java.util.Optional;"},{"lineNumber":8,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"@Repository"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface CommandRepository extends MongoRepository\u003cCommand, Long\u003e {"},{"lineNumber":11,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":12,"author":{"gitId":"illia_sitkov"},"content":"    Optional\u003cCommand\u003e findCommandByName(String name);"},{"lineNumber":13,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"illia_sitkov":5,"-":9}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/repositories/ResourceRepository.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.repositories;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import edu.kmaooad.models.Resource;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import edu.kmaooad.models.ResourceCompositeField;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.springframework.data.mongodb.repository.MongoRepository;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.springframework.stereotype.Repository;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"illia_sitkov"},"content":"import java.util.Optional;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"@Repository"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ResourceRepository extends MongoRepository\u003cResource,Long\u003e {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    boolean existsByRealResource(ResourceCompositeField resourceCompositeField);"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"illia_sitkov"},"content":"    Optional\u003cResource\u003e findByRealResource(ResourceCompositeField resourceCompositeField);"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"illia_sitkov":2,"-":15}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/services/implementations/AccessCheckServiceImpl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.services.implementations;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import edu.kmaooad.apiCommunication.OrgsWebClient;"},{"lineNumber":4,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.exceptions.IncorrectResourceParamsException;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import edu.kmaooad.models.AccessRule;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import edu.kmaooad.models.IssuerType;"},{"lineNumber":7,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.models.ResourceType;"},{"lineNumber":8,"author":{"gitId":"Iryna"},"content":"import edu.kmaooad.services.interfaces.*;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import lombok.RequiredArgsConstructor;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.springframework.stereotype.Service;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"@Service"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@RequiredArgsConstructor"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AccessCheckServiceImpl implements AccessCheckService {"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"Iryna"},"content":"    private final BanUserService banUserService;"},{"lineNumber":19,"author":{"gitId":"Iryna"},"content":"    private final BanDepartmentService banDepartmentService;"},{"lineNumber":20,"author":{"gitId":"Iryna"},"content":"    private final BanOrganizationService banOrganizationService;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final AccessRuleService accessRuleService;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final OrgsWebClient orgsWebClient;"},{"lineNumber":23,"author":{"gitId":"soloway24"},"content":"    private final ResourceService resourceService;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"soloway24"},"content":"    public boolean hasAccess(Long userId, Long realResourceId, ResourceType resourceType, Long commandId)"},{"lineNumber":28,"author":{"gitId":"soloway24"},"content":"            throws IncorrectResourceParamsException {"},{"lineNumber":29,"author":{"gitId":"soloway24"},"content":"        Long resourceId \u003d resourceService.getResourceByRealIdAndType(realResourceId, resourceType).getId();"},{"lineNumber":30,"author":{"gitId":"soloway24"},"content":"        return hasAccess(userId, resourceId, commandId);"},{"lineNumber":31,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":33,"author":{"gitId":"soloway24"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"soloway24"},"content":"    public boolean hasAccess(Long userId, Long resourceId, Long commandId) throws IncorrectResourceParamsException {"},{"lineNumber":35,"author":{"gitId":"Iryna"},"content":"        if (banUserService.isUserBanned(userId)) {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Optional\u003cAccessRule\u003e userAccessRule \u003d accessRuleService"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .getById(userId, IssuerType.USER, resourceId, commandId);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (userAccessRule.isPresent()) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return userAccessRule.get().isAllowed();"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Long departmentId \u003d getUserDepartmentId(userId);"},{"lineNumber":46,"author":{"gitId":"Iryna"},"content":"        if (banDepartmentService.isDepartmentBanned(departmentId)) {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Optional\u003cAccessRule\u003e depAccessRule \u003d accessRuleService"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .getById(departmentId, IssuerType.DEPARTMENT, resourceId, commandId);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (depAccessRule.isPresent()) {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return depAccessRule.get().isAllowed();"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Long organisationId \u003d getUserOrganisationId(userId);"},{"lineNumber":57,"author":{"gitId":"Iryna"},"content":"        if (banOrganizationService.isOrganizationBanned(organisationId)) {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Optional\u003cAccessRule\u003e orgAccessRule \u003d accessRuleService"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .getById(organisationId, IssuerType.ORGANIZATION, resourceId, commandId);"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return orgAccessRule.map(AccessRule::isAllowed).orElse(false);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"soloway24"},"content":"    private Long getUserDepartmentId(Long userId) throws IncorrectResourceParamsException {"},{"lineNumber":67,"author":{"gitId":"soloway24"},"content":"        Long realDepId \u003d orgsWebClient.fetchUserDepartments(userId);"},{"lineNumber":68,"author":{"gitId":"soloway24"},"content":"        return resourceService.getResourceByRealIdAndType(realDepId, ResourceType.DEPARTMENT).getId();"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"soloway24"},"content":"    private Long getUserOrganisationId(Long userId) throws IncorrectResourceParamsException {"},{"lineNumber":72,"author":{"gitId":"soloway24"},"content":"        Long realOrgId \u003d orgsWebClient.fetchUserOrganizations(userId);"},{"lineNumber":73,"author":{"gitId":"soloway24"},"content":"        return resourceService.getResourceByRealIdAndType(realOrgId, ResourceType.ORGANIZATION).getId();"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"illia_sitkov":1,"soloway24":16,"-":52,"Iryna":7}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/services/implementations/AccessRuleServiceImpl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.services.implementations;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import edu.kmaooad.models.AccessRule;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import edu.kmaooad.models.AccessRuleCompositeKey;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import edu.kmaooad.models.IssuerType;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import edu.kmaooad.repositories.AccessRuleRepository;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import edu.kmaooad.services.interfaces.AccessRuleService;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import lombok.RequiredArgsConstructor;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.springframework.stereotype.Service;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Optional;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"@Service"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@RequiredArgsConstructor"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AccessRuleServiceImpl implements AccessRuleService {"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final AccessRuleRepository accessRuleRepository;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public AccessRule upsert(Long issuerId, IssuerType issuerType, Long resourceId, Long commandId, boolean allowed) {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return accessRuleRepository.save(new AccessRule(issuerId, issuerType, resourceId, commandId, allowed));"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void deleteById(Long issuerId, IssuerType issuerType, Long resourceId, Long commandId) {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        accessRuleRepository.deleteById(new AccessRuleCompositeKey(issuerId, issuerType, resourceId, commandId));"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Optional\u003cAccessRule\u003e getById(Long issuerId, IssuerType issuerType, Long resourceId, Long commandId) {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return accessRuleRepository.findById(new AccessRuleCompositeKey(issuerId, issuerType, resourceId, commandId));"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":34,"author":{"gitId":"DanilAndriychenko"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"DanilAndriychenko"},"content":"    public boolean existsById(Long issuerId, IssuerType issuerType, Long resourceId, Long commandId) {"},{"lineNumber":36,"author":{"gitId":"DanilAndriychenko"},"content":"        return accessRuleRepository.existsById(new AccessRuleCompositeKey(issuerId,issuerType,resourceId,commandId));"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"DanilAndriychenko":4,"-":34}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/services/implementations/BanDepartmentServiceImpl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Iryna"},"content":"package edu.kmaooad.services.implementations;"},{"lineNumber":2,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":3,"author":{"gitId":"Iryna"},"content":"import edu.kmaooad.models.BannedDepartment;"},{"lineNumber":4,"author":{"gitId":"Iryna"},"content":"import edu.kmaooad.repositories.BannedDepartmentRepository;"},{"lineNumber":5,"author":{"gitId":"Iryna"},"content":"import edu.kmaooad.services.interfaces.BanDepartmentService;"},{"lineNumber":6,"author":{"gitId":"Iryna"},"content":"import lombok.RequiredArgsConstructor;"},{"lineNumber":7,"author":{"gitId":"Iryna"},"content":"import org.springframework.stereotype.Service;"},{"lineNumber":8,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":9,"author":{"gitId":"Iryna"},"content":"@Service"},{"lineNumber":10,"author":{"gitId":"Iryna"},"content":"@RequiredArgsConstructor"},{"lineNumber":11,"author":{"gitId":"Iryna"},"content":"public class BanDepartmentServiceImpl implements BanDepartmentService {"},{"lineNumber":12,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":13,"author":{"gitId":"Iryna"},"content":"    private final BannedDepartmentRepository bannedDepartmentRepository;"},{"lineNumber":14,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":15,"author":{"gitId":"Iryna"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"Iryna"},"content":"    public void addBanForDepartment(Long departmentId) {"},{"lineNumber":17,"author":{"gitId":"Iryna"},"content":"        bannedDepartmentRepository.save(new BannedDepartment(departmentId));"},{"lineNumber":18,"author":{"gitId":"Iryna"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":20,"author":{"gitId":"Iryna"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"Iryna"},"content":"    public void deleteBanForDepartment(Long departmentId) {"},{"lineNumber":22,"author":{"gitId":"Iryna"},"content":"        bannedDepartmentRepository.deleteById(departmentId);"},{"lineNumber":23,"author":{"gitId":"Iryna"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":25,"author":{"gitId":"Iryna"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"Iryna"},"content":"    public boolean isDepartmentBanned(Long departmentId) {"},{"lineNumber":27,"author":{"gitId":"Iryna"},"content":"        return bannedDepartmentRepository.existsById(departmentId);"},{"lineNumber":28,"author":{"gitId":"Iryna"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":30,"author":{"gitId":"Iryna"},"content":"}"}],"authorContributionMap":{"Iryna":30}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/services/implementations/BanOrganizationServiceImpl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Iryna"},"content":"package edu.kmaooad.services.implementations;"},{"lineNumber":2,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":3,"author":{"gitId":"Iryna"},"content":"import edu.kmaooad.models.BannedOrganization;"},{"lineNumber":4,"author":{"gitId":"Iryna"},"content":"import edu.kmaooad.repositories.BannedOrganizationRepository;"},{"lineNumber":5,"author":{"gitId":"Iryna"},"content":"import edu.kmaooad.services.interfaces.BanOrganizationService;"},{"lineNumber":6,"author":{"gitId":"Iryna"},"content":"import lombok.RequiredArgsConstructor;"},{"lineNumber":7,"author":{"gitId":"Iryna"},"content":"import org.springframework.stereotype.Service;"},{"lineNumber":8,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":9,"author":{"gitId":"Iryna"},"content":"@Service"},{"lineNumber":10,"author":{"gitId":"Iryna"},"content":"@RequiredArgsConstructor"},{"lineNumber":11,"author":{"gitId":"Iryna"},"content":"public class BanOrganizationServiceImpl implements BanOrganizationService {"},{"lineNumber":12,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":13,"author":{"gitId":"Iryna"},"content":"    private final BannedOrganizationRepository bannedOrganizationRepository;"},{"lineNumber":14,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":15,"author":{"gitId":"Iryna"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"Iryna"},"content":"    public void addBanForOrganization(Long organizationId) {"},{"lineNumber":17,"author":{"gitId":"Iryna"},"content":"        bannedOrganizationRepository.save(new BannedOrganization(organizationId));"},{"lineNumber":18,"author":{"gitId":"Iryna"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":20,"author":{"gitId":"Iryna"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"Iryna"},"content":"    public void deleteBanForOrganization(Long organizationId) {"},{"lineNumber":22,"author":{"gitId":"Iryna"},"content":"        bannedOrganizationRepository.deleteById(organizationId);"},{"lineNumber":23,"author":{"gitId":"Iryna"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":25,"author":{"gitId":"Iryna"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"Iryna"},"content":"    public boolean isOrganizationBanned(Long organizationId) {"},{"lineNumber":27,"author":{"gitId":"Iryna"},"content":"        return bannedOrganizationRepository.existsById(organizationId);"},{"lineNumber":28,"author":{"gitId":"Iryna"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":30,"author":{"gitId":"Iryna"},"content":"}"}],"authorContributionMap":{"Iryna":30}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/services/implementations/BanUserServiceImpl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Iryna"},"content":"package edu.kmaooad.services.implementations;"},{"lineNumber":2,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":3,"author":{"gitId":"Iryna"},"content":"import edu.kmaooad.models.BannedUser;"},{"lineNumber":4,"author":{"gitId":"Iryna"},"content":"import edu.kmaooad.repositories.BannedUserRepository;"},{"lineNumber":5,"author":{"gitId":"Iryna"},"content":"import edu.kmaooad.services.interfaces.BanUserService;"},{"lineNumber":6,"author":{"gitId":"Iryna"},"content":"import lombok.RequiredArgsConstructor;"},{"lineNumber":7,"author":{"gitId":"Iryna"},"content":"import org.springframework.stereotype.Service;"},{"lineNumber":8,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":9,"author":{"gitId":"Iryna"},"content":"@Service"},{"lineNumber":10,"author":{"gitId":"Iryna"},"content":"@RequiredArgsConstructor"},{"lineNumber":11,"author":{"gitId":"Iryna"},"content":"public class BanUserServiceImpl implements BanUserService {"},{"lineNumber":12,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":13,"author":{"gitId":"Iryna"},"content":"    private final BannedUserRepository bannedUserRepository;"},{"lineNumber":14,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":15,"author":{"gitId":"Iryna"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"Iryna"},"content":"    public void addBanForUser(Long userId) {"},{"lineNumber":17,"author":{"gitId":"Iryna"},"content":"        bannedUserRepository.save(new BannedUser(userId));"},{"lineNumber":18,"author":{"gitId":"Iryna"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":20,"author":{"gitId":"Iryna"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"Iryna"},"content":"    public void deleteBanForUser(Long userId) {"},{"lineNumber":22,"author":{"gitId":"Iryna"},"content":"        bannedUserRepository.deleteById(userId);"},{"lineNumber":23,"author":{"gitId":"Iryna"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":25,"author":{"gitId":"Iryna"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"Iryna"},"content":"    public boolean isUserBanned(Long userId) {"},{"lineNumber":27,"author":{"gitId":"Iryna"},"content":"        return bannedUserRepository.existsById(userId);"},{"lineNumber":28,"author":{"gitId":"Iryna"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":30,"author":{"gitId":"Iryna"},"content":"}"}],"authorContributionMap":{"Iryna":30}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/services/implementations/CommandServiceImpl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.services.implementations;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import edu.kmaooad.exceptions.IncorrectCommandParamsException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import edu.kmaooad.exceptions.NotFoundException;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import edu.kmaooad.models.Command;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import edu.kmaooad.repositories.CommandRepository;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import edu.kmaooad.services.interfaces.CommandService;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.springframework.stereotype.Service;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"@Service"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandServiceImpl implements CommandService {"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final CommandRepository commandRepository;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Autowired"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandServiceImpl(CommandRepository commandRepository) {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.commandRepository \u003d commandRepository;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"Iryna"},"content":"    public Command createCommand(Long id, String name, String functionUrl) throws IncorrectCommandParamsException {"},{"lineNumber":23,"author":{"gitId":"Iryna"},"content":"        return commandRepository.save(validateCommand(id, name, functionUrl));"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Command getCommandById(Long id) throws NotFoundException{"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return commandRepository.findById(id).orElseThrow(() -\u003e new NotFoundException(Command.class.getSimpleName()));"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"Iryna"},"content":"    public Command updateCommand(Long id, String name, String functionUrl) throws Exception {"},{"lineNumber":33,"author":{"gitId":"Iryna"},"content":"        Command command \u003d validateCommand(id, name, functionUrl);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if(!existsById(id)) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new NotFoundException(Command.class.getSimpleName());"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return commandRepository.save(command);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command deleteCommandById(Long id) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Command toDelete \u003d commandRepository.findById(id).orElse(null);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if(toDelete !\u003d null)"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            commandRepository.deleteById(id);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return toDelete;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean existsById(Long id) {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return commandRepository.existsById(id);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"illia_sitkov"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"illia_sitkov"},"content":"    public Command getCommandByName(String commandText) {"},{"lineNumber":55,"author":{"gitId":"illia_sitkov"},"content":"        return commandRepository.findCommandByName(commandText).orElseThrow(() -\u003e new NotFoundException(Command.class.getSimpleName(), \"name\"));"},{"lineNumber":56,"author":{"gitId":"illia_sitkov"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":58,"author":{"gitId":"Iryna"},"content":"    private Command validateCommand(Long id, String name, String functionUrl) throws IncorrectCommandParamsException {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if(id \u003d\u003d null)"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new IncorrectCommandParamsException(\"id\",\"null\");"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if(name \u003d\u003d null)"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new IncorrectCommandParamsException(\"name\",\"null\");"},{"lineNumber":63,"author":{"gitId":"Iryna"},"content":"        return new Command(id, name, functionUrl);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"illia_sitkov":5,"-":55,"Iryna":6}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/services/implementations/ResourceServiceImpl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.services.implementations;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import edu.kmaooad.exceptions.IncorrectResourceParamsException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import edu.kmaooad.exceptions.NotFoundException;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import edu.kmaooad.exceptions.ResourceCompositeFieldNotUniqueException;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import edu.kmaooad.models.Resource;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import edu.kmaooad.models.ResourceCompositeField;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import edu.kmaooad.models.ResourceType;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import edu.kmaooad.repositories.ResourceRepository;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import edu.kmaooad.services.interfaces.ResourceService;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.springframework.stereotype.Service;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"@Service"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ResourceServiceImpl implements ResourceService {"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ResourceRepository resourceRepository;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Autowired"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public ResourceServiceImpl(ResourceRepository resourceRepository) {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.resourceRepository \u003d resourceRepository;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"soloway24"},"content":"    public Resource createResource(Long realId, ResourceType type) throws Exception {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        if (realId \u003d\u003d null) throw new IncorrectResourceParamsException(\"realId\", \"null\");"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (type \u003d\u003d null) throw new IncorrectResourceParamsException(\"type\", \"null\");"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (!isUniqueComposite(realId, type)) throw new ResourceCompositeFieldNotUniqueException();"},{"lineNumber":29,"author":{"gitId":"soloway24"},"content":"        return resourceRepository.save(new Resource(null, realId, type));"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public Resource getResourceById(Long id) throws NotFoundException {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return resourceRepository.findById(id).orElseThrow(() -\u003e new NotFoundException(Resource.class.getSimpleName()));"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Resource updateResource(Long id, Long realId, ResourceType type) throws Exception {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (id \u003d\u003d null) throw new IncorrectResourceParamsException(\"id\", \"null\");"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (realId \u003d\u003d null) throw new IncorrectResourceParamsException(\"realId\", \"null\");"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (type \u003d\u003d null) throw new IncorrectResourceParamsException(\"type\", \"null\");"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!existsById(id)) throw new NotFoundException(Resource.class.getSimpleName());"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!isUniqueComposite(realId, type)) throw new ResourceCompositeFieldNotUniqueException();"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return resourceRepository.save(new Resource(id, realId, type));"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Resource deleteResourceById(Long id) {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Resource resource \u003d resourceRepository.findById(id).orElse(null);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (resource !\u003d null) resourceRepository.deleteById(id);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return resource;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Resource getResourceByRealIdAndType(Long realId, ResourceType type) throws IncorrectResourceParamsException {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (realId \u003d\u003d null) throw new IncorrectResourceParamsException(\"realId\", \"null\");"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (type \u003d\u003d null) throw new IncorrectResourceParamsException(\"type\", \"null\");"},{"lineNumber":58,"author":{"gitId":"illia_sitkov"},"content":"        return resourceRepository.findByRealResource(new ResourceCompositeField(realId, type)).orElseThrow(() -\u003e new NotFoundException(Resource.class.getSimpleName(), \"real id and type\"));"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean existsById(Long id) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return resourceRepository.existsById(id);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private boolean isUniqueComposite(Long realId, ResourceType type) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ResourceCompositeField rcf \u003d new ResourceCompositeField(realId, type);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return !resourceRepository.existsByRealResource(rcf);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"illia_sitkov":1,"soloway24":2,"-":68}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/services/interfaces/AccessCheckService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.services.interfaces;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.exceptions.IncorrectResourceParamsException;"},{"lineNumber":4,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.models.ResourceType;"},{"lineNumber":5,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"public interface AccessCheckService {"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"illia_sitkov"},"content":"    // preferred signature"},{"lineNumber":9,"author":{"gitId":"soloway24"},"content":"    boolean hasAccess(Long userId, Long resourceId, ResourceType resourceType, Long commandId) throws IncorrectResourceParamsException;"},{"lineNumber":10,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":11,"author":{"gitId":"soloway24"},"content":"    boolean hasAccess(Long userId, Long resourceId, Long commandId) throws IncorrectResourceParamsException;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"illia_sitkov":3,"soloway24":3,"vdzhos":1,"-":5}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/services/interfaces/AccessRuleService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.services.interfaces;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import edu.kmaooad.models.AccessRule;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import edu.kmaooad.models.IssuerType;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.springframework.stereotype.Service;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"@Service"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface AccessRuleService {"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"    AccessRule upsert(Long issuerId, IssuerType issuerType, Long resourceId, Long commandId, boolean allowed);"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    void deleteById(Long issuerId, IssuerType issuerType, Long resourceId, Long commandId);"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Optional\u003cAccessRule\u003e getById(Long issuerId, IssuerType issuerType, Long resourceId, Long commandId);"},{"lineNumber":15,"author":{"gitId":"DanilAndriychenko"},"content":"    boolean existsById(Long issuerId, IssuerType issuerType, Long resourceId, Long commandId);"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"DanilAndriychenko":1,"-":15}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/services/interfaces/BanDepartmentService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Iryna"},"content":"package edu.kmaooad.services.interfaces;"},{"lineNumber":2,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":3,"author":{"gitId":"Iryna"},"content":"public interface BanDepartmentService {"},{"lineNumber":4,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":5,"author":{"gitId":"Iryna"},"content":"    void addBanForDepartment(Long departmentId);"},{"lineNumber":6,"author":{"gitId":"Iryna"},"content":"    void deleteBanForDepartment(Long departmentId);"},{"lineNumber":7,"author":{"gitId":"Iryna"},"content":"    boolean isDepartmentBanned(Long departmentId);"},{"lineNumber":8,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":9,"author":{"gitId":"Iryna"},"content":"}"}],"authorContributionMap":{"Iryna":9}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/services/interfaces/BanOrganizationService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Iryna"},"content":"package edu.kmaooad.services.interfaces;"},{"lineNumber":2,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":3,"author":{"gitId":"Iryna"},"content":"public interface BanOrganizationService {"},{"lineNumber":4,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":5,"author":{"gitId":"Iryna"},"content":"    void addBanForOrganization(Long organizationId);"},{"lineNumber":6,"author":{"gitId":"Iryna"},"content":"    void deleteBanForOrganization(Long organizationId);"},{"lineNumber":7,"author":{"gitId":"Iryna"},"content":"    boolean isOrganizationBanned(Long organizationId);"},{"lineNumber":8,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":9,"author":{"gitId":"Iryna"},"content":"}"}],"authorContributionMap":{"Iryna":9}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/services/interfaces/BanUserService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Iryna"},"content":"package edu.kmaooad.services.interfaces;"},{"lineNumber":2,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":3,"author":{"gitId":"Iryna"},"content":"public interface BanUserService {"},{"lineNumber":4,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":5,"author":{"gitId":"Iryna"},"content":"    void addBanForUser(Long userId);"},{"lineNumber":6,"author":{"gitId":"Iryna"},"content":"    void deleteBanForUser(Long userId);"},{"lineNumber":7,"author":{"gitId":"Iryna"},"content":"    boolean isUserBanned(Long userId);"},{"lineNumber":8,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":9,"author":{"gitId":"Iryna"},"content":"}"}],"authorContributionMap":{"Iryna":9}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/services/interfaces/CommandService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.services.interfaces;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import edu.kmaooad.exceptions.IncorrectCommandParamsException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import edu.kmaooad.exceptions.NotFoundException;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import edu.kmaooad.models.Command;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"public interface CommandService {"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"Iryna"},"content":"    Command createCommand(Long id, String name, String functionUrl) throws IncorrectCommandParamsException;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"    Command getCommandById(Long id) throws NotFoundException;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"Iryna"},"content":"    Command updateCommand(Long id, String name, String functionUrl) throws Exception;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Command deleteCommandById(Long id);"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    boolean existsById(Long id);"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"illia_sitkov"},"content":"    Command getCommandByName(String commandText);"},{"lineNumber":20,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"illia_sitkov":2,"-":17,"Iryna":2}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/services/interfaces/ResourceService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.services.interfaces;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import edu.kmaooad.exceptions.IncorrectResourceParamsException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import edu.kmaooad.exceptions.NotFoundException;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import edu.kmaooad.models.Resource;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import edu.kmaooad.models.ResourceType;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface ResourceService {"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"soloway24"},"content":"    Resource createResource(Long realId, ResourceType type) throws Exception;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"    Resource getResourceById(Long id) throws NotFoundException;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Resource updateResource(Long id, Long realId, ResourceType type) throws Exception;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Resource deleteResourceById(Long id);"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Resource getResourceByRealIdAndType(Long realId, ResourceType type) throws IncorrectResourceParamsException;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    boolean existsById(Long id);"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"soloway24":1,"-":21}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/utils/WebClientRequestLogger.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hlib Kalinichev"},"content":"package edu.kmaooad.utils;"},{"lineNumber":2,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":3,"author":{"gitId":"Hlib Kalinichev"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":4,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":5,"author":{"gitId":"Hlib Kalinichev"},"content":"@Component"},{"lineNumber":6,"author":{"gitId":"Hlib Kalinichev"},"content":"public class WebClientRequestLogger {"},{"lineNumber":7,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":8,"author":{"gitId":"Hlib Kalinichev"},"content":"    public void logRequest(String req) {"},{"lineNumber":9,"author":{"gitId":"Hlib Kalinichev"},"content":"        //should use real logger"},{"lineNumber":10,"author":{"gitId":"Hlib Kalinichev"},"content":"        System.out.println(\"[Sending request: \" + req + \" ]\");"},{"lineNumber":11,"author":{"gitId":"Hlib Kalinichev"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Hlib Kalinichev"},"content":"}"}],"authorContributionMap":{"Hlib Kalinichev":12}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/webhook/TelegramWebhook.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.webhook;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"Iryna"},"content":"import edu.kmaooad.commandDispatcher.CommandDispatcher;"},{"lineNumber":4,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.events.HandlerEvent;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import edu.kmaooad.models.BotUpdate;"},{"lineNumber":6,"author":{"gitId":"Iryna"},"content":"import edu.kmaooad.processing.CommandCall;"},{"lineNumber":7,"author":{"gitId":"Iryna"},"content":"import edu.kmaooad.processing.CommandParser;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import edu.kmaooad.repositories.BotUpdateRepository;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":10,"author":{"gitId":"illia_sitkov"},"content":"import org.springframework.context.ApplicationEventPublisher;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Function;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"@Component(\"TelegramWebhook\")"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class TelegramWebhook implements Function\u003cBotUpdate, String\u003e {"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Autowired"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private BotUpdateRepository updateRepository;"},{"lineNumber":20,"author":{"gitId":"Iryna"},"content":"    @Autowired"},{"lineNumber":21,"author":{"gitId":"Iryna"},"content":"    private CommandParser commandParser;"},{"lineNumber":22,"author":{"gitId":"Iryna"},"content":"    @Autowired"},{"lineNumber":23,"author":{"gitId":"Iryna"},"content":"    private CommandDispatcher commandDispatcher;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"illia_sitkov"},"content":"    @Autowired"},{"lineNumber":26,"author":{"gitId":"illia_sitkov"},"content":"    private ApplicationEventPublisher eventPublisher;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public String apply(BotUpdate botUpdate) {"},{"lineNumber":30,"author":{"gitId":"illia_sitkov"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"Iryna"},"content":"            CommandCall commandCall \u003d commandParser.parse(botUpdate);"},{"lineNumber":32,"author":{"gitId":"Iryna"},"content":"            commandDispatcher.dispatch(commandCall);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            updateRepository.save(botUpdate);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            return \"message_id\u003d\" + botUpdate.getMessage().getMessageId();"},{"lineNumber":35,"author":{"gitId":"illia_sitkov"},"content":"        } catch (Exception e) {"},{"lineNumber":36,"author":{"gitId":"illia_sitkov"},"content":"            eventPublisher.publishEvent(new HandlerEvent(\"Error occurred: \" + e.getMessage(), botUpdate.getMessage().getChat().getId()));"},{"lineNumber":37,"author":{"gitId":"illia_sitkov"},"content":"            e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"illia_sitkov"},"content":"            return \"Error occurred: \"+e.getMessage();"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"illia_sitkov":10,"-":23,"Iryna":9}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/AccessCheckServiceImplTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloway24"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":3,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.apiCommunication.OrgsWebClient;"},{"lineNumber":4,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.models.AccessRule;"},{"lineNumber":5,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.models.IssuerType;"},{"lineNumber":6,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.models.Resource;"},{"lineNumber":7,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.models.ResourceType;"},{"lineNumber":8,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.services.implementations.AccessCheckServiceImpl;"},{"lineNumber":9,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.services.interfaces.*;"},{"lineNumber":10,"author":{"gitId":"soloway24"},"content":"import lombok.SneakyThrows;"},{"lineNumber":11,"author":{"gitId":"soloway24"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":12,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":13,"author":{"gitId":"soloway24"},"content":"import java.util.Optional;"},{"lineNumber":14,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":15,"author":{"gitId":"soloway24"},"content":"import static org.assertj.core.api.Assertions.assertThat;"},{"lineNumber":16,"author":{"gitId":"soloway24"},"content":"import static org.mockito.Mockito.mock;"},{"lineNumber":17,"author":{"gitId":"soloway24"},"content":"import static org.mockito.Mockito.when;"},{"lineNumber":18,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":19,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":20,"author":{"gitId":"soloway24"},"content":"class AccessCheckServiceImplTest {"},{"lineNumber":21,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":22,"author":{"gitId":"soloway24"},"content":"    private final BanUserService banUserService \u003d mock(BanUserService.class);"},{"lineNumber":23,"author":{"gitId":"soloway24"},"content":"    private final BanDepartmentService banDepartmentService \u003d mock(BanDepartmentService.class);"},{"lineNumber":24,"author":{"gitId":"soloway24"},"content":"    private final BanOrganizationService banOrganizationService \u003d mock(BanOrganizationService.class);"},{"lineNumber":25,"author":{"gitId":"soloway24"},"content":"    private final AccessRuleService accessRuleService \u003d mock(AccessRuleService.class);"},{"lineNumber":26,"author":{"gitId":"soloway24"},"content":"    private final OrgsWebClient orgsWebClient \u003d mock(OrgsWebClient.class);"},{"lineNumber":27,"author":{"gitId":"soloway24"},"content":"    private final ResourceService resourceService \u003d mock(ResourceService.class);"},{"lineNumber":28,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":29,"author":{"gitId":"soloway24"},"content":"    private final AccessCheckService accessCheckService \u003d new AccessCheckServiceImpl(banUserService, banDepartmentService,"},{"lineNumber":30,"author":{"gitId":"soloway24"},"content":"            banOrganizationService, accessRuleService, orgsWebClient, resourceService);"},{"lineNumber":31,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":32,"author":{"gitId":"soloway24"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"soloway24"},"content":"    @SneakyThrows"},{"lineNumber":34,"author":{"gitId":"soloway24"},"content":"    void whenUserIsBannedThenAccessFalse_ByRealResourceId(){"},{"lineNumber":35,"author":{"gitId":"soloway24"},"content":"        Long userId \u003d 1L;"},{"lineNumber":36,"author":{"gitId":"soloway24"},"content":"        Long resourceId \u003d 2L;"},{"lineNumber":37,"author":{"gitId":"soloway24"},"content":"        Long commandId \u003d 3L;"},{"lineNumber":38,"author":{"gitId":"soloway24"},"content":"        Long realDepId \u003d 4L;"},{"lineNumber":39,"author":{"gitId":"soloway24"},"content":"        ResourceType resourceType \u003d ResourceType.DEPARTMENT;"},{"lineNumber":40,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":41,"author":{"gitId":"soloway24"},"content":"        Resource resource \u003d new Resource();"},{"lineNumber":42,"author":{"gitId":"soloway24"},"content":"        resource.setId(resourceId);"},{"lineNumber":43,"author":{"gitId":"soloway24"},"content":"        when(resourceService.getResourceByRealIdAndType(realDepId, resourceType)).thenReturn(resource);"},{"lineNumber":44,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":45,"author":{"gitId":"soloway24"},"content":"        when(banUserService.isUserBanned(userId)).thenReturn(true);"},{"lineNumber":46,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":47,"author":{"gitId":"soloway24"},"content":"        assertThat(accessCheckService.hasAccess(userId, realDepId, resourceType, commandId)).isFalse();"},{"lineNumber":48,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":50,"author":{"gitId":"soloway24"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"soloway24"},"content":"    @SneakyThrows"},{"lineNumber":52,"author":{"gitId":"soloway24"},"content":"    void whenUserIsBannedThenAccessFalse(){"},{"lineNumber":53,"author":{"gitId":"soloway24"},"content":"        Long userId \u003d 1L;"},{"lineNumber":54,"author":{"gitId":"soloway24"},"content":"        Long resourceId \u003d 1L;"},{"lineNumber":55,"author":{"gitId":"soloway24"},"content":"        Long commandId \u003d 1L;"},{"lineNumber":56,"author":{"gitId":"soloway24"},"content":"        when(banUserService.isUserBanned(userId)).thenReturn(true);"},{"lineNumber":57,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":58,"author":{"gitId":"soloway24"},"content":"        assertThat(accessCheckService.hasAccess(userId, resourceId, commandId)).isFalse();"},{"lineNumber":59,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":61,"author":{"gitId":"soloway24"},"content":"    @Test"},{"lineNumber":62,"author":{"gitId":"soloway24"},"content":"    @SneakyThrows"},{"lineNumber":63,"author":{"gitId":"soloway24"},"content":"    void whenUserAccessDeniesThenAccessFalse(){"},{"lineNumber":64,"author":{"gitId":"soloway24"},"content":"        Long userId \u003d 1L;"},{"lineNumber":65,"author":{"gitId":"soloway24"},"content":"        IssuerType issuerType \u003d IssuerType.USER;"},{"lineNumber":66,"author":{"gitId":"soloway24"},"content":"        Long resourceId \u003d 1L;"},{"lineNumber":67,"author":{"gitId":"soloway24"},"content":"        Long commandId \u003d 1L;"},{"lineNumber":68,"author":{"gitId":"soloway24"},"content":"        AccessRule userAccessRule \u003d new AccessRule(userId, issuerType, resourceId, commandId, false);"},{"lineNumber":69,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":70,"author":{"gitId":"soloway24"},"content":"        when(banUserService.isUserBanned(userId)).thenReturn(false);"},{"lineNumber":71,"author":{"gitId":"soloway24"},"content":"        when(accessRuleService"},{"lineNumber":72,"author":{"gitId":"soloway24"},"content":"                .getById(userId, issuerType, resourceId, commandId)).thenReturn(Optional.of(userAccessRule));"},{"lineNumber":73,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":74,"author":{"gitId":"soloway24"},"content":"        assertThat(accessCheckService.hasAccess(userId, resourceId, commandId)).isFalse();"},{"lineNumber":75,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":77,"author":{"gitId":"soloway24"},"content":"    @Test"},{"lineNumber":78,"author":{"gitId":"soloway24"},"content":"    @SneakyThrows"},{"lineNumber":79,"author":{"gitId":"soloway24"},"content":"    void whenUserAccessAllowsThenAccessTrue(){"},{"lineNumber":80,"author":{"gitId":"soloway24"},"content":"        Long userId \u003d 1L;"},{"lineNumber":81,"author":{"gitId":"soloway24"},"content":"        IssuerType issuerType \u003d IssuerType.USER;"},{"lineNumber":82,"author":{"gitId":"soloway24"},"content":"        Long resourceId \u003d 1L;"},{"lineNumber":83,"author":{"gitId":"soloway24"},"content":"        Long commandId \u003d 1L;"},{"lineNumber":84,"author":{"gitId":"soloway24"},"content":"        AccessRule userAccessRule \u003d new AccessRule(userId, issuerType, resourceId, commandId, true);"},{"lineNumber":85,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":86,"author":{"gitId":"soloway24"},"content":"        when(banUserService.isUserBanned(userId)).thenReturn(false);"},{"lineNumber":87,"author":{"gitId":"soloway24"},"content":"        when(accessRuleService"},{"lineNumber":88,"author":{"gitId":"soloway24"},"content":"                .getById(userId, issuerType, resourceId, commandId)).thenReturn(Optional.of(userAccessRule));"},{"lineNumber":89,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":90,"author":{"gitId":"soloway24"},"content":"        assertThat(accessCheckService.hasAccess(userId, resourceId, commandId)).isTrue();"},{"lineNumber":91,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":93,"author":{"gitId":"soloway24"},"content":"    @Test"},{"lineNumber":94,"author":{"gitId":"soloway24"},"content":"    @SneakyThrows"},{"lineNumber":95,"author":{"gitId":"soloway24"},"content":"    void whenUserDepartmentIsBannedThenAccessFalse(){"},{"lineNumber":96,"author":{"gitId":"soloway24"},"content":"        Long userId \u003d 1L;"},{"lineNumber":97,"author":{"gitId":"soloway24"},"content":"        IssuerType issuerType \u003d IssuerType.USER;"},{"lineNumber":98,"author":{"gitId":"soloway24"},"content":"        Long resourceId \u003d 2L;"},{"lineNumber":99,"author":{"gitId":"soloway24"},"content":"        Long commandId \u003d 3L;"},{"lineNumber":100,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":101,"author":{"gitId":"soloway24"},"content":"        when(banUserService.isUserBanned(userId)).thenReturn(false);"},{"lineNumber":102,"author":{"gitId":"soloway24"},"content":"        when(accessRuleService"},{"lineNumber":103,"author":{"gitId":"soloway24"},"content":"                .getById(userId, issuerType, resourceId, commandId)).thenReturn(Optional.empty());"},{"lineNumber":104,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":105,"author":{"gitId":"soloway24"},"content":"        Long realDepId \u003d 4L;"},{"lineNumber":106,"author":{"gitId":"soloway24"},"content":"        Long departmentId \u003d 5L;"},{"lineNumber":107,"author":{"gitId":"soloway24"},"content":"        when(orgsWebClient.fetchUserDepartments(userId)).thenReturn(realDepId);"},{"lineNumber":108,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":109,"author":{"gitId":"soloway24"},"content":"        Resource resource \u003d new Resource();"},{"lineNumber":110,"author":{"gitId":"soloway24"},"content":"        resource.setId(departmentId);"},{"lineNumber":111,"author":{"gitId":"soloway24"},"content":"        when(resourceService.getResourceByRealIdAndType(realDepId, ResourceType.DEPARTMENT)).thenReturn(resource);"},{"lineNumber":112,"author":{"gitId":"soloway24"},"content":"        when(banDepartmentService.isDepartmentBanned(departmentId)).thenReturn(true);"},{"lineNumber":113,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":114,"author":{"gitId":"soloway24"},"content":"        assertThat(accessCheckService.hasAccess(userId, resourceId, commandId)).isFalse();"},{"lineNumber":115,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":117,"author":{"gitId":"soloway24"},"content":"    @Test"},{"lineNumber":118,"author":{"gitId":"soloway24"},"content":"    @SneakyThrows"},{"lineNumber":119,"author":{"gitId":"soloway24"},"content":"    void whenUserDepartmentAccessDeniesThenAccessFalse(){"},{"lineNumber":120,"author":{"gitId":"soloway24"},"content":"        Long userId \u003d 1L;"},{"lineNumber":121,"author":{"gitId":"soloway24"},"content":"        IssuerType issuerType \u003d IssuerType.USER;"},{"lineNumber":122,"author":{"gitId":"soloway24"},"content":"        Long resourceId \u003d 2L;"},{"lineNumber":123,"author":{"gitId":"soloway24"},"content":"        Long commandId \u003d 3L;"},{"lineNumber":124,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":125,"author":{"gitId":"soloway24"},"content":"        when(banUserService.isUserBanned(userId)).thenReturn(false);"},{"lineNumber":126,"author":{"gitId":"soloway24"},"content":"        when(accessRuleService"},{"lineNumber":127,"author":{"gitId":"soloway24"},"content":"                .getById(userId, issuerType, resourceId, commandId)).thenReturn(Optional.empty());"},{"lineNumber":128,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":129,"author":{"gitId":"soloway24"},"content":"        Long realDepId \u003d 4L;"},{"lineNumber":130,"author":{"gitId":"soloway24"},"content":"        Long departmentId \u003d 5L;"},{"lineNumber":131,"author":{"gitId":"soloway24"},"content":"        when(orgsWebClient.fetchUserDepartments(userId)).thenReturn(realDepId);"},{"lineNumber":132,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":133,"author":{"gitId":"soloway24"},"content":"        Resource resource \u003d new Resource();"},{"lineNumber":134,"author":{"gitId":"soloway24"},"content":"        resource.setId(departmentId);"},{"lineNumber":135,"author":{"gitId":"soloway24"},"content":"        when(resourceService.getResourceByRealIdAndType(realDepId, ResourceType.DEPARTMENT)).thenReturn(resource);"},{"lineNumber":136,"author":{"gitId":"soloway24"},"content":"        when(banDepartmentService.isDepartmentBanned(departmentId)).thenReturn(false);"},{"lineNumber":137,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":138,"author":{"gitId":"soloway24"},"content":"        AccessRule depAccessRule \u003d new AccessRule(departmentId, issuerType, resourceId, commandId, false);"},{"lineNumber":139,"author":{"gitId":"soloway24"},"content":"        when(accessRuleService"},{"lineNumber":140,"author":{"gitId":"soloway24"},"content":"                .getById(departmentId, IssuerType.DEPARTMENT, resourceId, commandId)).thenReturn(Optional.of(depAccessRule));"},{"lineNumber":141,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":142,"author":{"gitId":"soloway24"},"content":"        assertThat(accessCheckService.hasAccess(userId, resourceId, commandId)).isFalse();"},{"lineNumber":143,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":145,"author":{"gitId":"soloway24"},"content":"    @Test"},{"lineNumber":146,"author":{"gitId":"soloway24"},"content":"    @SneakyThrows"},{"lineNumber":147,"author":{"gitId":"soloway24"},"content":"    void whenUserDepartmentAccessAllowsThenAccessTrue(){"},{"lineNumber":148,"author":{"gitId":"soloway24"},"content":"        Long userId \u003d 1L;"},{"lineNumber":149,"author":{"gitId":"soloway24"},"content":"        IssuerType issuerType \u003d IssuerType.USER;"},{"lineNumber":150,"author":{"gitId":"soloway24"},"content":"        Long resourceId \u003d 2L;"},{"lineNumber":151,"author":{"gitId":"soloway24"},"content":"        Long commandId \u003d 3L;"},{"lineNumber":152,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":153,"author":{"gitId":"soloway24"},"content":"        when(banUserService.isUserBanned(userId)).thenReturn(false);"},{"lineNumber":154,"author":{"gitId":"soloway24"},"content":"        when(accessRuleService"},{"lineNumber":155,"author":{"gitId":"soloway24"},"content":"                .getById(userId, issuerType, resourceId, commandId)).thenReturn(Optional.empty());"},{"lineNumber":156,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":157,"author":{"gitId":"soloway24"},"content":"        Long realDepId \u003d 4L;"},{"lineNumber":158,"author":{"gitId":"soloway24"},"content":"        Long departmentId \u003d 5L;"},{"lineNumber":159,"author":{"gitId":"soloway24"},"content":"        when(orgsWebClient.fetchUserDepartments(userId)).thenReturn(realDepId);"},{"lineNumber":160,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":161,"author":{"gitId":"soloway24"},"content":"        Resource resource \u003d new Resource();"},{"lineNumber":162,"author":{"gitId":"soloway24"},"content":"        resource.setId(departmentId);"},{"lineNumber":163,"author":{"gitId":"soloway24"},"content":"        when(resourceService.getResourceByRealIdAndType(realDepId, ResourceType.DEPARTMENT)).thenReturn(resource);"},{"lineNumber":164,"author":{"gitId":"soloway24"},"content":"        when(banDepartmentService.isDepartmentBanned(departmentId)).thenReturn(false);"},{"lineNumber":165,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":166,"author":{"gitId":"soloway24"},"content":"        AccessRule depAccessRule \u003d new AccessRule(departmentId, issuerType, resourceId, commandId, true);"},{"lineNumber":167,"author":{"gitId":"soloway24"},"content":"        when(accessRuleService"},{"lineNumber":168,"author":{"gitId":"soloway24"},"content":"                .getById(departmentId, IssuerType.DEPARTMENT, resourceId, commandId)).thenReturn(Optional.of(depAccessRule));"},{"lineNumber":169,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":170,"author":{"gitId":"soloway24"},"content":"        assertThat(accessCheckService.hasAccess(userId, resourceId, commandId)).isTrue();"},{"lineNumber":171,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":173,"author":{"gitId":"soloway24"},"content":"    @Test"},{"lineNumber":174,"author":{"gitId":"soloway24"},"content":"    @SneakyThrows"},{"lineNumber":175,"author":{"gitId":"soloway24"},"content":"    void whenUserOrganisationIsBannedThenAccessFalse(){"},{"lineNumber":176,"author":{"gitId":"soloway24"},"content":"        Long userId \u003d 1L;"},{"lineNumber":177,"author":{"gitId":"soloway24"},"content":"        IssuerType issuerType \u003d IssuerType.USER;"},{"lineNumber":178,"author":{"gitId":"soloway24"},"content":"        Long resourceId \u003d 2L;"},{"lineNumber":179,"author":{"gitId":"soloway24"},"content":"        Long commandId \u003d 3L;"},{"lineNumber":180,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":181,"author":{"gitId":"soloway24"},"content":"        when(banUserService.isUserBanned(userId)).thenReturn(false);"},{"lineNumber":182,"author":{"gitId":"soloway24"},"content":"        when(accessRuleService"},{"lineNumber":183,"author":{"gitId":"soloway24"},"content":"                .getById(userId, issuerType, resourceId, commandId)).thenReturn(Optional.empty());"},{"lineNumber":184,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":185,"author":{"gitId":"soloway24"},"content":"        Long realDepId \u003d 4L;"},{"lineNumber":186,"author":{"gitId":"soloway24"},"content":"        Long departmentId \u003d 5L;"},{"lineNumber":187,"author":{"gitId":"soloway24"},"content":"        when(orgsWebClient.fetchUserDepartments(userId)).thenReturn(realDepId);"},{"lineNumber":188,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":189,"author":{"gitId":"soloway24"},"content":"        Resource depResource \u003d new Resource();"},{"lineNumber":190,"author":{"gitId":"soloway24"},"content":"        depResource.setId(departmentId);"},{"lineNumber":191,"author":{"gitId":"soloway24"},"content":"        when(resourceService.getResourceByRealIdAndType(realDepId, ResourceType.DEPARTMENT)).thenReturn(depResource);"},{"lineNumber":192,"author":{"gitId":"soloway24"},"content":"        when(banDepartmentService.isDepartmentBanned(departmentId)).thenReturn(false);"},{"lineNumber":193,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":194,"author":{"gitId":"soloway24"},"content":"        when(accessRuleService"},{"lineNumber":195,"author":{"gitId":"soloway24"},"content":"                .getById(departmentId, IssuerType.DEPARTMENT, resourceId, commandId)).thenReturn(Optional.empty());"},{"lineNumber":196,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":197,"author":{"gitId":"soloway24"},"content":"        Long realOrgId \u003d 6L;"},{"lineNumber":198,"author":{"gitId":"soloway24"},"content":"        Long organisationId \u003d 7L;"},{"lineNumber":199,"author":{"gitId":"soloway24"},"content":"        when(orgsWebClient.fetchUserOrganizations(userId)).thenReturn(realOrgId);"},{"lineNumber":200,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":201,"author":{"gitId":"soloway24"},"content":"        Resource orgResource \u003d new Resource();"},{"lineNumber":202,"author":{"gitId":"soloway24"},"content":"        orgResource.setId(organisationId);"},{"lineNumber":203,"author":{"gitId":"soloway24"},"content":"        when(resourceService.getResourceByRealIdAndType(realOrgId, ResourceType.ORGANIZATION)).thenReturn(orgResource);"},{"lineNumber":204,"author":{"gitId":"soloway24"},"content":"        when(banOrganizationService.isOrganizationBanned(organisationId)).thenReturn(true);"},{"lineNumber":205,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":206,"author":{"gitId":"soloway24"},"content":"        assertThat(accessCheckService.hasAccess(userId, resourceId, commandId)).isFalse();"},{"lineNumber":207,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":208,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":209,"author":{"gitId":"soloway24"},"content":"    @Test"},{"lineNumber":210,"author":{"gitId":"soloway24"},"content":"    @SneakyThrows"},{"lineNumber":211,"author":{"gitId":"soloway24"},"content":"    void whenUserOrganisationAccessIsFalseThenAccessFalse(){"},{"lineNumber":212,"author":{"gitId":"soloway24"},"content":"        Long userId \u003d 1L;"},{"lineNumber":213,"author":{"gitId":"soloway24"},"content":"        IssuerType issuerType \u003d IssuerType.USER;"},{"lineNumber":214,"author":{"gitId":"soloway24"},"content":"        Long resourceId \u003d 2L;"},{"lineNumber":215,"author":{"gitId":"soloway24"},"content":"        Long commandId \u003d 3L;"},{"lineNumber":216,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":217,"author":{"gitId":"soloway24"},"content":"        when(banUserService.isUserBanned(userId)).thenReturn(false);"},{"lineNumber":218,"author":{"gitId":"soloway24"},"content":"        when(accessRuleService"},{"lineNumber":219,"author":{"gitId":"soloway24"},"content":"                .getById(userId, issuerType, resourceId, commandId)).thenReturn(Optional.empty());"},{"lineNumber":220,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":221,"author":{"gitId":"soloway24"},"content":"        Long realDepId \u003d 4L;"},{"lineNumber":222,"author":{"gitId":"soloway24"},"content":"        Long departmentId \u003d 5L;"},{"lineNumber":223,"author":{"gitId":"soloway24"},"content":"        when(orgsWebClient.fetchUserDepartments(userId)).thenReturn(realDepId);"},{"lineNumber":224,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":225,"author":{"gitId":"soloway24"},"content":"        Resource depResource \u003d new Resource();"},{"lineNumber":226,"author":{"gitId":"soloway24"},"content":"        depResource.setId(departmentId);"},{"lineNumber":227,"author":{"gitId":"soloway24"},"content":"        when(resourceService.getResourceByRealIdAndType(realDepId, ResourceType.DEPARTMENT)).thenReturn(depResource);"},{"lineNumber":228,"author":{"gitId":"soloway24"},"content":"        when(banDepartmentService.isDepartmentBanned(departmentId)).thenReturn(false);"},{"lineNumber":229,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":230,"author":{"gitId":"soloway24"},"content":"        when(accessRuleService"},{"lineNumber":231,"author":{"gitId":"soloway24"},"content":"                .getById(departmentId, IssuerType.DEPARTMENT, resourceId, commandId)).thenReturn(Optional.empty());"},{"lineNumber":232,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":233,"author":{"gitId":"soloway24"},"content":"        Long realOrgId \u003d 6L;"},{"lineNumber":234,"author":{"gitId":"soloway24"},"content":"        Long organisationId \u003d 7L;"},{"lineNumber":235,"author":{"gitId":"soloway24"},"content":"        when(orgsWebClient.fetchUserOrganizations(userId)).thenReturn(realOrgId);"},{"lineNumber":236,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":237,"author":{"gitId":"soloway24"},"content":"        Resource orgResource \u003d new Resource();"},{"lineNumber":238,"author":{"gitId":"soloway24"},"content":"        orgResource.setId(organisationId);"},{"lineNumber":239,"author":{"gitId":"soloway24"},"content":"        when(resourceService.getResourceByRealIdAndType(realOrgId, ResourceType.ORGANIZATION)).thenReturn(orgResource);"},{"lineNumber":240,"author":{"gitId":"soloway24"},"content":"        when(banOrganizationService.isOrganizationBanned(organisationId)).thenReturn(false);"},{"lineNumber":241,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":242,"author":{"gitId":"soloway24"},"content":"        AccessRule orgAccessRule \u003d new AccessRule(organisationId, issuerType, resourceId, commandId, false);"},{"lineNumber":243,"author":{"gitId":"soloway24"},"content":"        when(accessRuleService"},{"lineNumber":244,"author":{"gitId":"soloway24"},"content":"                .getById(organisationId, IssuerType.ORGANIZATION, resourceId, commandId)).thenReturn(Optional.of(orgAccessRule));"},{"lineNumber":245,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":246,"author":{"gitId":"soloway24"},"content":"        assertThat(accessCheckService.hasAccess(userId, resourceId, commandId)).isFalse();"},{"lineNumber":247,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":248,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":249,"author":{"gitId":"soloway24"},"content":"    @Test"},{"lineNumber":250,"author":{"gitId":"soloway24"},"content":"    @SneakyThrows"},{"lineNumber":251,"author":{"gitId":"soloway24"},"content":"    void whenUserOrganisationAccessIsTrueThenAccessTrue(){"},{"lineNumber":252,"author":{"gitId":"soloway24"},"content":"        Long userId \u003d 1L;"},{"lineNumber":253,"author":{"gitId":"soloway24"},"content":"        IssuerType issuerType \u003d IssuerType.USER;"},{"lineNumber":254,"author":{"gitId":"soloway24"},"content":"        Long resourceId \u003d 2L;"},{"lineNumber":255,"author":{"gitId":"soloway24"},"content":"        Long commandId \u003d 3L;"},{"lineNumber":256,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":257,"author":{"gitId":"soloway24"},"content":"        when(banUserService.isUserBanned(userId)).thenReturn(false);"},{"lineNumber":258,"author":{"gitId":"soloway24"},"content":"        when(accessRuleService"},{"lineNumber":259,"author":{"gitId":"soloway24"},"content":"                .getById(userId, issuerType, resourceId, commandId)).thenReturn(Optional.empty());"},{"lineNumber":260,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":261,"author":{"gitId":"soloway24"},"content":"        Long realDepId \u003d 4L;"},{"lineNumber":262,"author":{"gitId":"soloway24"},"content":"        Long departmentId \u003d 5L;"},{"lineNumber":263,"author":{"gitId":"soloway24"},"content":"        when(orgsWebClient.fetchUserDepartments(userId)).thenReturn(realDepId);"},{"lineNumber":264,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":265,"author":{"gitId":"soloway24"},"content":"        Resource depResource \u003d new Resource();"},{"lineNumber":266,"author":{"gitId":"soloway24"},"content":"        depResource.setId(departmentId);"},{"lineNumber":267,"author":{"gitId":"soloway24"},"content":"        when(resourceService.getResourceByRealIdAndType(realDepId, ResourceType.DEPARTMENT)).thenReturn(depResource);"},{"lineNumber":268,"author":{"gitId":"soloway24"},"content":"        when(banDepartmentService.isDepartmentBanned(departmentId)).thenReturn(false);"},{"lineNumber":269,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":270,"author":{"gitId":"soloway24"},"content":"        when(accessRuleService"},{"lineNumber":271,"author":{"gitId":"soloway24"},"content":"                .getById(departmentId, IssuerType.DEPARTMENT, resourceId, commandId)).thenReturn(Optional.empty());"},{"lineNumber":272,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":273,"author":{"gitId":"soloway24"},"content":"        Long realOrgId \u003d 6L;"},{"lineNumber":274,"author":{"gitId":"soloway24"},"content":"        Long organisationId \u003d 7L;"},{"lineNumber":275,"author":{"gitId":"soloway24"},"content":"        when(orgsWebClient.fetchUserOrganizations(userId)).thenReturn(realOrgId);"},{"lineNumber":276,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":277,"author":{"gitId":"soloway24"},"content":"        Resource orgResource \u003d new Resource();"},{"lineNumber":278,"author":{"gitId":"soloway24"},"content":"        orgResource.setId(organisationId);"},{"lineNumber":279,"author":{"gitId":"soloway24"},"content":"        when(resourceService.getResourceByRealIdAndType(realOrgId, ResourceType.ORGANIZATION)).thenReturn(orgResource);"},{"lineNumber":280,"author":{"gitId":"soloway24"},"content":"        when(banOrganizationService.isOrganizationBanned(organisationId)).thenReturn(false);"},{"lineNumber":281,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":282,"author":{"gitId":"soloway24"},"content":"        AccessRule orgAccessRule \u003d new AccessRule(organisationId, issuerType, resourceId, commandId, true);"},{"lineNumber":283,"author":{"gitId":"soloway24"},"content":"        when(accessRuleService"},{"lineNumber":284,"author":{"gitId":"soloway24"},"content":"                .getById(organisationId, IssuerType.ORGANIZATION, resourceId, commandId)).thenReturn(Optional.of(orgAccessRule));"},{"lineNumber":285,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":286,"author":{"gitId":"soloway24"},"content":"        assertThat(accessCheckService.hasAccess(userId, resourceId, commandId)).isTrue();"},{"lineNumber":287,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":288,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":289,"author":{"gitId":"soloway24"},"content":"    @Test"},{"lineNumber":290,"author":{"gitId":"soloway24"},"content":"    @SneakyThrows"},{"lineNumber":291,"author":{"gitId":"soloway24"},"content":"    void whenUserOrganisationAccessRuleIsAbsentThenAccessFalse(){"},{"lineNumber":292,"author":{"gitId":"soloway24"},"content":"        Long userId \u003d 1L;"},{"lineNumber":293,"author":{"gitId":"soloway24"},"content":"        IssuerType issuerType \u003d IssuerType.USER;"},{"lineNumber":294,"author":{"gitId":"soloway24"},"content":"        Long resourceId \u003d 2L;"},{"lineNumber":295,"author":{"gitId":"soloway24"},"content":"        Long commandId \u003d 3L;"},{"lineNumber":296,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":297,"author":{"gitId":"soloway24"},"content":"        when(banUserService.isUserBanned(userId)).thenReturn(false);"},{"lineNumber":298,"author":{"gitId":"soloway24"},"content":"        when(accessRuleService"},{"lineNumber":299,"author":{"gitId":"soloway24"},"content":"                .getById(userId, issuerType, resourceId, commandId)).thenReturn(Optional.empty());"},{"lineNumber":300,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":301,"author":{"gitId":"soloway24"},"content":"        Long realDepId \u003d 4L;"},{"lineNumber":302,"author":{"gitId":"soloway24"},"content":"        Long departmentId \u003d 5L;"},{"lineNumber":303,"author":{"gitId":"soloway24"},"content":"        when(orgsWebClient.fetchUserDepartments(userId)).thenReturn(realDepId);"},{"lineNumber":304,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":305,"author":{"gitId":"soloway24"},"content":"        Resource depResource \u003d new Resource();"},{"lineNumber":306,"author":{"gitId":"soloway24"},"content":"        depResource.setId(departmentId);"},{"lineNumber":307,"author":{"gitId":"soloway24"},"content":"        when(resourceService.getResourceByRealIdAndType(realDepId, ResourceType.DEPARTMENT)).thenReturn(depResource);"},{"lineNumber":308,"author":{"gitId":"soloway24"},"content":"        when(banDepartmentService.isDepartmentBanned(departmentId)).thenReturn(false);"},{"lineNumber":309,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":310,"author":{"gitId":"soloway24"},"content":"        when(accessRuleService"},{"lineNumber":311,"author":{"gitId":"soloway24"},"content":"                .getById(departmentId, IssuerType.DEPARTMENT, resourceId, commandId)).thenReturn(Optional.empty());"},{"lineNumber":312,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":313,"author":{"gitId":"soloway24"},"content":"        Long realOrgId \u003d 6L;"},{"lineNumber":314,"author":{"gitId":"soloway24"},"content":"        Long organisationId \u003d 7L;"},{"lineNumber":315,"author":{"gitId":"soloway24"},"content":"        when(orgsWebClient.fetchUserOrganizations(userId)).thenReturn(realOrgId);"},{"lineNumber":316,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":317,"author":{"gitId":"soloway24"},"content":"        Resource orgResource \u003d new Resource();"},{"lineNumber":318,"author":{"gitId":"soloway24"},"content":"        orgResource.setId(organisationId);"},{"lineNumber":319,"author":{"gitId":"soloway24"},"content":"        when(resourceService.getResourceByRealIdAndType(realOrgId, ResourceType.ORGANIZATION)).thenReturn(orgResource);"},{"lineNumber":320,"author":{"gitId":"soloway24"},"content":"        when(banOrganizationService.isOrganizationBanned(organisationId)).thenReturn(false);"},{"lineNumber":321,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":322,"author":{"gitId":"soloway24"},"content":"        when(accessRuleService"},{"lineNumber":323,"author":{"gitId":"soloway24"},"content":"                .getById(organisationId, IssuerType.ORGANIZATION, resourceId, commandId)).thenReturn(Optional.empty());"},{"lineNumber":324,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":325,"author":{"gitId":"soloway24"},"content":"        assertThat(accessCheckService.hasAccess(userId, resourceId, commandId)).isFalse();"},{"lineNumber":326,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":327,"author":{"gitId":"soloway24"},"content":"}"}],"authorContributionMap":{"soloway24":327}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/AccessRuleServiceTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"illia_sitkov"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":3,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.models.AccessRule;"},{"lineNumber":4,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.models.AccessRuleCompositeKey;"},{"lineNumber":5,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.models.IssuerType;"},{"lineNumber":6,"author":{"gitId":"illia_sitkov"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":7,"author":{"gitId":"illia_sitkov"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":8,"author":{"gitId":"illia_sitkov"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":10,"author":{"gitId":"illia_sitkov"},"content":"import java.util.Optional;"},{"lineNumber":11,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":12,"author":{"gitId":"soloway24"},"content":"public class AccessRuleServiceTest extends BaseTest {"},{"lineNumber":13,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":14,"author":{"gitId":"illia_sitkov"},"content":"    @AfterEach"},{"lineNumber":15,"author":{"gitId":"illia_sitkov"},"content":"    public void afterEach() {"},{"lineNumber":16,"author":{"gitId":"illia_sitkov"},"content":"        accessRuleRepository.deleteAll();"},{"lineNumber":17,"author":{"gitId":"illia_sitkov"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":19,"author":{"gitId":"illia_sitkov"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"illia_sitkov"},"content":"    public void givenNewAccessRule_whenUpsert_shouldBeCreated() {"},{"lineNumber":21,"author":{"gitId":"illia_sitkov"},"content":"        long issuerId \u003d 100L;"},{"lineNumber":22,"author":{"gitId":"illia_sitkov"},"content":"        IssuerType issuerType \u003d IssuerType.USER;"},{"lineNumber":23,"author":{"gitId":"illia_sitkov"},"content":"        long resourceId \u003d 200L;"},{"lineNumber":24,"author":{"gitId":"illia_sitkov"},"content":"        long commandId \u003d 300L;"},{"lineNumber":25,"author":{"gitId":"illia_sitkov"},"content":"        boolean allowed \u003d true;"},{"lineNumber":26,"author":{"gitId":"illia_sitkov"},"content":"        Assertions.assertFalse(accessRuleService.getById(issuerId, issuerType, resourceId, commandId).isPresent());"},{"lineNumber":27,"author":{"gitId":"illia_sitkov"},"content":"        accessRuleService.upsert(issuerId, issuerType, resourceId, commandId, allowed);"},{"lineNumber":28,"author":{"gitId":"illia_sitkov"},"content":"        Optional\u003cAccessRule\u003e accessRuleOptional \u003d accessRuleService.getById(issuerId, issuerType, resourceId, commandId);"},{"lineNumber":29,"author":{"gitId":"illia_sitkov"},"content":"        Assertions.assertTrue(accessRuleOptional.isPresent());"},{"lineNumber":30,"author":{"gitId":"illia_sitkov"},"content":"        AccessRuleCompositeKey key \u003d accessRuleOptional.get().getId();"},{"lineNumber":31,"author":{"gitId":"illia_sitkov"},"content":"        Assertions.assertEquals(key, new AccessRuleCompositeKey(issuerId, issuerType, resourceId, commandId));"},{"lineNumber":32,"author":{"gitId":"illia_sitkov"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":34,"author":{"gitId":"illia_sitkov"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"illia_sitkov"},"content":"    public void givenExistingAccessRule_whenUpsert_shouldBeUpdated() {"},{"lineNumber":36,"author":{"gitId":"illia_sitkov"},"content":"        long issuerId \u003d 100L;"},{"lineNumber":37,"author":{"gitId":"illia_sitkov"},"content":"        IssuerType issuerType \u003d IssuerType.USER;"},{"lineNumber":38,"author":{"gitId":"illia_sitkov"},"content":"        long resourceId \u003d 200L;"},{"lineNumber":39,"author":{"gitId":"illia_sitkov"},"content":"        long commandId \u003d 300L;"},{"lineNumber":40,"author":{"gitId":"illia_sitkov"},"content":"        boolean allowed \u003d true;"},{"lineNumber":41,"author":{"gitId":"illia_sitkov"},"content":"        boolean newAllowed \u003d false;"},{"lineNumber":42,"author":{"gitId":"illia_sitkov"},"content":"        Assertions.assertFalse(accessRuleService.getById(issuerId, issuerType, resourceId, commandId).isPresent());"},{"lineNumber":43,"author":{"gitId":"illia_sitkov"},"content":"        accessRuleService.upsert(issuerId, issuerType, resourceId, commandId, allowed);"},{"lineNumber":44,"author":{"gitId":"illia_sitkov"},"content":"        Assertions.assertTrue(accessRuleService.getById(issuerId, issuerType, resourceId, commandId).isPresent());"},{"lineNumber":45,"author":{"gitId":"illia_sitkov"},"content":"        accessRuleService.upsert(issuerId, issuerType, resourceId, commandId, newAllowed);"},{"lineNumber":46,"author":{"gitId":"illia_sitkov"},"content":"        Assertions.assertTrue(accessRuleService.getById(issuerId, issuerType, resourceId, commandId).isPresent());"},{"lineNumber":47,"author":{"gitId":"illia_sitkov"},"content":"        Assertions.assertEquals(accessRuleService.getById(issuerId, issuerType, resourceId, commandId).get().isAllowed(), newAllowed);"},{"lineNumber":48,"author":{"gitId":"illia_sitkov"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":50,"author":{"gitId":"illia_sitkov"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"illia_sitkov"},"content":"    public void givenExistingAccessRule_whenDelete_shouldBeDeleted() {"},{"lineNumber":52,"author":{"gitId":"illia_sitkov"},"content":"        long issuerId \u003d 100L;"},{"lineNumber":53,"author":{"gitId":"illia_sitkov"},"content":"        IssuerType issuerType \u003d IssuerType.USER;"},{"lineNumber":54,"author":{"gitId":"illia_sitkov"},"content":"        long resourceId \u003d 200L;"},{"lineNumber":55,"author":{"gitId":"illia_sitkov"},"content":"        long commandId \u003d 300L;"},{"lineNumber":56,"author":{"gitId":"illia_sitkov"},"content":"        boolean allowed \u003d true;"},{"lineNumber":57,"author":{"gitId":"illia_sitkov"},"content":"        accessRuleService.upsert(issuerId, issuerType, resourceId, commandId, allowed);"},{"lineNumber":58,"author":{"gitId":"illia_sitkov"},"content":"        Assertions.assertTrue(accessRuleService.getById(issuerId, issuerType, resourceId, commandId).isPresent());"},{"lineNumber":59,"author":{"gitId":"illia_sitkov"},"content":"        accessRuleService.deleteById(issuerId, issuerType, resourceId, commandId);"},{"lineNumber":60,"author":{"gitId":"illia_sitkov"},"content":"        Assertions.assertFalse(accessRuleService.getById(issuerId, issuerType, resourceId, commandId).isPresent());"},{"lineNumber":61,"author":{"gitId":"illia_sitkov"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":63,"author":{"gitId":"illia_sitkov"},"content":"    @Test"},{"lineNumber":64,"author":{"gitId":"illia_sitkov"},"content":"    public void givenExistingAccessRule_whenExistsById_shouldBeTrue() {"},{"lineNumber":65,"author":{"gitId":"illia_sitkov"},"content":"        long issuerId \u003d 100L;"},{"lineNumber":66,"author":{"gitId":"illia_sitkov"},"content":"        IssuerType issuerType \u003d IssuerType.USER;"},{"lineNumber":67,"author":{"gitId":"illia_sitkov"},"content":"        long resourceId \u003d 200L;"},{"lineNumber":68,"author":{"gitId":"illia_sitkov"},"content":"        long commandId \u003d 300L;"},{"lineNumber":69,"author":{"gitId":"illia_sitkov"},"content":"        boolean allowed \u003d true;"},{"lineNumber":70,"author":{"gitId":"illia_sitkov"},"content":"        accessRuleService.upsert(issuerId, issuerType, resourceId, commandId, allowed);"},{"lineNumber":71,"author":{"gitId":"illia_sitkov"},"content":"        Assertions.assertTrue(accessRuleService.getById(issuerId, issuerType, resourceId, commandId).isPresent());"},{"lineNumber":72,"author":{"gitId":"illia_sitkov"},"content":"        Assertions.assertTrue(accessRuleService.existsById(issuerId, issuerType, resourceId, commandId));"},{"lineNumber":73,"author":{"gitId":"illia_sitkov"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":75,"author":{"gitId":"illia_sitkov"},"content":"}"}],"authorContributionMap":{"illia_sitkov":74,"soloway24":1}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/BanHandlerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vdzhos"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":3,"author":{"gitId":"vdzhos"},"content":"import edu.kmaooad.commandHandlers.BanHandler;"},{"lineNumber":4,"author":{"gitId":"Hlib Kalinichev"},"content":"import edu.kmaooad.events.HandlerEvent;"},{"lineNumber":5,"author":{"gitId":"Hlib Kalinichev"},"content":"import edu.kmaooad.events.listeners.HandlerEventListener;"},{"lineNumber":6,"author":{"gitId":"vdzhos"},"content":"import edu.kmaooad.processing.CommandCall;"},{"lineNumber":7,"author":{"gitId":"vdzhos"},"content":"import edu.kmaooad.services.interfaces.BanDepartmentService;"},{"lineNumber":8,"author":{"gitId":"vdzhos"},"content":"import edu.kmaooad.services.interfaces.BanOrganizationService;"},{"lineNumber":9,"author":{"gitId":"vdzhos"},"content":"import edu.kmaooad.services.interfaces.BanUserService;"},{"lineNumber":10,"author":{"gitId":"vdzhos"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":11,"author":{"gitId":"vdzhos"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":12,"author":{"gitId":"vdzhos"},"content":"import org.springframework.boot.test.context.SpringBootTest;"},{"lineNumber":13,"author":{"gitId":"vdzhos"},"content":"import org.springframework.boot.test.context.TestConfiguration;"},{"lineNumber":14,"author":{"gitId":"vdzhos"},"content":"import org.springframework.context.ApplicationEventPublisher;"},{"lineNumber":15,"author":{"gitId":"vdzhos"},"content":"import org.springframework.context.annotation.Bean;"},{"lineNumber":16,"author":{"gitId":"vdzhos"},"content":"import org.springframework.context.annotation.Primary;"},{"lineNumber":17,"author":{"gitId":"vdzhos"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"},{"lineNumber":18,"author":{"gitId":"vdzhos"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":19,"author":{"gitId":"Hlib Kalinichev"},"content":"import static org.mockito.ArgumentMatchers.any;"},{"lineNumber":20,"author":{"gitId":"Hlib Kalinichev"},"content":"import static org.mockito.Mockito.*;"},{"lineNumber":21,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":22,"author":{"gitId":"Hlib Kalinichev"},"content":"public class BanHandlerTest extends BaseTest {"},{"lineNumber":23,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":24,"author":{"gitId":"vdzhos"},"content":"    @Autowired"},{"lineNumber":25,"author":{"gitId":"vdzhos"},"content":"    private BanHandler banHandler;"},{"lineNumber":26,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":27,"author":{"gitId":"Hlib Kalinichev"},"content":"    @Autowired"},{"lineNumber":28,"author":{"gitId":"Hlib Kalinichev"},"content":"    private HandlerEventListener eventListener;"},{"lineNumber":29,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":30,"author":{"gitId":"vdzhos"},"content":"    @TestConfiguration"},{"lineNumber":31,"author":{"gitId":"vdzhos"},"content":"    static class TestConfig {"},{"lineNumber":32,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":33,"author":{"gitId":"vdzhos"},"content":"        @Bean"},{"lineNumber":34,"author":{"gitId":"vdzhos"},"content":"        @Primary"},{"lineNumber":35,"author":{"gitId":"vdzhos"},"content":"        public BanUserService banUserService() {"},{"lineNumber":36,"author":{"gitId":"Hlib Kalinichev"},"content":"            BanUserService service \u003d mock(BanUserService.class);"},{"lineNumber":37,"author":{"gitId":"Hlib Kalinichev"},"content":"            doReturn(true).when(service).isUserBanned(eq(1L));"},{"lineNumber":38,"author":{"gitId":"Hlib Kalinichev"},"content":"            return service;"},{"lineNumber":39,"author":{"gitId":"vdzhos"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":41,"author":{"gitId":"Hlib Kalinichev"},"content":"        @Bean"},{"lineNumber":42,"author":{"gitId":"vdzhos"},"content":"        @Primary"},{"lineNumber":43,"author":{"gitId":"vdzhos"},"content":"        public BanDepartmentService banDepartmentService() {"},{"lineNumber":44,"author":{"gitId":"Hlib Kalinichev"},"content":"            BanDepartmentService service \u003d mock(BanDepartmentService.class);"},{"lineNumber":45,"author":{"gitId":"Hlib Kalinichev"},"content":"            doReturn(true).when(service).isDepartmentBanned(eq(5L));"},{"lineNumber":46,"author":{"gitId":"Hlib Kalinichev"},"content":"            return service;"},{"lineNumber":47,"author":{"gitId":"vdzhos"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":49,"author":{"gitId":"vdzhos"},"content":"        @Bean"},{"lineNumber":50,"author":{"gitId":"vdzhos"},"content":"        @Primary"},{"lineNumber":51,"author":{"gitId":"Hlib Kalinichev"},"content":"        public BanOrganizationService banOrganizationService() {"},{"lineNumber":52,"author":{"gitId":"Hlib Kalinichev"},"content":"            BanOrganizationService service \u003d mock(BanOrganizationService.class);"},{"lineNumber":53,"author":{"gitId":"Hlib Kalinichev"},"content":"            doReturn(true).when(service).isOrganizationBanned(eq(0L));"},{"lineNumber":54,"author":{"gitId":"Hlib Kalinichev"},"content":"            return service;"},{"lineNumber":55,"author":{"gitId":"vdzhos"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":57,"author":{"gitId":"vdzhos"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":59,"author":{"gitId":"vdzhos"},"content":"    @Test"},{"lineNumber":60,"author":{"gitId":"Hlib Kalinichev"},"content":"    public void givenCorrectCommandCall_whenHandle_shouldCreateBanAndTriggerService() {"},{"lineNumber":61,"author":{"gitId":"vdzhos"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L, new String[]{\"USER\", \"0\"});"},{"lineNumber":62,"author":{"gitId":"Hlib Kalinichev"},"content":"        Long issuerId \u003d 0L;"},{"lineNumber":63,"author":{"gitId":"vdzhos"},"content":"        assertDoesNotThrow(() -\u003e banHandler.handle(commandCall));"},{"lineNumber":64,"author":{"gitId":"Hlib Kalinichev"},"content":"        verify(banUserService).isUserBanned(eq(issuerId));"},{"lineNumber":65,"author":{"gitId":"Hlib Kalinichev"},"content":"        verify(banUserService).addBanForUser(eq(issuerId));"},{"lineNumber":66,"author":{"gitId":"Hlib Kalinichev"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":68,"author":{"gitId":"Hlib Kalinichev"},"content":"    @Test"},{"lineNumber":69,"author":{"gitId":"Hlib Kalinichev"},"content":"    public void givenCommandCall_whenBanAlreadyBannedUser_shouldThrowAndTriggerService() {"},{"lineNumber":70,"author":{"gitId":"Hlib Kalinichev"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L, new String[]{\"USER\", \"1\"});"},{"lineNumber":71,"author":{"gitId":"Hlib Kalinichev"},"content":"        assertThrows(Exception.class, () -\u003e banHandler.handle(commandCall));"},{"lineNumber":72,"author":{"gitId":"Hlib Kalinichev"},"content":"        verify(banUserService).isUserBanned(eq(1L));"},{"lineNumber":73,"author":{"gitId":"vdzhos"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":75,"author":{"gitId":"vdzhos"},"content":"    @Test"},{"lineNumber":76,"author":{"gitId":"vdzhos"},"content":"    public void givenCommandCall_whenArgAbsentAndHandle_shouldThrow() {"},{"lineNumber":77,"author":{"gitId":"vdzhos"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L, new String[]{\"USER\"});"},{"lineNumber":78,"author":{"gitId":"vdzhos"},"content":"        assertThrows(Exception.class, () -\u003e  banHandler.handle(commandCall));"},{"lineNumber":79,"author":{"gitId":"vdzhos"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":81,"author":{"gitId":"vdzhos"},"content":"    @Test"},{"lineNumber":82,"author":{"gitId":"vdzhos"},"content":"    public void givenCommandCall_whenArgTypeIncorrectAbsentAndHandle_shouldThrow() {"},{"lineNumber":83,"author":{"gitId":"vdzhos"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L, new String[]{\"INCORRECT_TYPE\", \"0\"});"},{"lineNumber":84,"author":{"gitId":"vdzhos"},"content":"        assertThrows(Exception.class, () -\u003e  banHandler.handle(commandCall));"},{"lineNumber":85,"author":{"gitId":"vdzhos"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":87,"author":{"gitId":"Hlib Kalinichev"},"content":"    @Test"},{"lineNumber":88,"author":{"gitId":"Hlib Kalinichev"},"content":"    public void givenCommandCall_whenBanOrganization_shouldBandAndTriggerService() {"},{"lineNumber":89,"author":{"gitId":"Hlib Kalinichev"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L, new String[]{\"ORGANIZATION\", \"2\"});"},{"lineNumber":90,"author":{"gitId":"Hlib Kalinichev"},"content":"        assertDoesNotThrow(() -\u003e banHandler.handle(commandCall));"},{"lineNumber":91,"author":{"gitId":"Hlib Kalinichev"},"content":"        Long issuerId \u003d 2L;"},{"lineNumber":92,"author":{"gitId":"Hlib Kalinichev"},"content":"        verify(banOrganizationService).isOrganizationBanned(eq(issuerId));"},{"lineNumber":93,"author":{"gitId":"Hlib Kalinichev"},"content":"        verify(banOrganizationService).addBanForOrganization(eq(issuerId));"},{"lineNumber":94,"author":{"gitId":"Hlib Kalinichev"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":96,"author":{"gitId":"Hlib Kalinichev"},"content":"    @Test"},{"lineNumber":97,"author":{"gitId":"Hlib Kalinichev"},"content":"    public void givenCommandCall_whenBanAlreadyBannedOrganization_shouldThrowAndTriggerService() {"},{"lineNumber":98,"author":{"gitId":"Hlib Kalinichev"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L, new String[]{\"ORGANIZATION\", \"0\"});"},{"lineNumber":99,"author":{"gitId":"Hlib Kalinichev"},"content":"        assertThrows(Exception.class, () -\u003e banHandler.handle(commandCall));"},{"lineNumber":100,"author":{"gitId":"Hlib Kalinichev"},"content":"        verify(banOrganizationService).isOrganizationBanned(eq(0L));"},{"lineNumber":101,"author":{"gitId":"Hlib Kalinichev"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":103,"author":{"gitId":"Hlib Kalinichev"},"content":"    @Test"},{"lineNumber":104,"author":{"gitId":"Hlib Kalinichev"},"content":"    public void givenCommandCall_whenBanDepartment_shouldBanAndTriggerService() {"},{"lineNumber":105,"author":{"gitId":"Hlib Kalinichev"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L, new String[]{\"DEPARTMENT\", \"2\"});"},{"lineNumber":106,"author":{"gitId":"Hlib Kalinichev"},"content":"        Long issuerId \u003d 2L;"},{"lineNumber":107,"author":{"gitId":"Hlib Kalinichev"},"content":"        assertDoesNotThrow(() -\u003e banHandler.handle(commandCall));"},{"lineNumber":108,"author":{"gitId":"Hlib Kalinichev"},"content":"        verify(banDepartmentService).isDepartmentBanned(eq(issuerId));"},{"lineNumber":109,"author":{"gitId":"Hlib Kalinichev"},"content":"        verify(banDepartmentService).addBanForDepartment(eq(issuerId));"},{"lineNumber":110,"author":{"gitId":"Hlib Kalinichev"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":112,"author":{"gitId":"Hlib Kalinichev"},"content":"    @Test"},{"lineNumber":113,"author":{"gitId":"Hlib Kalinichev"},"content":"    public void givenCommandCall_whenBanAlreadyBannedDepartment_shouldThrowAndTriggerService() {"},{"lineNumber":114,"author":{"gitId":"Hlib Kalinichev"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L, new String[]{\"DEPARTMENT\", \"5\"});"},{"lineNumber":115,"author":{"gitId":"Hlib Kalinichev"},"content":"        assertThrows(Exception.class, () -\u003e banHandler.handle(commandCall));"},{"lineNumber":116,"author":{"gitId":"Hlib Kalinichev"},"content":"        verify(banDepartmentService).isDepartmentBanned(eq(5L));"},{"lineNumber":117,"author":{"gitId":"Hlib Kalinichev"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":119,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":120,"author":{"gitId":"vdzhos"},"content":"}"}],"authorContributionMap":{"Hlib Kalinichev":63,"vdzhos":57}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/BanTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"soloway24"},"content":"public class BanTest extends BaseTest {"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void banForUserShouldBeAdded() {"},{"lineNumber":12,"author":{"gitId":"Iryna"},"content":"        banUserService.addBanForUser(1L);"},{"lineNumber":13,"author":{"gitId":"Iryna"},"content":"        assertTrue(banUserService.isUserBanned(1L));"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void banForUserShouldBeDeleted() {"},{"lineNumber":18,"author":{"gitId":"Iryna"},"content":"        banUserService.deleteBanForUser(1L);"},{"lineNumber":19,"author":{"gitId":"Iryna"},"content":"        assertFalse(banUserService.isUserBanned(1L));"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void banForDepartmentShouldBeAdded() {"},{"lineNumber":24,"author":{"gitId":"Iryna"},"content":"        banDepartmentService.addBanForDepartment(1L);"},{"lineNumber":25,"author":{"gitId":"Iryna"},"content":"        assertTrue(banDepartmentService.isDepartmentBanned(1L));"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void banForDepartmentShouldBeDeleted() {"},{"lineNumber":30,"author":{"gitId":"Iryna"},"content":"        banDepartmentService.deleteBanForDepartment(1L);"},{"lineNumber":31,"author":{"gitId":"Iryna"},"content":"        assertFalse(banDepartmentService.isDepartmentBanned(1L));"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void banForOrganizationShouldBeAdded() {"},{"lineNumber":36,"author":{"gitId":"Iryna"},"content":"        banOrganizationService.addBanForOrganization(1L);"},{"lineNumber":37,"author":{"gitId":"Iryna"},"content":"        assertTrue(banOrganizationService.isOrganizationBanned(1L));"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void banForOrganizationShouldBeDeleted() {"},{"lineNumber":42,"author":{"gitId":"Iryna"},"content":"        banOrganizationService.deleteBanForOrganization(1L);"},{"lineNumber":43,"author":{"gitId":"Iryna"},"content":"        assertFalse(banOrganizationService.isOrganizationBanned(1L));"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"soloway24":1,"-":33,"Iryna":12}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/BaseTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloway24"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":3,"author":{"gitId":"Hlib Kalinichev"},"content":"import edu.kmaooad.apiCommunication.TelegramWebClient;"},{"lineNumber":4,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.commandDispatcher.CommandDispatcher;"},{"lineNumber":5,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.commandHandlers.CommandHandler;"},{"lineNumber":6,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.commandHandlers.CreateAccessRuleHandler;"},{"lineNumber":7,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.commandHandlers.OtherCommandHandler;"},{"lineNumber":8,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.processing.CommandParser;"},{"lineNumber":9,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.repositories.AccessRuleRepository;"},{"lineNumber":10,"author":{"gitId":"Iryna"},"content":"import edu.kmaooad.repositories.CommandRepository;"},{"lineNumber":11,"author":{"gitId":"Hlib Kalinichev"},"content":"import edu.kmaooad.services.interfaces.*;"},{"lineNumber":12,"author":{"gitId":"soloway24"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":13,"author":{"gitId":"soloway24"},"content":"import org.springframework.boot.test.context.SpringBootTest;"},{"lineNumber":14,"author":{"gitId":"soloway24"},"content":"import org.springframework.context.ApplicationContext;"},{"lineNumber":15,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":16,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":17,"author":{"gitId":"soloway24"},"content":"import java.util.Map;"},{"lineNumber":18,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":19,"author":{"gitId":"soloway24"},"content":"@SpringBootTest"},{"lineNumber":20,"author":{"gitId":"soloway24"},"content":"public class BaseTest {"},{"lineNumber":21,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":22,"author":{"gitId":"soloway24"},"content":"    @Autowired"},{"lineNumber":23,"author":{"gitId":"soloway24"},"content":"    protected AccessRuleService accessRuleService;"},{"lineNumber":24,"author":{"gitId":"soloway24"},"content":"    @Autowired"},{"lineNumber":25,"author":{"gitId":"soloway24"},"content":"    protected AccessRuleRepository accessRuleRepository;"},{"lineNumber":26,"author":{"gitId":"soloway24"},"content":"    @Autowired"},{"lineNumber":27,"author":{"gitId":"soloway24"},"content":"    protected BanUserService banUserService;"},{"lineNumber":28,"author":{"gitId":"soloway24"},"content":"    @Autowired"},{"lineNumber":29,"author":{"gitId":"soloway24"},"content":"    protected BanDepartmentService banDepartmentService;"},{"lineNumber":30,"author":{"gitId":"soloway24"},"content":"    @Autowired"},{"lineNumber":31,"author":{"gitId":"soloway24"},"content":"    protected BanOrganizationService banOrganizationService;"},{"lineNumber":32,"author":{"gitId":"soloway24"},"content":"    @Autowired"},{"lineNumber":33,"author":{"gitId":"Iryna"},"content":"    protected CommandRepository commandRepository;"},{"lineNumber":34,"author":{"gitId":"Iryna"},"content":"    @Autowired"},{"lineNumber":35,"author":{"gitId":"Iryna"},"content":"    protected CommandService commandService;"},{"lineNumber":36,"author":{"gitId":"Iryna"},"content":"    @Autowired"},{"lineNumber":37,"author":{"gitId":"soloway24"},"content":"    protected CommandDispatcher commandDispatcher;"},{"lineNumber":38,"author":{"gitId":"soloway24"},"content":"    @Autowired"},{"lineNumber":39,"author":{"gitId":"soloway24"},"content":"    protected Map\u003cLong, CommandHandler\u003e handlers;"},{"lineNumber":40,"author":{"gitId":"soloway24"},"content":"    @Autowired"},{"lineNumber":41,"author":{"gitId":"soloway24"},"content":"    protected CommandParser parser;"},{"lineNumber":42,"author":{"gitId":"soloway24"},"content":"    @Autowired"},{"lineNumber":43,"author":{"gitId":"soloway24"},"content":"    protected CreateAccessRuleHandler createAccessRuleHandler;"},{"lineNumber":44,"author":{"gitId":"soloway24"},"content":"    @Autowired"},{"lineNumber":45,"author":{"gitId":"soloway24"},"content":"    protected ApplicationContext applicationContext;"},{"lineNumber":46,"author":{"gitId":"soloway24"},"content":"    @Autowired"},{"lineNumber":47,"author":{"gitId":"soloway24"},"content":"    protected OtherCommandHandler otherCommandHandler;"},{"lineNumber":48,"author":{"gitId":"Hlib Kalinichev"},"content":"    @Autowired"},{"lineNumber":49,"author":{"gitId":"Hlib Kalinichev"},"content":"    protected TelegramWebClient webClient;"},{"lineNumber":50,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":51,"author":{"gitId":"soloway24"},"content":"}"}],"authorContributionMap":{"soloway24":40,"Hlib Kalinichev":6,"Iryna":5}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/CommandDispatcherTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"illia_sitkov"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":3,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.commandHandlers.CommandHandler;"},{"lineNumber":4,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.exceptions.AccessDeniedException;"},{"lineNumber":5,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.exceptions.IncorrectResourceParamsException;"},{"lineNumber":6,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.processing.CommandCall;"},{"lineNumber":7,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.services.interfaces.AccessCheckService;"},{"lineNumber":8,"author":{"gitId":"illia_sitkov"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"illia_sitkov"},"content":"import org.springframework.boot.test.context.TestConfiguration;"},{"lineNumber":10,"author":{"gitId":"illia_sitkov"},"content":"import org.springframework.context.annotation.Bean;"},{"lineNumber":11,"author":{"gitId":"illia_sitkov"},"content":"import org.springframework.context.annotation.Primary;"},{"lineNumber":12,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":13,"author":{"gitId":"illia_sitkov"},"content":"import java.util.Map;"},{"lineNumber":14,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":15,"author":{"gitId":"illia_sitkov"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":16,"author":{"gitId":"illia_sitkov"},"content":"import static org.mockito.Mockito.*;"},{"lineNumber":17,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":18,"author":{"gitId":"soloway24"},"content":"public class CommandDispatcherTest extends BaseTest {"},{"lineNumber":19,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":20,"author":{"gitId":"illia_sitkov"},"content":"    @TestConfiguration"},{"lineNumber":21,"author":{"gitId":"illia_sitkov"},"content":"    static class TestConfig {"},{"lineNumber":22,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":23,"author":{"gitId":"illia_sitkov"},"content":"        @Bean"},{"lineNumber":24,"author":{"gitId":"illia_sitkov"},"content":"        @Primary"},{"lineNumber":25,"author":{"gitId":"illia_sitkov"},"content":"        public Map\u003cLong, CommandHandler\u003e handlers() {"},{"lineNumber":26,"author":{"gitId":"illia_sitkov"},"content":"            CommandHandler commandHandlerMock \u003d mock(CommandHandler.class);"},{"lineNumber":27,"author":{"gitId":"illia_sitkov"},"content":"            return Map.of(0L, commandHandlerMock);"},{"lineNumber":28,"author":{"gitId":"illia_sitkov"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":30,"author":{"gitId":"illia_sitkov"},"content":"        @Bean"},{"lineNumber":31,"author":{"gitId":"illia_sitkov"},"content":"        @Primary"},{"lineNumber":32,"author":{"gitId":"soloway24"},"content":"        public AccessCheckService accessCheckService() throws IncorrectResourceParamsException {"},{"lineNumber":33,"author":{"gitId":"illia_sitkov"},"content":"            AccessCheckService service \u003d mock(AccessCheckService.class);"},{"lineNumber":34,"author":{"gitId":"illia_sitkov"},"content":"            doReturn(true).when(service).hasAccess(any(), any(), any(), eq(0L));"},{"lineNumber":35,"author":{"gitId":"illia_sitkov"},"content":"            doReturn(false).when(service).hasAccess(any(), any(), any(), eq(1L));"},{"lineNumber":36,"author":{"gitId":"illia_sitkov"},"content":"            return service;"},{"lineNumber":37,"author":{"gitId":"illia_sitkov"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":39,"author":{"gitId":"illia_sitkov"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":41,"author":{"gitId":"illia_sitkov"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"illia_sitkov"},"content":"    public void givenAllowedCommandCall_whenDispatch_shouldCallHandle() throws Exception {"},{"lineNumber":43,"author":{"gitId":"illia_sitkov"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L, new String[]{\"1234\", \"USER\"});"},{"lineNumber":44,"author":{"gitId":"illia_sitkov"},"content":"        commandDispatcher.dispatch(commandCall);"},{"lineNumber":45,"author":{"gitId":"illia_sitkov"},"content":"        verify(handlers.get(0L), times(1)).handle(commandCall);"},{"lineNumber":46,"author":{"gitId":"illia_sitkov"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":48,"author":{"gitId":"illia_sitkov"},"content":"    @Test"},{"lineNumber":49,"author":{"gitId":"illia_sitkov"},"content":"    public void givenDeniedCommandCall_whenDispatch_shouldThrow() throws Exception {"},{"lineNumber":50,"author":{"gitId":"illia_sitkov"},"content":"        CommandCall commandCall \u003d new CommandCall(1L, 123L, 456L, new String[]{\"1234\", \"USER\"});"},{"lineNumber":51,"author":{"gitId":"illia_sitkov"},"content":"        assertThrows(AccessDeniedException.class, () -\u003e commandDispatcher.dispatch(commandCall));"},{"lineNumber":52,"author":{"gitId":"illia_sitkov"},"content":"        verify(handlers.get(0L), times(0)).handle(commandCall);"},{"lineNumber":53,"author":{"gitId":"illia_sitkov"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":55,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":56,"author":{"gitId":"illia_sitkov"},"content":"}"}],"authorContributionMap":{"illia_sitkov":53,"soloway24":3}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/CommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import edu.kmaooad.models.BotUpdate;"},{"lineNumber":4,"author":{"gitId":"Hlib Kalinichev"},"content":"import edu.kmaooad.models.Command;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import edu.kmaooad.models.Message;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import edu.kmaooad.processing.CommandCall;"},{"lineNumber":7,"author":{"gitId":"Hlib Kalinichev"},"content":"import edu.kmaooad.services.interfaces.CommandService;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"Hlib Kalinichev"},"content":"import org.springframework.boot.test.context.TestConfiguration;"},{"lineNumber":11,"author":{"gitId":"Hlib Kalinichev"},"content":"import org.springframework.context.annotation.Bean;"},{"lineNumber":12,"author":{"gitId":"Hlib Kalinichev"},"content":"import org.springframework.context.annotation.Primary;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static org.mockito.Mockito.*;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"soloway24"},"content":"public class CommandParserTest extends BaseTest {"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"Hlib Kalinichev"},"content":"    @TestConfiguration"},{"lineNumber":19,"author":{"gitId":"Hlib Kalinichev"},"content":"    static class TestConfig {"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"Hlib Kalinichev"},"content":"        @Bean"},{"lineNumber":22,"author":{"gitId":"Hlib Kalinichev"},"content":"        @Primary"},{"lineNumber":23,"author":{"gitId":"Hlib Kalinichev"},"content":"        public CommandService commandService() {"},{"lineNumber":24,"author":{"gitId":"Hlib Kalinichev"},"content":"            CommandService service \u003d mock(CommandService.class);"},{"lineNumber":25,"author":{"gitId":"Hlib Kalinichev"},"content":"            doReturn(new Command(0L, \"createStudent\", \"\")).when(service).getCommandByName(eq(\"createStudent\"));"},{"lineNumber":26,"author":{"gitId":"Hlib Kalinichev"},"content":"            return service;"},{"lineNumber":27,"author":{"gitId":"Hlib Kalinichev"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"Hlib Kalinichev"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parseCommand_whenCorrectCommandInBotUpdate_thenReturnCommandCallObject() {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        BotUpdate upd \u003d new BotUpdate();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        upd.setUpdateId(23433L);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Message msg \u003d new Message();"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Message.Chat chat \u003d mock(Message.Chat.class);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Message.From from \u003d spy(Message.From.class);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        doReturn(569520498L).when(from).getId();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        msg.setFrom(from);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        msg.setChat(chat);"},{"lineNumber":40,"author":{"gitId":"illia_sitkov"},"content":"        msg.setText(\"createStudent -id 22223\");"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        upd.setMessage(msg);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CommandCall call \u003d parser.parse(upd);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(call.getArgs().length, 2);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(call.getUserId(), from.getId());"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(call.getArgs()[1], \"22223\");"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"illia_sitkov":1,"soloway24":1,"Hlib Kalinichev":15,"-":31}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/CommandServiceTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Iryna"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":3,"author":{"gitId":"Iryna"},"content":"import edu.kmaooad.exceptions.IncorrectCommandParamsException;"},{"lineNumber":4,"author":{"gitId":"Iryna"},"content":"import edu.kmaooad.exceptions.NotFoundException;"},{"lineNumber":5,"author":{"gitId":"Iryna"},"content":"import edu.kmaooad.models.Command;"},{"lineNumber":6,"author":{"gitId":"illia_sitkov"},"content":"import org.junit.jupiter.api.*;"},{"lineNumber":7,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":8,"author":{"gitId":"illia_sitkov"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":10,"author":{"gitId":"Iryna"},"content":"public class CommandServiceTest extends BaseTest {"},{"lineNumber":11,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":12,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":13,"author":{"gitId":"illia_sitkov"},"content":"    private List\u003cCommand\u003e commands;"},{"lineNumber":14,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":15,"author":{"gitId":"illia_sitkov"},"content":"    @BeforeEach"},{"lineNumber":16,"author":{"gitId":"illia_sitkov"},"content":"    public void beforeEach() {"},{"lineNumber":17,"author":{"gitId":"illia_sitkov"},"content":"        commands \u003d commandRepository.findAll();"},{"lineNumber":18,"author":{"gitId":"illia_sitkov"},"content":"        commandRepository.deleteAll();"},{"lineNumber":19,"author":{"gitId":"illia_sitkov"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":21,"author":{"gitId":"Iryna"},"content":"    @AfterEach"},{"lineNumber":22,"author":{"gitId":"Iryna"},"content":"    public void afterEach() {"},{"lineNumber":23,"author":{"gitId":"Iryna"},"content":"        commandRepository.deleteAll();"},{"lineNumber":24,"author":{"gitId":"illia_sitkov"},"content":"        commandRepository.saveAll(commands);"},{"lineNumber":25,"author":{"gitId":"Iryna"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":27,"author":{"gitId":"Iryna"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"Iryna"},"content":"    public void givenNewCommand_whenCreate_shouldBeCreated() throws IncorrectCommandParamsException, NotFoundException {"},{"lineNumber":29,"author":{"gitId":"Iryna"},"content":"        long id \u003d 0L;"},{"lineNumber":30,"author":{"gitId":"Iryna"},"content":"        String commandName \u003d \"name\";"},{"lineNumber":31,"author":{"gitId":"Iryna"},"content":"        String functionUrl \u003d \"functionUrl\";"},{"lineNumber":32,"author":{"gitId":"Iryna"},"content":"        Assertions.assertFalse(commandService.existsById(id));"},{"lineNumber":33,"author":{"gitId":"Iryna"},"content":"        commandService.createCommand(id, commandName, functionUrl);"},{"lineNumber":34,"author":{"gitId":"Iryna"},"content":"        Command command \u003d commandService.getCommandById(0L);"},{"lineNumber":35,"author":{"gitId":"Iryna"},"content":"        Assertions.assertNotNull(command);"},{"lineNumber":36,"author":{"gitId":"Iryna"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":38,"author":{"gitId":"Iryna"},"content":"    @Test"},{"lineNumber":39,"author":{"gitId":"Iryna"},"content":"    public void givenNewCommandWithNullId_whenCreate_shouldThrow() {"},{"lineNumber":40,"author":{"gitId":"Iryna"},"content":"        Long id \u003d null;"},{"lineNumber":41,"author":{"gitId":"Iryna"},"content":"        String commandName \u003d \"name\";"},{"lineNumber":42,"author":{"gitId":"Iryna"},"content":"        String functionUrl \u003d \"functionUrl\";"},{"lineNumber":43,"author":{"gitId":"illia_sitkov"},"content":"        Assertions.assertThrows(IncorrectCommandParamsException.class, () -\u003e commandService.createCommand(id, commandName, functionUrl));"},{"lineNumber":44,"author":{"gitId":"Iryna"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":46,"author":{"gitId":"Iryna"},"content":"    @Test"},{"lineNumber":47,"author":{"gitId":"Iryna"},"content":"    public void givenNewCommandWithNullName_whenCreate_shouldThrow() {"},{"lineNumber":48,"author":{"gitId":"Iryna"},"content":"        Long id \u003d 0L;"},{"lineNumber":49,"author":{"gitId":"Iryna"},"content":"        String commandName \u003d null;"},{"lineNumber":50,"author":{"gitId":"Iryna"},"content":"        String functionUrl \u003d \"functionUrl\";"},{"lineNumber":51,"author":{"gitId":"illia_sitkov"},"content":"        Assertions.assertThrows(IncorrectCommandParamsException.class, () -\u003e commandService.createCommand(id, commandName, functionUrl));"},{"lineNumber":52,"author":{"gitId":"Iryna"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":54,"author":{"gitId":"Iryna"},"content":"    @Test"},{"lineNumber":55,"author":{"gitId":"Iryna"},"content":"    public void givenExistingCommand_whenUpdate_shouldBeUpdated() throws Exception {"},{"lineNumber":56,"author":{"gitId":"Iryna"},"content":"        long id \u003d 0L;"},{"lineNumber":57,"author":{"gitId":"Iryna"},"content":"        String commandName \u003d \"name\";"},{"lineNumber":58,"author":{"gitId":"Iryna"},"content":"        String functionUrl \u003d \"functionUrl\";"},{"lineNumber":59,"author":{"gitId":"Iryna"},"content":"        String newCommandName \u003d \"name1\";"},{"lineNumber":60,"author":{"gitId":"Iryna"},"content":"        String newFunctionUrl \u003d \"functionUrl1\";"},{"lineNumber":61,"author":{"gitId":"Iryna"},"content":"        Assertions.assertFalse(commandService.existsById(id));"},{"lineNumber":62,"author":{"gitId":"Iryna"},"content":"        commandService.createCommand(id, commandName, functionUrl);"},{"lineNumber":63,"author":{"gitId":"Iryna"},"content":"        Command command \u003d commandService.getCommandById(0L);"},{"lineNumber":64,"author":{"gitId":"Iryna"},"content":"        Assertions.assertNotNull(command);"},{"lineNumber":65,"author":{"gitId":"Iryna"},"content":"        commandService.updateCommand(0L, newCommandName, newFunctionUrl);"},{"lineNumber":66,"author":{"gitId":"Iryna"},"content":"        command \u003d commandService.getCommandById(0L);"},{"lineNumber":67,"author":{"gitId":"Iryna"},"content":"        Assertions.assertNotNull(command);"},{"lineNumber":68,"author":{"gitId":"Iryna"},"content":"        Assertions.assertEquals(command.getName(), newCommandName);"},{"lineNumber":69,"author":{"gitId":"Iryna"},"content":"        Assertions.assertEquals(command.getFunctionUrl(), newFunctionUrl);"},{"lineNumber":70,"author":{"gitId":"Iryna"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":72,"author":{"gitId":"Iryna"},"content":"    @Test"},{"lineNumber":73,"author":{"gitId":"Iryna"},"content":"    public void givenNewCommand_whenUpdate_shouldThrow() throws Exception {"},{"lineNumber":74,"author":{"gitId":"Iryna"},"content":"        long id \u003d 0L;"},{"lineNumber":75,"author":{"gitId":"Iryna"},"content":"        long newId \u003d 1L;"},{"lineNumber":76,"author":{"gitId":"Iryna"},"content":"        String commandName \u003d \"name\";"},{"lineNumber":77,"author":{"gitId":"Iryna"},"content":"        String functionUrl \u003d \"functionUrl\";"},{"lineNumber":78,"author":{"gitId":"Iryna"},"content":"        String newCommandName \u003d \"name1\";"},{"lineNumber":79,"author":{"gitId":"Iryna"},"content":"        String newFunctionUrl \u003d \"functionUrl1\";"},{"lineNumber":80,"author":{"gitId":"illia_sitkov"},"content":"        Assertions.assertThrows(NotFoundException.class, () -\u003e commandService.getCommandById(id));"},{"lineNumber":81,"author":{"gitId":"Iryna"},"content":"        commandService.createCommand(id, commandName, functionUrl);"},{"lineNumber":82,"author":{"gitId":"Iryna"},"content":"        Command command \u003d commandService.getCommandById(id);"},{"lineNumber":83,"author":{"gitId":"Iryna"},"content":"        Assertions.assertNotNull(command);"},{"lineNumber":84,"author":{"gitId":"illia_sitkov"},"content":"        Assertions.assertThrows(NotFoundException.class, () -\u003e commandService.updateCommand(newId, newCommandName, newFunctionUrl));"},{"lineNumber":85,"author":{"gitId":"Iryna"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":87,"author":{"gitId":"Iryna"},"content":"    @Test"},{"lineNumber":88,"author":{"gitId":"Iryna"},"content":"    public void givenExistingCommand_whenDelete_shouldBeDeleted() throws IncorrectCommandParamsException {"},{"lineNumber":89,"author":{"gitId":"Iryna"},"content":"        long id \u003d 0L;"},{"lineNumber":90,"author":{"gitId":"Iryna"},"content":"        String commandName \u003d \"name\";"},{"lineNumber":91,"author":{"gitId":"Iryna"},"content":"        String functionUrl \u003d \"functionUrl\";"},{"lineNumber":92,"author":{"gitId":"Iryna"},"content":"        Assertions.assertFalse(commandService.existsById(id));"},{"lineNumber":93,"author":{"gitId":"Iryna"},"content":"        commandService.createCommand(id, commandName, functionUrl);"},{"lineNumber":94,"author":{"gitId":"Iryna"},"content":"        Command command \u003d commandService.getCommandById(0L);"},{"lineNumber":95,"author":{"gitId":"Iryna"},"content":"        Assertions.assertNotNull(command);"},{"lineNumber":96,"author":{"gitId":"Iryna"},"content":"        commandService.deleteCommandById(id);"},{"lineNumber":97,"author":{"gitId":"Iryna"},"content":"        Assertions.assertFalse(commandService.existsById(id));"},{"lineNumber":98,"author":{"gitId":"Iryna"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":100,"author":{"gitId":"Iryna"},"content":"}"}],"authorContributionMap":{"illia_sitkov":17,"Iryna":83}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/CreateAccessRuleHandlerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"illia_sitkov"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":3,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.exceptions.IncorrectResourceParamsException;"},{"lineNumber":4,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.models.Command;"},{"lineNumber":5,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.models.Resource;"},{"lineNumber":6,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.models.ResourceType;"},{"lineNumber":7,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.processing.CommandCall;"},{"lineNumber":8,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.services.interfaces.AccessRuleService;"},{"lineNumber":9,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.services.interfaces.CommandService;"},{"lineNumber":10,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.services.interfaces.ResourceService;"},{"lineNumber":11,"author":{"gitId":"illia_sitkov"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":12,"author":{"gitId":"illia_sitkov"},"content":"import org.springframework.boot.test.context.TestConfiguration;"},{"lineNumber":13,"author":{"gitId":"illia_sitkov"},"content":"import org.springframework.context.ApplicationEventPublisher;"},{"lineNumber":14,"author":{"gitId":"illia_sitkov"},"content":"import org.springframework.context.annotation.Bean;"},{"lineNumber":15,"author":{"gitId":"illia_sitkov"},"content":"import org.springframework.context.annotation.Primary;"},{"lineNumber":16,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":17,"author":{"gitId":"illia_sitkov"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"},{"lineNumber":18,"author":{"gitId":"illia_sitkov"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":19,"author":{"gitId":"illia_sitkov"},"content":"import static org.mockito.ArgumentMatchers.any;"},{"lineNumber":20,"author":{"gitId":"illia_sitkov"},"content":"import static org.mockito.Mockito.doReturn;"},{"lineNumber":21,"author":{"gitId":"illia_sitkov"},"content":"import static org.mockito.Mockito.mock;"},{"lineNumber":22,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":23,"author":{"gitId":"soloway24"},"content":"public class CreateAccessRuleHandlerTest extends BaseTest {"},{"lineNumber":24,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":25,"author":{"gitId":"illia_sitkov"},"content":"    @TestConfiguration"},{"lineNumber":26,"author":{"gitId":"illia_sitkov"},"content":"    static class TestConfig {"},{"lineNumber":27,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":28,"author":{"gitId":"illia_sitkov"},"content":"        @Bean"},{"lineNumber":29,"author":{"gitId":"illia_sitkov"},"content":"        @Primary"},{"lineNumber":30,"author":{"gitId":"illia_sitkov"},"content":"        public CommandService commandService() {"},{"lineNumber":31,"author":{"gitId":"illia_sitkov"},"content":"            CommandService service \u003d mock(CommandService.class);"},{"lineNumber":32,"author":{"gitId":"illia_sitkov"},"content":"            doReturn(new Command(0L,\"name\",\"functionUrl\")).when(service).getCommandByName(any());"},{"lineNumber":33,"author":{"gitId":"illia_sitkov"},"content":"            return service;"},{"lineNumber":34,"author":{"gitId":"illia_sitkov"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":36,"author":{"gitId":"illia_sitkov"},"content":"        @Bean"},{"lineNumber":37,"author":{"gitId":"illia_sitkov"},"content":"        @Primary"},{"lineNumber":38,"author":{"gitId":"illia_sitkov"},"content":"        public ResourceService resourceService() {"},{"lineNumber":39,"author":{"gitId":"illia_sitkov"},"content":"            ResourceService service \u003d mock(ResourceService.class);"},{"lineNumber":40,"author":{"gitId":"illia_sitkov"},"content":"            try {"},{"lineNumber":41,"author":{"gitId":"illia_sitkov"},"content":"                doReturn(new Resource(0L, 10L, ResourceType.USER)).when(service).getResourceByRealIdAndType(any(), any());"},{"lineNumber":42,"author":{"gitId":"illia_sitkov"},"content":"                return service;"},{"lineNumber":43,"author":{"gitId":"illia_sitkov"},"content":"            } catch (IncorrectResourceParamsException e) {"},{"lineNumber":44,"author":{"gitId":"illia_sitkov"},"content":"                return null;"},{"lineNumber":45,"author":{"gitId":"illia_sitkov"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"illia_sitkov"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":48,"author":{"gitId":"illia_sitkov"},"content":"        @Bean"},{"lineNumber":49,"author":{"gitId":"illia_sitkov"},"content":"        @Primary"},{"lineNumber":50,"author":{"gitId":"illia_sitkov"},"content":"        public AccessRuleService accessRuleService() {"},{"lineNumber":51,"author":{"gitId":"illia_sitkov"},"content":"            return mock(AccessRuleService.class);"},{"lineNumber":52,"author":{"gitId":"illia_sitkov"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":54,"author":{"gitId":"illia_sitkov"},"content":"        @Bean"},{"lineNumber":55,"author":{"gitId":"illia_sitkov"},"content":"        @Primary"},{"lineNumber":56,"author":{"gitId":"illia_sitkov"},"content":"        public ApplicationEventPublisher applicationEventPublisher() {"},{"lineNumber":57,"author":{"gitId":"illia_sitkov"},"content":"            return mock(ApplicationEventPublisher.class);"},{"lineNumber":58,"author":{"gitId":"illia_sitkov"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":60,"author":{"gitId":"illia_sitkov"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":62,"author":{"gitId":"illia_sitkov"},"content":"    @Test"},{"lineNumber":63,"author":{"gitId":"illia_sitkov"},"content":"    public void givenCorrectCommandCall_whenHandle_shouldCreateAccessRule() {"},{"lineNumber":64,"author":{"gitId":"illia_sitkov"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L, new String[]{\"111111\", \"USER\", \"222222\", \"USER\", \"createStudent\", \"true\" });"},{"lineNumber":65,"author":{"gitId":"illia_sitkov"},"content":"        assertDoesNotThrow(() -\u003e createAccessRuleHandler.handle(commandCall));"},{"lineNumber":66,"author":{"gitId":"illia_sitkov"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":68,"author":{"gitId":"illia_sitkov"},"content":"    @Test"},{"lineNumber":69,"author":{"gitId":"illia_sitkov"},"content":"    public void givenCommandCall_whenArgAbsentAndHandle_shouldThrow() {"},{"lineNumber":70,"author":{"gitId":"illia_sitkov"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L, new String[]{\"111111\", \"USER\", \"222222\", \"USER\", \"createStudent\"});"},{"lineNumber":71,"author":{"gitId":"illia_sitkov"},"content":"        assertThrows(Exception.class, () -\u003e createAccessRuleHandler.handle(commandCall));"},{"lineNumber":72,"author":{"gitId":"illia_sitkov"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":74,"author":{"gitId":"illia_sitkov"},"content":"    @Test"},{"lineNumber":75,"author":{"gitId":"illia_sitkov"},"content":"    public void givenCommandCall_whenArgTypeIncorrectAbsentAndHandle_shouldThrow() {"},{"lineNumber":76,"author":{"gitId":"illia_sitkov"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L, new String[]{\"111111\", \"RESOURCE\", \"222222\", \"USER\", \"createStudent\", \"true\" });"},{"lineNumber":77,"author":{"gitId":"illia_sitkov"},"content":"        assertThrows(Exception.class, () -\u003e createAccessRuleHandler.handle(commandCall));"},{"lineNumber":78,"author":{"gitId":"illia_sitkov"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":80,"author":{"gitId":"illia_sitkov"},"content":"}"}],"authorContributionMap":{"illia_sitkov":79,"soloway24":1}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/DeleteAccessRuleHandlerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DanilAndriychenko"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":3,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.commandHandlers.DeleteAccessRuleHandler;"},{"lineNumber":4,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.commandHandlers.UpdateAccessRuleHandler;"},{"lineNumber":5,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.exceptions.IncorrectResourceParamsException;"},{"lineNumber":6,"author":{"gitId":"Hlib Kalinichev"},"content":"import edu.kmaooad.exceptions.NotFoundException;"},{"lineNumber":7,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.models.Command;"},{"lineNumber":8,"author":{"gitId":"Hlib Kalinichev"},"content":"import edu.kmaooad.models.IssuerType;"},{"lineNumber":9,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.models.Resource;"},{"lineNumber":10,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.models.ResourceType;"},{"lineNumber":11,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.processing.CommandCall;"},{"lineNumber":12,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.services.interfaces.AccessRuleService;"},{"lineNumber":13,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.services.interfaces.CommandService;"},{"lineNumber":14,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.services.interfaces.ResourceService;"},{"lineNumber":15,"author":{"gitId":"DanilAndriychenko"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":16,"author":{"gitId":"DanilAndriychenko"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":17,"author":{"gitId":"DanilAndriychenko"},"content":"import org.springframework.boot.test.context.TestConfiguration;"},{"lineNumber":18,"author":{"gitId":"DanilAndriychenko"},"content":"import org.springframework.context.ApplicationEventPublisher;"},{"lineNumber":19,"author":{"gitId":"DanilAndriychenko"},"content":"import org.springframework.context.annotation.Bean;"},{"lineNumber":20,"author":{"gitId":"DanilAndriychenko"},"content":"import org.springframework.context.annotation.Primary;"},{"lineNumber":21,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":22,"author":{"gitId":"Hlib Kalinichev"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"},{"lineNumber":23,"author":{"gitId":"DanilAndriychenko"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":24,"author":{"gitId":"DanilAndriychenko"},"content":"import static org.mockito.ArgumentMatchers.any;"},{"lineNumber":25,"author":{"gitId":"Hlib Kalinichev"},"content":"import static org.mockito.ArgumentMatchers.eq;"},{"lineNumber":26,"author":{"gitId":"Hlib Kalinichev"},"content":"import static org.mockito.Mockito.*;"},{"lineNumber":27,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":28,"author":{"gitId":"DanilAndriychenko"},"content":"public class DeleteAccessRuleHandlerTest extends BaseTest {"},{"lineNumber":29,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":30,"author":{"gitId":"DanilAndriychenko"},"content":"    @Autowired"},{"lineNumber":31,"author":{"gitId":"DanilAndriychenko"},"content":"    protected DeleteAccessRuleHandler deleteAccessRuleHandler;"},{"lineNumber":32,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":33,"author":{"gitId":"DanilAndriychenko"},"content":"    @TestConfiguration"},{"lineNumber":34,"author":{"gitId":"DanilAndriychenko"},"content":"    static class TestConfig {"},{"lineNumber":35,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":36,"author":{"gitId":"DanilAndriychenko"},"content":"        @Bean"},{"lineNumber":37,"author":{"gitId":"DanilAndriychenko"},"content":"        @Primary"},{"lineNumber":38,"author":{"gitId":"DanilAndriychenko"},"content":"        public CommandService commandService() {"},{"lineNumber":39,"author":{"gitId":"DanilAndriychenko"},"content":"            CommandService service \u003d mock(CommandService.class);"},{"lineNumber":40,"author":{"gitId":"DanilAndriychenko"},"content":"            doReturn(new Command(0L,\"name\",\"functionUrl\")).when(service).getCommandByName(any());"},{"lineNumber":41,"author":{"gitId":"DanilAndriychenko"},"content":"            return service;"},{"lineNumber":42,"author":{"gitId":"DanilAndriychenko"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":44,"author":{"gitId":"DanilAndriychenko"},"content":"        @Bean"},{"lineNumber":45,"author":{"gitId":"DanilAndriychenko"},"content":"        @Primary"},{"lineNumber":46,"author":{"gitId":"DanilAndriychenko"},"content":"        public ResourceService resourceService() {"},{"lineNumber":47,"author":{"gitId":"DanilAndriychenko"},"content":"            ResourceService service \u003d mock(ResourceService.class);"},{"lineNumber":48,"author":{"gitId":"DanilAndriychenko"},"content":"            try {"},{"lineNumber":49,"author":{"gitId":"DanilAndriychenko"},"content":"                doReturn(new Resource(0L, 10L, ResourceType.USER)).when(service).getResourceByRealIdAndType(any(), any());"},{"lineNumber":50,"author":{"gitId":"DanilAndriychenko"},"content":"                return service;"},{"lineNumber":51,"author":{"gitId":"DanilAndriychenko"},"content":"            } catch (IncorrectResourceParamsException e) {"},{"lineNumber":52,"author":{"gitId":"DanilAndriychenko"},"content":"                return null;"},{"lineNumber":53,"author":{"gitId":"DanilAndriychenko"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"DanilAndriychenko"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":56,"author":{"gitId":"DanilAndriychenko"},"content":"        @Bean"},{"lineNumber":57,"author":{"gitId":"DanilAndriychenko"},"content":"        @Primary"},{"lineNumber":58,"author":{"gitId":"DanilAndriychenko"},"content":"        public AccessRuleService accessRuleService() {"},{"lineNumber":59,"author":{"gitId":"Hlib Kalinichev"},"content":"            AccessRuleService service \u003d mock(AccessRuleService.class);"},{"lineNumber":60,"author":{"gitId":"Hlib Kalinichev"},"content":"            doReturn(true).when(service).existsById(eq(22L), eq(IssuerType.USER), any(), any());"},{"lineNumber":61,"author":{"gitId":"Hlib Kalinichev"},"content":"            return service;"},{"lineNumber":62,"author":{"gitId":"DanilAndriychenko"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":64,"author":{"gitId":"DanilAndriychenko"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":66,"author":{"gitId":"DanilAndriychenko"},"content":"    @Test"},{"lineNumber":67,"author":{"gitId":"DanilAndriychenko"},"content":"    public void givenCorrectCommandCall_whenHandle_shouldThrowBecauseNoSuchUser() {"},{"lineNumber":68,"author":{"gitId":"DanilAndriychenko"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L, new String[]{\"111111\", \"USER\", \"222222\", \"USER\", \"createStudent\", \"true\" });"},{"lineNumber":69,"author":{"gitId":"DanilAndriychenko"},"content":"        assertThrows(Exception.class, () -\u003e deleteAccessRuleHandler.handle(commandCall));"},{"lineNumber":70,"author":{"gitId":"DanilAndriychenko"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":72,"author":{"gitId":"DanilAndriychenko"},"content":"    @Test"},{"lineNumber":73,"author":{"gitId":"DanilAndriychenko"},"content":"    public void givenCommandCall_whenArgAbsentAndHandle_shouldThrow() {"},{"lineNumber":74,"author":{"gitId":"DanilAndriychenko"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L, new String[]{\"111111\", \"USER\", \"222222\", \"USER\", \"createStudent\"});"},{"lineNumber":75,"author":{"gitId":"DanilAndriychenko"},"content":"        assertThrows(Exception.class, () -\u003e deleteAccessRuleHandler.handle(commandCall));"},{"lineNumber":76,"author":{"gitId":"DanilAndriychenko"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":78,"author":{"gitId":"DanilAndriychenko"},"content":"    @Test"},{"lineNumber":79,"author":{"gitId":"DanilAndriychenko"},"content":"    public void givenCommandCall_whenArgTypeIncorrectAbsentAndHandle_shouldThrow() {"},{"lineNumber":80,"author":{"gitId":"DanilAndriychenko"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L, new String[]{\"111111\", \"RESOURCE\", \"222222\", \"USER\", \"createStudent\", \"true\" });"},{"lineNumber":81,"author":{"gitId":"DanilAndriychenko"},"content":"        assertThrows(Exception.class, () -\u003e deleteAccessRuleHandler.handle(commandCall));"},{"lineNumber":82,"author":{"gitId":"DanilAndriychenko"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":84,"author":{"gitId":"Hlib Kalinichev"},"content":"    @Test"},{"lineNumber":85,"author":{"gitId":"Hlib Kalinichev"},"content":"    public void givenCommandCall_whenHandleCorrectCommandCall_shouldTriggerServiceAndNotThrow() {"},{"lineNumber":86,"author":{"gitId":"Hlib Kalinichev"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 143L, new String[]{\"22\", \"USER\", \"222222\", \"USER\", \"createStudent\", \"true\" });"},{"lineNumber":87,"author":{"gitId":"Hlib Kalinichev"},"content":"        final Long issuerId \u003d 22L;"},{"lineNumber":88,"author":{"gitId":"Hlib Kalinichev"},"content":"        assertDoesNotThrow(() -\u003e deleteAccessRuleHandler.handle(commandCall));"},{"lineNumber":89,"author":{"gitId":"Hlib Kalinichev"},"content":"        verify(accessRuleService).existsById(eq(issuerId), eq(IssuerType.USER), any(), any());"},{"lineNumber":90,"author":{"gitId":"Hlib Kalinichev"},"content":"        verify(accessRuleService).deleteById(eq(issuerId), eq(IssuerType.USER), any(), any());"},{"lineNumber":91,"author":{"gitId":"Hlib Kalinichev"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":93,"author":{"gitId":"Hlib Kalinichev"},"content":"    @Test"},{"lineNumber":94,"author":{"gitId":"Hlib Kalinichev"},"content":"    public void givenCommandCall_whenAccessRuleDoesNotExist_shouldTriggerServiceAndThrowNotFound() {"},{"lineNumber":95,"author":{"gitId":"Hlib Kalinichev"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 143L, new String[]{\"30\", \"DEPARTMENT\", \"222222\", \"USER\", \"createStudent\", \"true\" });"},{"lineNumber":96,"author":{"gitId":"Hlib Kalinichev"},"content":"        final Long issuerId \u003d 30L;"},{"lineNumber":97,"author":{"gitId":"Hlib Kalinichev"},"content":"        assertThrows(NotFoundException.class, () -\u003e deleteAccessRuleHandler.handle(commandCall));"},{"lineNumber":98,"author":{"gitId":"Hlib Kalinichev"},"content":"        verify(accessRuleService).existsById(eq(issuerId), eq(IssuerType.DEPARTMENT), any(), any());"},{"lineNumber":99,"author":{"gitId":"Hlib Kalinichev"},"content":"        verify(accessRuleService, times(0)).deleteById(eq(issuerId), eq(IssuerType.USER), any(), any());"},{"lineNumber":100,"author":{"gitId":"Hlib Kalinichev"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":102,"author":{"gitId":"DanilAndriychenko"},"content":"}"}],"authorContributionMap":{"Hlib Kalinichev":26,"DanilAndriychenko":76}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Hlib Kalinichev"},"content":"//package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"Hlib Kalinichev"},"content":"//"},{"lineNumber":3,"author":{"gitId":"Hlib Kalinichev"},"content":"//import edu.kmaooad.apiCommunication.TelegramWebClient;"},{"lineNumber":4,"author":{"gitId":"Hlib Kalinichev"},"content":"//import edu.kmaooad.events.HandlerEvent;"},{"lineNumber":5,"author":{"gitId":"Hlib Kalinichev"},"content":"//import edu.kmaooad.events.listeners.HandlerEventListener;"},{"lineNumber":6,"author":{"gitId":"Hlib Kalinichev"},"content":"//import org.junit.jupiter.api.AfterEach;"},{"lineNumber":7,"author":{"gitId":"Hlib Kalinichev"},"content":"//import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"Hlib Kalinichev"},"content":"//import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":9,"author":{"gitId":"Hlib Kalinichev"},"content":"//import org.springframework.boot.test.context.TestConfiguration;"},{"lineNumber":10,"author":{"gitId":"Hlib Kalinichev"},"content":"//import org.springframework.context.annotation.Bean;"},{"lineNumber":11,"author":{"gitId":"Hlib Kalinichev"},"content":"//import org.springframework.context.annotation.Primary;"},{"lineNumber":12,"author":{"gitId":"Hlib Kalinichev"},"content":"//"},{"lineNumber":13,"author":{"gitId":"Hlib Kalinichev"},"content":"//import static org.mockito.Mockito.*;"},{"lineNumber":14,"author":{"gitId":"Hlib Kalinichev"},"content":"//"},{"lineNumber":15,"author":{"gitId":"Hlib Kalinichev"},"content":"//public class EventsTest extends BaseTest {"},{"lineNumber":16,"author":{"gitId":"Hlib Kalinichev"},"content":"//"},{"lineNumber":17,"author":{"gitId":"Hlib Kalinichev"},"content":"//    @TestConfiguration"},{"lineNumber":18,"author":{"gitId":"Hlib Kalinichev"},"content":"//    static class TestConfig {"},{"lineNumber":19,"author":{"gitId":"Hlib Kalinichev"},"content":"//        @Bean"},{"lineNumber":20,"author":{"gitId":"Hlib Kalinichev"},"content":"//        @Primary"},{"lineNumber":21,"author":{"gitId":"Hlib Kalinichev"},"content":"//        public HandlerEventListener eventListener() {"},{"lineNumber":22,"author":{"gitId":"Hlib Kalinichev"},"content":"//            HandlerEventListener listener \u003d mock(HandlerEventListener.class);"},{"lineNumber":23,"author":{"gitId":"Hlib Kalinichev"},"content":"//            doNothing().when(listener).onHandlerEvent(any(HandlerEvent.class));"},{"lineNumber":24,"author":{"gitId":"Hlib Kalinichev"},"content":"//            return listener;"},{"lineNumber":25,"author":{"gitId":"Hlib Kalinichev"},"content":"//        }"},{"lineNumber":26,"author":{"gitId":"Hlib Kalinichev"},"content":"//"},{"lineNumber":27,"author":{"gitId":"Hlib Kalinichev"},"content":"//    }"},{"lineNumber":28,"author":{"gitId":"Hlib Kalinichev"},"content":"//"},{"lineNumber":29,"author":{"gitId":"Hlib Kalinichev"},"content":"//    @Test"},{"lineNumber":30,"author":{"gitId":"Hlib Kalinichev"},"content":"//    public void publishEvent_withEventObjectProvided_telegramWebClientTriggered() {"},{"lineNumber":31,"author":{"gitId":"Hlib Kalinichev"},"content":"//        HandlerEvent event \u003d new HandlerEvent(\"Hello msg2\", 569520498L);"},{"lineNumber":32,"author":{"gitId":"Hlib Kalinichev"},"content":"//        applicationEventPublisher.publishEvent(event);"},{"lineNumber":33,"author":{"gitId":"Hlib Kalinichev"},"content":"//        verify(eventListener, atLeastOnce()).onHandlerEvent(any());"},{"lineNumber":34,"author":{"gitId":"Hlib Kalinichev"},"content":"//    }"},{"lineNumber":35,"author":{"gitId":"Hlib Kalinichev"},"content":"//"},{"lineNumber":36,"author":{"gitId":"Hlib Kalinichev"},"content":"//}"}],"authorContributionMap":{"Hlib Kalinichev":36}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/FunctionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.microsoft.azure.functions.ExecutionContext;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.microsoft.azure.functions.HttpRequestMessage;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import com.microsoft.azure.functions.HttpResponseMessage;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.microsoft.azure.functions.HttpStatus;"},{"lineNumber":7,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.exceptions.IncorrectResourceParamsException;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import edu.kmaooad.models.BotUpdate;"},{"lineNumber":9,"author":{"gitId":"Hlib Kalinichev"},"content":"import edu.kmaooad.models.Command;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import edu.kmaooad.repositories.BotUpdateRepository;"},{"lineNumber":11,"author":{"gitId":"illia_sitkov"},"content":"import edu.kmaooad.services.interfaces.AccessCheckService;"},{"lineNumber":12,"author":{"gitId":"Hlib Kalinichev"},"content":"import edu.kmaooad.services.interfaces.CommandService;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import edu.kmaooad.webhook.TelegramWebhook;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import edu.kmaooad.webhook.TelegramWebhookHandler;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.mockito.invocation.InvocationOnMock;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.mockito.stubbing.Answer;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.springframework.boot.test.context.TestConfiguration;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.springframework.context.annotation.Bean;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.springframework.context.annotation.Primary;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Optional;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static org.mockito.ArgumentMatchers.any;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static org.mockito.Mockito.*;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Unit test for Function class."},{"lineNumber":32,"author":{"gitId":"-"},"content":" */"},{"lineNumber":33,"author":{"gitId":"soloway24"},"content":"public class FunctionTest extends BaseTest {"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @TestConfiguration"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    static class TestConfig {"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        @Bean"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        @Primary"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        public BotUpdateRepository getBotUpdateRepository() {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            BotUpdateRepository repository \u003d mock(BotUpdateRepository.class);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            doReturn(null).when(repository).save(any(BotUpdate.class));"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return repository;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":46,"author":{"gitId":"illia_sitkov"},"content":"        @Bean"},{"lineNumber":47,"author":{"gitId":"illia_sitkov"},"content":"        @Primary"},{"lineNumber":48,"author":{"gitId":"illia_sitkov"},"content":"        public AccessCheckService accessCheckService() throws IncorrectResourceParamsException {"},{"lineNumber":49,"author":{"gitId":"illia_sitkov"},"content":"            AccessCheckService service \u003d mock(AccessCheckService.class);"},{"lineNumber":50,"author":{"gitId":"illia_sitkov"},"content":"            doReturn(true).when(service).hasAccess(any(), any(), any(), any());"},{"lineNumber":51,"author":{"gitId":"illia_sitkov"},"content":"            return service;"},{"lineNumber":52,"author":{"gitId":"illia_sitkov"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":54,"author":{"gitId":"Hlib Kalinichev"},"content":"        @Bean"},{"lineNumber":55,"author":{"gitId":"Hlib Kalinichev"},"content":"        @Primary"},{"lineNumber":56,"author":{"gitId":"Hlib Kalinichev"},"content":"        public CommandService commandService() {"},{"lineNumber":57,"author":{"gitId":"Hlib Kalinichev"},"content":"            CommandService service \u003d mock(CommandService.class);"},{"lineNumber":58,"author":{"gitId":"Hlib Kalinichev"},"content":"            doReturn(new Command(0L, \"createStudent\", \"\")).when(service).getCommandByName(eq(\"createStudent\"));"},{"lineNumber":59,"author":{"gitId":"Hlib Kalinichev"},"content":"            return service;"},{"lineNumber":60,"author":{"gitId":"Hlib Kalinichev"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static final String BAD_RESPONSE \u003d \"Request body must not be blank and must have message object with message_id field\";"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private HttpRequestMessage\u003cOptional\u003cString\u003e\u003e getReq(Optional\u003cString\u003e queryBody) {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Setup"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        @SuppressWarnings(\"unchecked\") final HttpRequestMessage\u003cOptional\u003cString\u003e\u003e req \u003d mock(HttpRequestMessage.class);"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"        doReturn(queryBody).when(req).getBody();"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"        doAnswer(new Answer\u003cHttpResponseMessage.Builder\u003e() {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            @Override"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            public HttpResponseMessage.Builder answer(InvocationOnMock invocation) {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                HttpStatus status \u003d (HttpStatus) invocation.getArguments()[0];"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                return new HttpResponseMessageMock.HttpResponseMessageBuilderMock().status(status);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }).when(req).createResponseBuilder(any(HttpStatus.class));"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return req;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private ExecutionContext getContext() {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Setup"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        final ExecutionContext context \u003d mock(ExecutionContext.class);"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        doReturn(Logger.getGlobal()).when(context).getLogger();"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        doReturn(\"TelegramWebhook\").when(context).getFunctionName();"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return context;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void testFunctionWithoutBody() {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Invoke"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        final HttpResponseMessage ret \u003d new TelegramWebhookHandler().run(getReq(Optional.empty()), getContext());"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // Verify"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(HttpStatus.BAD_REQUEST, ret.getStatus());"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(BAD_RESPONSE, ret.getBody());"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void testFunctionWithWrongStringInBody() {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // Invoke"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final HttpResponseMessage ret \u003d new TelegramWebhookHandler().run(getReq(Optional.of(\"Azure\")), getContext());"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Verify"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(HttpStatus.BAD_REQUEST, ret.getStatus());"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(BAD_RESPONSE, ret.getBody());"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void testFunctionWithMessageWithoutMessageIdInBody() {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // Invoke"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        final HttpResponseMessage ret \u003d new TelegramWebhookHandler().run(getReq(Optional.of(\"{\\n\" +"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                \"    \\\"message\\\": {}\\n\" +"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \"}\")), getContext());"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // Verify"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(HttpStatus.BAD_REQUEST, ret.getStatus());"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(BAD_RESPONSE, ret.getBody());"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void testFunctionWithMessageIdWithoutMessageInBody() {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // Invoke"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final HttpResponseMessage ret \u003d new TelegramWebhookHandler().run(getReq(Optional.of(\"{\\n\" +"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                \"    \\\"message_id\\\": 12345\\n\" +"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                \"}\")), getContext());"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // Verify"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(HttpStatus.BAD_REQUEST, ret.getStatus());"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(BAD_RESPONSE, ret.getBody());"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void testFunctionWithWrongTypeOfMessageIdInBody() {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // Invoke"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        final HttpResponseMessage ret \u003d new TelegramWebhookHandler().run(getReq(Optional.of(\"{\\n\" +"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \"    \\\"message\\\": {\\n\" +"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \"        \\\"message_id\\\": some_id\\n\" +"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                \"    }\\n\" +"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                \"}\")), getContext());"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // Verify"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(HttpStatus.BAD_REQUEST, ret.getStatus());"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(BAD_RESPONSE, ret.getBody());"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private TelegramWebhookHandler getHandler() {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        TelegramWebhookHandler handler \u003d spy(TelegramWebhookHandler.class);"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        doAnswer(invocationOnMock -\u003e applicationContext.getBean(TelegramWebhook.class).apply(invocationOnMock.getArgument(0)))"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .when(handler).handleRequest(any(BotUpdate.class), any(ExecutionContext.class));"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return handler;"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void testFunctionWithCorrectBody() {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // Invoke"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        final HttpResponseMessage ret \u003d getHandler().run(getReq(Optional.of("},{"lineNumber":154,"author":{"gitId":"-"},"content":"                \"{\\n\" +"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                        \"    \\\"update_id\\\":23433,\\n\" +"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                        \"    \\\"message\\\":{\\n\" +"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                        \"        \\\"message_id\\\":111,\\n\" +"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                        \"        \\\"from\\\":{\\n\" +"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                        \"            \\\"id\\\":569520498,\\n\" +"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                        \"            \\\"is_bot\\\":false,\\n\" +"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                        \"            \\\"first_name\\\":\\\"Gleb\\\",\\n\" +"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                        \"            \\\"username\\\":\\\"Pelagus21\\\",\\n\" +"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                        \"            \\\"language_code\\\":\\\"uk\\\"\\n\" +"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                        \"        },\\n\" +"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                        \"        \\\"chat\\\":{\\n\" +"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                        \"            \\\"id\\\":569520498,\\n\" +"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                        \"            \\\"first_name\\\":\\\"Gleb\\\",\\n\" +"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                        \"            \\\"username\\\":\\\"Pelagus21\\\",\\n\" +"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                        \"            \\\"type\\\":\\\"private\\\"\\n\" +"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                        \"        },\\n\" +"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                        \"        \\\"date\\\":1666633719,\\n\" +"},{"lineNumber":172,"author":{"gitId":"illia_sitkov"},"content":"                        \"        \\\"text\\\":\\\"createStudent 1 USER\\\"\\n\" +"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                        \"    }\\n\" +"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                        \"}\""},{"lineNumber":175,"author":{"gitId":"-"},"content":"        )), getContext());"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // Verify"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertEquals(HttpStatus.OK, ret.getStatus());"},{"lineNumber":178,"author":{"gitId":"Hlib Kalinichev"},"content":"        //assertEquals(\"message_id\u003d111\", ret.getBody());"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"illia_sitkov":11,"soloway24":1,"Hlib Kalinichev":11,"-":158}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/HttpResponseMessageMock.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"soloway24"},"content":"import com.microsoft.azure.functions.HttpResponseMessage;"},{"lineNumber":4,"author":{"gitId":"soloway24"},"content":"import com.microsoft.azure.functions.HttpStatus;"},{"lineNumber":5,"author":{"gitId":"soloway24"},"content":"import com.microsoft.azure.functions.HttpStatusType;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":8,"author":{"gitId":"soloway24"},"content":"import java.util.Map;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The mock for HttpResponseMessage, can be used in unit tests to verify if the"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * returned response by HTTP trigger function is correct or not."},{"lineNumber":13,"author":{"gitId":"-"},"content":" */"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class HttpResponseMessageMock implements HttpResponseMessage {"},{"lineNumber":15,"author":{"gitId":"soloway24"},"content":"    private final int httpStatusCode;"},{"lineNumber":16,"author":{"gitId":"soloway24"},"content":"    private final HttpStatusType httpStatus;"},{"lineNumber":17,"author":{"gitId":"soloway24"},"content":"    private final Object body;"},{"lineNumber":18,"author":{"gitId":"soloway24"},"content":"    private final Map\u003cString, String\u003e headers;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public HttpResponseMessageMock(HttpStatusType status, Map\u003cString, String\u003e headers, Object body) {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.httpStatus \u003d status;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.httpStatusCode \u003d status.value();"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.headers \u003d headers;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.body \u003d body;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public HttpStatusType getStatus() {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return this.httpStatus;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public int getStatusCode() {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return httpStatusCode;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String getHeader(String key) {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return this.headers.get(key);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Object getBody() {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return this.body;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static class HttpResponseMessageBuilderMock implements HttpResponseMessage.Builder {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        private Object body;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        private int httpStatusCode;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e headers \u003d new HashMap\u003c\u003e();"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        private HttpStatusType httpStatus;"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"        public Builder status(HttpStatus status) {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            this.httpStatusCode \u003d status.value();"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            this.httpStatus \u003d status;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"        @Override"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        public Builder status(HttpStatusType httpStatusType) {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            this.httpStatusCode \u003d httpStatusType.value();"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            this.httpStatus \u003d httpStatusType;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"        @Override"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        public HttpResponseMessage.Builder header(String key, String value) {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            this.headers.put(key, value);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"        @Override"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        public HttpResponseMessage.Builder body(Object body) {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            this.body \u003d body;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"        @Override"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        public HttpResponseMessage build() {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new HttpResponseMessageMock(this.httpStatus, this.headers, this.body);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"soloway24":8,"-":75}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/OtherCommandHandlerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Iryna"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":3,"author":{"gitId":"Iryna"},"content":"import edu.kmaooad.exceptions.NotFoundException;"},{"lineNumber":4,"author":{"gitId":"Iryna"},"content":"import edu.kmaooad.models.Command;"},{"lineNumber":5,"author":{"gitId":"Iryna"},"content":"import edu.kmaooad.processing.CommandCall;"},{"lineNumber":6,"author":{"gitId":"Iryna"},"content":"import edu.kmaooad.services.interfaces.CommandService;"},{"lineNumber":7,"author":{"gitId":"Iryna"},"content":"import okhttp3.mockwebserver.MockResponse;"},{"lineNumber":8,"author":{"gitId":"Iryna"},"content":"import okhttp3.mockwebserver.MockWebServer;"},{"lineNumber":9,"author":{"gitId":"Iryna"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"Iryna"},"content":"import org.springframework.boot.test.context.TestConfiguration;"},{"lineNumber":11,"author":{"gitId":"Iryna"},"content":"import org.springframework.context.ApplicationEventPublisher;"},{"lineNumber":12,"author":{"gitId":"Iryna"},"content":"import org.springframework.context.annotation.Bean;"},{"lineNumber":13,"author":{"gitId":"Iryna"},"content":"import org.springframework.context.annotation.Primary;"},{"lineNumber":14,"author":{"gitId":"Iryna"},"content":"import org.springframework.web.reactive.function.client.WebClient;"},{"lineNumber":15,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":16,"author":{"gitId":"Iryna"},"content":"import java.io.IOException;"},{"lineNumber":17,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":18,"author":{"gitId":"Iryna"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"},{"lineNumber":19,"author":{"gitId":"Iryna"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":20,"author":{"gitId":"Iryna"},"content":"import static org.mockito.Mockito.*;"},{"lineNumber":21,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":22,"author":{"gitId":"soloway24"},"content":"public class OtherCommandHandlerTest extends BaseTest {"},{"lineNumber":23,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":24,"author":{"gitId":"Iryna"},"content":"    @TestConfiguration"},{"lineNumber":25,"author":{"gitId":"Iryna"},"content":"    static class TestConfig {"},{"lineNumber":26,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":27,"author":{"gitId":"Iryna"},"content":"        private final MockWebServer server;"},{"lineNumber":28,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":29,"author":{"gitId":"Iryna"},"content":"        TestConfig() throws IOException {"},{"lineNumber":30,"author":{"gitId":"Iryna"},"content":"            server \u003d new MockWebServer();"},{"lineNumber":31,"author":{"gitId":"Iryna"},"content":"            server.start();"},{"lineNumber":32,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":33,"author":{"gitId":"Iryna"},"content":"            MockResponse response \u003d new MockResponse()"},{"lineNumber":34,"author":{"gitId":"Iryna"},"content":"                    .addHeader(\"Content-Type\", \"application/text\")"},{"lineNumber":35,"author":{"gitId":"Iryna"},"content":"                    .setBody(\"Student successfully created!\");"},{"lineNumber":36,"author":{"gitId":"Iryna"},"content":"            server.enqueue(response);"},{"lineNumber":37,"author":{"gitId":"Iryna"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":39,"author":{"gitId":"Iryna"},"content":"        @Bean"},{"lineNumber":40,"author":{"gitId":"Iryna"},"content":"        @Primary"},{"lineNumber":41,"author":{"gitId":"Iryna"},"content":"        public CommandService commandService() {"},{"lineNumber":42,"author":{"gitId":"Iryna"},"content":"            CommandService service \u003d mock(CommandService.class);"},{"lineNumber":43,"author":{"gitId":"Iryna"},"content":"            doReturn(new Command(0L,\"createStudent\",this.server.url(\"\") + \"/endpoint\")).when(service).getCommandById(0L);"},{"lineNumber":44,"author":{"gitId":"Iryna"},"content":"            doThrow(new NotFoundException(Command.class.getSimpleName())).when(service).getCommandById(1L);"},{"lineNumber":45,"author":{"gitId":"Iryna"},"content":"            return service;"},{"lineNumber":46,"author":{"gitId":"Iryna"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":48,"author":{"gitId":"Iryna"},"content":"        @Bean"},{"lineNumber":49,"author":{"gitId":"Iryna"},"content":"        @Primary"},{"lineNumber":50,"author":{"gitId":"Iryna"},"content":"        public WebClient webClient() {"},{"lineNumber":51,"author":{"gitId":"Iryna"},"content":"            String rootUrl \u003d this.server.url(\"\").toString();"},{"lineNumber":52,"author":{"gitId":"Iryna"},"content":"            return WebClient.create(rootUrl);"},{"lineNumber":53,"author":{"gitId":"Iryna"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":55,"author":{"gitId":"Iryna"},"content":"        @Bean"},{"lineNumber":56,"author":{"gitId":"Iryna"},"content":"        @Primary"},{"lineNumber":57,"author":{"gitId":"Iryna"},"content":"        public ApplicationEventPublisher applicationEventPublisher() {"},{"lineNumber":58,"author":{"gitId":"Iryna"},"content":"            return mock(ApplicationEventPublisher.class);"},{"lineNumber":59,"author":{"gitId":"Iryna"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":61,"author":{"gitId":"Iryna"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":63,"author":{"gitId":"Iryna"},"content":"    @Test"},{"lineNumber":64,"author":{"gitId":"Iryna"},"content":"    public void givenCorrectCommandCall_whenHandle_shouldSendRequestToAnotherMicroservice() {"},{"lineNumber":65,"author":{"gitId":"Iryna"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L,"},{"lineNumber":66,"author":{"gitId":"Iryna"},"content":"                new String[]{\"createStudent\", \"Petrenko\", \"Petro\"});"},{"lineNumber":67,"author":{"gitId":"Iryna"},"content":"        assertDoesNotThrow(() -\u003e otherCommandHandler.handle(commandCall));"},{"lineNumber":68,"author":{"gitId":"Iryna"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":70,"author":{"gitId":"Iryna"},"content":"    @Test"},{"lineNumber":71,"author":{"gitId":"Iryna"},"content":"    public void givenCommandCall_whenCommandByIdAbsent_shouldThrow() {"},{"lineNumber":72,"author":{"gitId":"Iryna"},"content":"        CommandCall commandCall \u003d new CommandCall(1L, 123L, 456L,"},{"lineNumber":73,"author":{"gitId":"Iryna"},"content":"                new String[]{\"createStudent\", \"Petrenko\", \"Petro\"});"},{"lineNumber":74,"author":{"gitId":"Iryna"},"content":"        assertThrows(Exception.class, () -\u003e otherCommandHandler.handle(commandCall));"},{"lineNumber":75,"author":{"gitId":"Iryna"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"Iryna"},"content":""},{"lineNumber":77,"author":{"gitId":"Iryna"},"content":"}"}],"authorContributionMap":{"soloway24":1,"Iryna":76}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/ResourceServiceImplTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soloway24"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":3,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.exceptions.IncorrectResourceParamsException;"},{"lineNumber":4,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.exceptions.NotFoundException;"},{"lineNumber":5,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.exceptions.ResourceCompositeFieldNotUniqueException;"},{"lineNumber":6,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.models.Resource;"},{"lineNumber":7,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.models.ResourceCompositeField;"},{"lineNumber":8,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.models.ResourceType;"},{"lineNumber":9,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.repositories.ResourceRepository;"},{"lineNumber":10,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.services.implementations.ResourceServiceImpl;"},{"lineNumber":11,"author":{"gitId":"soloway24"},"content":"import edu.kmaooad.services.interfaces.ResourceService;"},{"lineNumber":12,"author":{"gitId":"soloway24"},"content":"import org.assertj.core.api.Assertions;"},{"lineNumber":13,"author":{"gitId":"soloway24"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":14,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":15,"author":{"gitId":"soloway24"},"content":"import java.util.Optional;"},{"lineNumber":16,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":17,"author":{"gitId":"soloway24"},"content":"import static org.assertj.core.api.Assertions.assertThat;"},{"lineNumber":18,"author":{"gitId":"soloway24"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":19,"author":{"gitId":"soloway24"},"content":"import static org.mockito.ArgumentMatchers.any;"},{"lineNumber":20,"author":{"gitId":"soloway24"},"content":"import static org.mockito.Mockito.mock;"},{"lineNumber":21,"author":{"gitId":"soloway24"},"content":"import static org.mockito.Mockito.when;"},{"lineNumber":22,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":23,"author":{"gitId":"soloway24"},"content":"class ResourceServiceImplTest {"},{"lineNumber":24,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":25,"author":{"gitId":"soloway24"},"content":"    private final ResourceRepository resourceRepository \u003d mock(ResourceRepository.class);"},{"lineNumber":26,"author":{"gitId":"soloway24"},"content":"    private final ResourceService resourceService \u003d new ResourceServiceImpl(resourceRepository);"},{"lineNumber":27,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":28,"author":{"gitId":"soloway24"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"soloway24"},"content":"    void whenCreateResourceThenSuccess() throws Exception {"},{"lineNumber":30,"author":{"gitId":"soloway24"},"content":"        Long realId \u003d 2L;"},{"lineNumber":31,"author":{"gitId":"soloway24"},"content":"        ResourceType type \u003d ResourceType.DEPARTMENT;"},{"lineNumber":32,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":33,"author":{"gitId":"soloway24"},"content":"        ResourceCompositeField rcf \u003d new ResourceCompositeField(realId, type);"},{"lineNumber":34,"author":{"gitId":"soloway24"},"content":"        when(resourceRepository.existsByRealResource(rcf)).thenReturn(false);"},{"lineNumber":35,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":36,"author":{"gitId":"soloway24"},"content":"        Resource resource \u003d new Resource(null, realId, type);"},{"lineNumber":37,"author":{"gitId":"soloway24"},"content":"        when(resourceRepository.save(any())).thenReturn(resource);"},{"lineNumber":38,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":39,"author":{"gitId":"soloway24"},"content":"        assertThat(resourceService.createResource(realId, type)).isEqualTo(resource);"},{"lineNumber":40,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":42,"author":{"gitId":"soloway24"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"soloway24"},"content":"    void whenCreateResourceWithNullRealIdThenFailure() {"},{"lineNumber":44,"author":{"gitId":"soloway24"},"content":"        assertThrows(IncorrectResourceParamsException.class,"},{"lineNumber":45,"author":{"gitId":"soloway24"},"content":"                () -\u003e resourceService.createResource(null, ResourceType.DEPARTMENT));"},{"lineNumber":46,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":48,"author":{"gitId":"soloway24"},"content":"    @Test"},{"lineNumber":49,"author":{"gitId":"soloway24"},"content":"    void whenCreateResourceWithNullResTypeThenFailure() {"},{"lineNumber":50,"author":{"gitId":"soloway24"},"content":"        assertThrows(IncorrectResourceParamsException.class,"},{"lineNumber":51,"author":{"gitId":"soloway24"},"content":"                () -\u003e resourceService.createResource(1L, null));"},{"lineNumber":52,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":54,"author":{"gitId":"soloway24"},"content":"    @Test"},{"lineNumber":55,"author":{"gitId":"soloway24"},"content":"    void whenCreateExistingResourceThenFailure() {"},{"lineNumber":56,"author":{"gitId":"soloway24"},"content":"        Long realId \u003d 2L;"},{"lineNumber":57,"author":{"gitId":"soloway24"},"content":"        ResourceType type \u003d ResourceType.DEPARTMENT;"},{"lineNumber":58,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":59,"author":{"gitId":"soloway24"},"content":"        ResourceCompositeField rcf \u003d new ResourceCompositeField(realId, type);"},{"lineNumber":60,"author":{"gitId":"soloway24"},"content":"        when(resourceRepository.existsByRealResource(rcf)).thenReturn(true);"},{"lineNumber":61,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":62,"author":{"gitId":"soloway24"},"content":"        assertThrows(ResourceCompositeFieldNotUniqueException.class,"},{"lineNumber":63,"author":{"gitId":"soloway24"},"content":"                () -\u003e resourceService.createResource(realId, type));"},{"lineNumber":64,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":66,"author":{"gitId":"soloway24"},"content":"    @Test"},{"lineNumber":67,"author":{"gitId":"soloway24"},"content":"    void whenGetResourceByIdThenSuccess() {"},{"lineNumber":68,"author":{"gitId":"soloway24"},"content":"        Long id \u003d 1L;"},{"lineNumber":69,"author":{"gitId":"soloway24"},"content":"        Resource resource \u003d new Resource();"},{"lineNumber":70,"author":{"gitId":"soloway24"},"content":"        when(resourceRepository.findById(id)).thenReturn(Optional.of(resource));"},{"lineNumber":71,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":72,"author":{"gitId":"soloway24"},"content":"        assertThat(resourceService.getResourceById(id)).isEqualTo(resource);"},{"lineNumber":73,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":75,"author":{"gitId":"soloway24"},"content":"    @Test"},{"lineNumber":76,"author":{"gitId":"soloway24"},"content":"    void whenGetResourceByNonExistingIdThenFailure() {"},{"lineNumber":77,"author":{"gitId":"soloway24"},"content":"        Long id \u003d 1L;"},{"lineNumber":78,"author":{"gitId":"soloway24"},"content":"        when(resourceRepository.findById(id)).thenReturn(Optional.empty());"},{"lineNumber":79,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":80,"author":{"gitId":"soloway24"},"content":"        assertThrows(NotFoundException.class,"},{"lineNumber":81,"author":{"gitId":"soloway24"},"content":"                () -\u003e resourceService.getResourceById(id));"},{"lineNumber":82,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":84,"author":{"gitId":"soloway24"},"content":"    @Test"},{"lineNumber":85,"author":{"gitId":"soloway24"},"content":"    void whenUpdateResourceThenSuccess() throws Exception {"},{"lineNumber":86,"author":{"gitId":"soloway24"},"content":"        Long id \u003d 1L;"},{"lineNumber":87,"author":{"gitId":"soloway24"},"content":"        Long realId \u003d 2L;"},{"lineNumber":88,"author":{"gitId":"soloway24"},"content":"        ResourceType type \u003d ResourceType.DEPARTMENT;"},{"lineNumber":89,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":90,"author":{"gitId":"soloway24"},"content":"        ResourceCompositeField rcf \u003d new ResourceCompositeField(realId, type);"},{"lineNumber":91,"author":{"gitId":"soloway24"},"content":"        when(resourceRepository.existsByRealResource(rcf)).thenReturn(false);"},{"lineNumber":92,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":93,"author":{"gitId":"soloway24"},"content":"        when(resourceRepository.existsById(id)).thenReturn(true);"},{"lineNumber":94,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":95,"author":{"gitId":"soloway24"},"content":"        Resource resource \u003d new Resource(null, realId, type);"},{"lineNumber":96,"author":{"gitId":"soloway24"},"content":"        when(resourceRepository.save(any())).thenReturn(resource);"},{"lineNumber":97,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":98,"author":{"gitId":"soloway24"},"content":"        assertThat(resourceService.updateResource(id, realId, type)).isEqualTo(resource);"},{"lineNumber":99,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":101,"author":{"gitId":"soloway24"},"content":"    @Test"},{"lineNumber":102,"author":{"gitId":"soloway24"},"content":"    void whenUpdateResourceWithNullIdThenFailure() {"},{"lineNumber":103,"author":{"gitId":"soloway24"},"content":"        assertThrows(IncorrectResourceParamsException.class,"},{"lineNumber":104,"author":{"gitId":"soloway24"},"content":"                () -\u003e resourceService.updateResource(null, 1L, ResourceType.DEPARTMENT));"},{"lineNumber":105,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":107,"author":{"gitId":"soloway24"},"content":"    @Test"},{"lineNumber":108,"author":{"gitId":"soloway24"},"content":"    void whenUpdateResourceWithNullRealIdThenFailure() {"},{"lineNumber":109,"author":{"gitId":"soloway24"},"content":"        assertThrows(IncorrectResourceParamsException.class,"},{"lineNumber":110,"author":{"gitId":"soloway24"},"content":"                () -\u003e resourceService.updateResource(1L, null, ResourceType.DEPARTMENT));"},{"lineNumber":111,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":113,"author":{"gitId":"soloway24"},"content":"    @Test"},{"lineNumber":114,"author":{"gitId":"soloway24"},"content":"    void whenUpdateResourceWithNullResTypeThenFailure() {"},{"lineNumber":115,"author":{"gitId":"soloway24"},"content":"        assertThrows(IncorrectResourceParamsException.class,"},{"lineNumber":116,"author":{"gitId":"soloway24"},"content":"                () -\u003e resourceService.updateResource(1L, 2L, null));"},{"lineNumber":117,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":119,"author":{"gitId":"soloway24"},"content":"    @Test"},{"lineNumber":120,"author":{"gitId":"soloway24"},"content":"    void whenUpdateResourceByNonExistingIdThenFailure() {"},{"lineNumber":121,"author":{"gitId":"soloway24"},"content":"        Long id \u003d 1L;"},{"lineNumber":122,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":123,"author":{"gitId":"soloway24"},"content":"        when(resourceRepository.existsById(id)).thenReturn(false);"},{"lineNumber":124,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":125,"author":{"gitId":"soloway24"},"content":"        assertThrows(NotFoundException.class,"},{"lineNumber":126,"author":{"gitId":"soloway24"},"content":"                () -\u003e resourceService.updateResource(id, 2L, ResourceType.DEPARTMENT));"},{"lineNumber":127,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":129,"author":{"gitId":"soloway24"},"content":"    @Test"},{"lineNumber":130,"author":{"gitId":"soloway24"},"content":"    void whenUpdateResourceByExistingCompKeyThenFailure() {"},{"lineNumber":131,"author":{"gitId":"soloway24"},"content":"        Long id \u003d 1L;"},{"lineNumber":132,"author":{"gitId":"soloway24"},"content":"        Long realId \u003d 2L;"},{"lineNumber":133,"author":{"gitId":"soloway24"},"content":"        ResourceType type \u003d ResourceType.DEPARTMENT;"},{"lineNumber":134,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":135,"author":{"gitId":"soloway24"},"content":"        when(resourceRepository.existsById(id)).thenReturn(true);"},{"lineNumber":136,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":137,"author":{"gitId":"soloway24"},"content":"        ResourceCompositeField rcf \u003d new ResourceCompositeField(realId, type);"},{"lineNumber":138,"author":{"gitId":"soloway24"},"content":"        when(resourceRepository.existsByRealResource(rcf)).thenReturn(true);"},{"lineNumber":139,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":140,"author":{"gitId":"soloway24"},"content":"        assertThrows(ResourceCompositeFieldNotUniqueException.class,"},{"lineNumber":141,"author":{"gitId":"soloway24"},"content":"                () -\u003e resourceService.updateResource(id, realId, type));"},{"lineNumber":142,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":144,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":145,"author":{"gitId":"soloway24"},"content":"    @Test"},{"lineNumber":146,"author":{"gitId":"soloway24"},"content":"    void whenDeleteResourceByIdThenSuccess() {"},{"lineNumber":147,"author":{"gitId":"soloway24"},"content":"        Long id \u003d 1L;"},{"lineNumber":148,"author":{"gitId":"soloway24"},"content":"        Resource resource \u003d new Resource();"},{"lineNumber":149,"author":{"gitId":"soloway24"},"content":"        when(resourceRepository.findById(id)).thenReturn(Optional.of(resource));"},{"lineNumber":150,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":151,"author":{"gitId":"soloway24"},"content":"        assertThat(resourceService.deleteResourceById(id)).isEqualTo(resource);"},{"lineNumber":152,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":154,"author":{"gitId":"soloway24"},"content":"    @Test"},{"lineNumber":155,"author":{"gitId":"soloway24"},"content":"    void whenDeleteResourceByNonExistingIdThenFailure() {"},{"lineNumber":156,"author":{"gitId":"soloway24"},"content":"        Long id \u003d 1L;"},{"lineNumber":157,"author":{"gitId":"soloway24"},"content":"        when(resourceRepository.findById(id)).thenReturn(Optional.empty());"},{"lineNumber":158,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":159,"author":{"gitId":"soloway24"},"content":"        assertThat(resourceService.deleteResourceById(id)).isNull();"},{"lineNumber":160,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":162,"author":{"gitId":"soloway24"},"content":"    @Test"},{"lineNumber":163,"author":{"gitId":"soloway24"},"content":"    void whenExistsByExistingIdThenTrue() {"},{"lineNumber":164,"author":{"gitId":"soloway24"},"content":"        Long id \u003d 1L;"},{"lineNumber":165,"author":{"gitId":"soloway24"},"content":"        when(resourceRepository.existsById(id)).thenReturn(true);"},{"lineNumber":166,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":167,"author":{"gitId":"soloway24"},"content":"        assertThat(resourceService.existsById(id)).isTrue();"},{"lineNumber":168,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":170,"author":{"gitId":"soloway24"},"content":"    @Test"},{"lineNumber":171,"author":{"gitId":"soloway24"},"content":"    void whenExistsByNonExistingIdThenFalse() {"},{"lineNumber":172,"author":{"gitId":"soloway24"},"content":"        Long id \u003d 1L;"},{"lineNumber":173,"author":{"gitId":"soloway24"},"content":"        when(resourceRepository.existsById(id)).thenReturn(false);"},{"lineNumber":174,"author":{"gitId":"soloway24"},"content":""},{"lineNumber":175,"author":{"gitId":"soloway24"},"content":"        assertThat(resourceService.existsById(id)).isFalse();"},{"lineNumber":176,"author":{"gitId":"soloway24"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"soloway24"},"content":"}"}],"authorContributionMap":{"soloway24":177}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/TelegramWebClientTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import edu.kmaooad.apiCommunication.TelegramWebClient;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import edu.kmaooad.config.BotPropertiesConfig;"},{"lineNumber":5,"author":{"gitId":"Hlib Kalinichev"},"content":"import edu.kmaooad.events.HandlerEvent;"},{"lineNumber":6,"author":{"gitId":"Hlib Kalinichev"},"content":"import edu.kmaooad.events.listeners.HandlerEventListener;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import edu.kmaooad.exceptions.TelegramBadRequestException;"},{"lineNumber":8,"author":{"gitId":"Hlib Kalinichev"},"content":"import edu.kmaooad.utils.WebClientRequestLogger;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeAll;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":12,"author":{"gitId":"Hlib Kalinichev"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":13,"author":{"gitId":"Hlib Kalinichev"},"content":"import org.springframework.boot.test.context.TestConfiguration;"},{"lineNumber":14,"author":{"gitId":"Hlib Kalinichev"},"content":"import org.springframework.context.annotation.Bean;"},{"lineNumber":15,"author":{"gitId":"Hlib Kalinichev"},"content":"import org.springframework.context.annotation.Primary;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"Hlib Kalinichev"},"content":"import static org.mockito.Mockito.*;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"Hlib Kalinichev"},"content":"public class TelegramWebClientTest extends BaseTest {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String TOKEN \u003d \"5744895470:AAGVTEtxpQ322706Z5Qo0YSvVJDAOVXLveo\";"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Long CHAT_ID \u003d 569520498L;"},{"lineNumber":23,"author":{"gitId":"Hlib Kalinichev"},"content":"    private static final String baseUrl \u003d new StringBuilder(\"https://api.telegram.org/bot\")"},{"lineNumber":24,"author":{"gitId":"Hlib Kalinichev"},"content":"                    .append(TOKEN)"},{"lineNumber":25,"author":{"gitId":"Hlib Kalinichev"},"content":"                    .append(\"/sendMessage?chat_id\u003d\")"},{"lineNumber":26,"author":{"gitId":"Hlib Kalinichev"},"content":"                    .toString();"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"Hlib Kalinichev"},"content":"    @TestConfiguration"},{"lineNumber":29,"author":{"gitId":"Hlib Kalinichev"},"content":"    static class TestConfig {"},{"lineNumber":30,"author":{"gitId":"Hlib Kalinichev"},"content":"        @Bean"},{"lineNumber":31,"author":{"gitId":"Hlib Kalinichev"},"content":"        @Primary"},{"lineNumber":32,"author":{"gitId":"Hlib Kalinichev"},"content":"        public WebClientRequestLogger webClientLogger() {"},{"lineNumber":33,"author":{"gitId":"Hlib Kalinichev"},"content":"            WebClientRequestLogger log \u003d mock(WebClientRequestLogger.class);"},{"lineNumber":34,"author":{"gitId":"Hlib Kalinichev"},"content":"            doNothing().when(log).logRequest(anyString());"},{"lineNumber":35,"author":{"gitId":"Hlib Kalinichev"},"content":"            return log;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"Hlib Kalinichev"},"content":"    @Autowired"},{"lineNumber":40,"author":{"gitId":"Hlib Kalinichev"},"content":"    private WebClientRequestLogger logger;"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void sendMessage_whenChatIdProvided_thenResponseIsOK() {"},{"lineNumber":44,"author":{"gitId":"Hlib Kalinichev"},"content":"        String text \u003d \"Hello from Test\";"},{"lineNumber":45,"author":{"gitId":"Hlib Kalinichev"},"content":"        boolean res \u003d webClient.sendMessage(text, CHAT_ID);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(res);"},{"lineNumber":47,"author":{"gitId":"Hlib Kalinichev"},"content":"        String req \u003d new StringBuilder(baseUrl)"},{"lineNumber":48,"author":{"gitId":"Hlib Kalinichev"},"content":"                .append(CHAT_ID)"},{"lineNumber":49,"author":{"gitId":"Hlib Kalinichev"},"content":"                .append(\"\u0026text\u003d\")"},{"lineNumber":50,"author":{"gitId":"Hlib Kalinichev"},"content":"                .append(text.replaceAll(\"\\\\s+\", \"%20\"))"},{"lineNumber":51,"author":{"gitId":"Hlib Kalinichev"},"content":"                .toString();"},{"lineNumber":52,"author":{"gitId":"Hlib Kalinichev"},"content":"        verify(logger, atLeastOnce()).logRequest(req);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void sendMessage_whenChatIdIsNotCorrect_thenBadRequest() {"},{"lineNumber":57,"author":{"gitId":"Hlib Kalinichev"},"content":"        String msg2 \u003d \"Hello from Test2\";"},{"lineNumber":58,"author":{"gitId":"Hlib Kalinichev"},"content":"        Long chatId \u003d 1L;"},{"lineNumber":59,"author":{"gitId":"Hlib Kalinichev"},"content":"        String req \u003d new StringBuilder(baseUrl)"},{"lineNumber":60,"author":{"gitId":"Hlib Kalinichev"},"content":"                .append(chatId)"},{"lineNumber":61,"author":{"gitId":"Hlib Kalinichev"},"content":"                .append(\"\u0026text\u003d\")"},{"lineNumber":62,"author":{"gitId":"Hlib Kalinichev"},"content":"                .append(msg2.replaceAll(\"\\\\s+\", \"%20\"))"},{"lineNumber":63,"author":{"gitId":"Hlib Kalinichev"},"content":"                .toString();"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(TelegramBadRequestException.class, () -\u003e {"},{"lineNumber":65,"author":{"gitId":"Hlib Kalinichev"},"content":"            webClient.sendMessage(msg2, chatId);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":67,"author":{"gitId":"Hlib Kalinichev"},"content":"        verify(logger, atLeastOnce()).logRequest(req);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Hlib Kalinichev":40,"-":30}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/UnbanHandlerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vdzhos"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":3,"author":{"gitId":"vdzhos"},"content":"import edu.kmaooad.commandHandlers.UnbanHandler;"},{"lineNumber":4,"author":{"gitId":"vdzhos"},"content":"import edu.kmaooad.processing.CommandCall;"},{"lineNumber":5,"author":{"gitId":"vdzhos"},"content":"import edu.kmaooad.services.interfaces.BanDepartmentService;"},{"lineNumber":6,"author":{"gitId":"vdzhos"},"content":"import edu.kmaooad.services.interfaces.BanOrganizationService;"},{"lineNumber":7,"author":{"gitId":"vdzhos"},"content":"import edu.kmaooad.services.interfaces.BanUserService;"},{"lineNumber":8,"author":{"gitId":"vdzhos"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"vdzhos"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":10,"author":{"gitId":"vdzhos"},"content":"import org.springframework.boot.test.context.SpringBootTest;"},{"lineNumber":11,"author":{"gitId":"vdzhos"},"content":"import org.springframework.boot.test.context.TestConfiguration;"},{"lineNumber":12,"author":{"gitId":"vdzhos"},"content":"import org.springframework.context.ApplicationEventPublisher;"},{"lineNumber":13,"author":{"gitId":"vdzhos"},"content":"import org.springframework.context.annotation.Bean;"},{"lineNumber":14,"author":{"gitId":"vdzhos"},"content":"import org.springframework.context.annotation.Primary;"},{"lineNumber":15,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":16,"author":{"gitId":"vdzhos"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":17,"author":{"gitId":"illia_sitkov"},"content":"import static org.mockito.ArgumentMatchers.eq;"},{"lineNumber":18,"author":{"gitId":"illia_sitkov"},"content":"import static org.mockito.Mockito.*;"},{"lineNumber":19,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":20,"author":{"gitId":"vdzhos"},"content":"@SpringBootTest"},{"lineNumber":21,"author":{"gitId":"vdzhos"},"content":"public class UnbanHandlerTest {"},{"lineNumber":22,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":23,"author":{"gitId":"vdzhos"},"content":"    @Autowired"},{"lineNumber":24,"author":{"gitId":"vdzhos"},"content":"    private UnbanHandler unbanHandler;"},{"lineNumber":25,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":26,"author":{"gitId":"illia_sitkov"},"content":"    @Autowired"},{"lineNumber":27,"author":{"gitId":"illia_sitkov"},"content":"    private BanUserService banUserService;"},{"lineNumber":28,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":29,"author":{"gitId":"illia_sitkov"},"content":"    @Autowired"},{"lineNumber":30,"author":{"gitId":"illia_sitkov"},"content":"    private BanDepartmentService banDepartmentService;"},{"lineNumber":31,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":32,"author":{"gitId":"illia_sitkov"},"content":"    @Autowired"},{"lineNumber":33,"author":{"gitId":"illia_sitkov"},"content":"    private BanOrganizationService banOrganizationService;"},{"lineNumber":34,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":35,"author":{"gitId":"vdzhos"},"content":"    @TestConfiguration"},{"lineNumber":36,"author":{"gitId":"vdzhos"},"content":"    static class TestConfig {"},{"lineNumber":37,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":38,"author":{"gitId":"vdzhos"},"content":"        @Bean"},{"lineNumber":39,"author":{"gitId":"vdzhos"},"content":"        @Primary"},{"lineNumber":40,"author":{"gitId":"vdzhos"},"content":"        public BanUserService banUserService() {"},{"lineNumber":41,"author":{"gitId":"illia_sitkov"},"content":"            BanUserService service \u003d mock(BanUserService.class);"},{"lineNumber":42,"author":{"gitId":"illia_sitkov"},"content":"            doReturn(true).when(service).isUserBanned(eq(100L));"},{"lineNumber":43,"author":{"gitId":"illia_sitkov"},"content":"            doReturn(false).when(service).isUserBanned(eq(200L));"},{"lineNumber":44,"author":{"gitId":"illia_sitkov"},"content":"            return service;"},{"lineNumber":45,"author":{"gitId":"vdzhos"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":47,"author":{"gitId":"illia_sitkov"},"content":"        @Bean"},{"lineNumber":48,"author":{"gitId":"vdzhos"},"content":"        @Primary"},{"lineNumber":49,"author":{"gitId":"vdzhos"},"content":"        public BanDepartmentService banDepartmentService() {"},{"lineNumber":50,"author":{"gitId":"illia_sitkov"},"content":"            BanDepartmentService service \u003d mock(BanDepartmentService.class);"},{"lineNumber":51,"author":{"gitId":"illia_sitkov"},"content":"            doReturn(true).when(service).isDepartmentBanned(eq(100L));"},{"lineNumber":52,"author":{"gitId":"illia_sitkov"},"content":"            doReturn(false).when(service).isDepartmentBanned(eq(200L));"},{"lineNumber":53,"author":{"gitId":"illia_sitkov"},"content":"            return service;"},{"lineNumber":54,"author":{"gitId":"vdzhos"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":56,"author":{"gitId":"illia_sitkov"},"content":"        @Bean"},{"lineNumber":57,"author":{"gitId":"vdzhos"},"content":"        @Primary"},{"lineNumber":58,"author":{"gitId":"vdzhos"},"content":"        public BanOrganizationService banOrganizationService() {"},{"lineNumber":59,"author":{"gitId":"illia_sitkov"},"content":"            BanOrganizationService service \u003d mock(BanOrganizationService.class);"},{"lineNumber":60,"author":{"gitId":"illia_sitkov"},"content":"            doReturn(true).when(service).isOrganizationBanned(eq(100L));"},{"lineNumber":61,"author":{"gitId":"illia_sitkov"},"content":"            doReturn(false).when(service).isOrganizationBanned(eq(200L));"},{"lineNumber":62,"author":{"gitId":"illia_sitkov"},"content":"            return service;"},{"lineNumber":63,"author":{"gitId":"vdzhos"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":65,"author":{"gitId":"vdzhos"},"content":"        @Bean"},{"lineNumber":66,"author":{"gitId":"vdzhos"},"content":"        @Primary"},{"lineNumber":67,"author":{"gitId":"vdzhos"},"content":"        public ApplicationEventPublisher applicationEventPublisher() {"},{"lineNumber":68,"author":{"gitId":"vdzhos"},"content":"            return mock(ApplicationEventPublisher.class);"},{"lineNumber":69,"author":{"gitId":"vdzhos"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":71,"author":{"gitId":"vdzhos"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":73,"author":{"gitId":"vdzhos"},"content":"    @Test"},{"lineNumber":74,"author":{"gitId":"vdzhos"},"content":"    public void givenCorrectCommandCall_whenHandle_shouldThrowBecauseNoSuchUser() {"},{"lineNumber":75,"author":{"gitId":"vdzhos"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L, new String[]{\"USER\", \"0\"});"},{"lineNumber":76,"author":{"gitId":"vdzhos"},"content":"        assertThrows(Exception.class, () -\u003e unbanHandler.handle(commandCall));"},{"lineNumber":77,"author":{"gitId":"vdzhos"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":79,"author":{"gitId":"illia_sitkov"},"content":"    @Test"},{"lineNumber":80,"author":{"gitId":"illia_sitkov"},"content":"    public void givenCorrectCommandCall_whenDeleteBanUser_shouldDeleteSuccessfully() throws Exception {"},{"lineNumber":81,"author":{"gitId":"illia_sitkov"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L, new String[]{\"USER\", \"100\"});"},{"lineNumber":82,"author":{"gitId":"illia_sitkov"},"content":"        unbanHandler.handle(commandCall);"},{"lineNumber":83,"author":{"gitId":"illia_sitkov"},"content":"        verify(banUserService, times(1)).deleteBanForUser(100L);"},{"lineNumber":84,"author":{"gitId":"illia_sitkov"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":86,"author":{"gitId":"illia_sitkov"},"content":"    @Test"},{"lineNumber":87,"author":{"gitId":"illia_sitkov"},"content":"    public void givenCorrectCommandCall_whenDeleteBanUser_andUserNotBanned_shouldDeleteSuccessfully() {"},{"lineNumber":88,"author":{"gitId":"illia_sitkov"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L, new String[]{\"USER\", \"200\"});"},{"lineNumber":89,"author":{"gitId":"illia_sitkov"},"content":"        assertThrows(Exception.class, () -\u003e unbanHandler.handle(commandCall));"},{"lineNumber":90,"author":{"gitId":"illia_sitkov"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":92,"author":{"gitId":"illia_sitkov"},"content":"    @Test"},{"lineNumber":93,"author":{"gitId":"illia_sitkov"},"content":"    public void givenCorrectCommandCall_whenDeleteBanDept_shouldDeleteSuccessfully() throws Exception {"},{"lineNumber":94,"author":{"gitId":"illia_sitkov"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L, new String[]{\"DEPARTMENT\", \"100\"});"},{"lineNumber":95,"author":{"gitId":"illia_sitkov"},"content":"        unbanHandler.handle(commandCall);"},{"lineNumber":96,"author":{"gitId":"illia_sitkov"},"content":"        verify(banDepartmentService, times(1)).deleteBanForDepartment(100L);"},{"lineNumber":97,"author":{"gitId":"illia_sitkov"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":99,"author":{"gitId":"illia_sitkov"},"content":"    @Test"},{"lineNumber":100,"author":{"gitId":"illia_sitkov"},"content":"    public void givenCorrectCommandCall_whenDeleteBanUser_andDeptNotBanned_shouldDeleteSuccessfully() {"},{"lineNumber":101,"author":{"gitId":"illia_sitkov"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L, new String[]{\"DEPARTMENT\", \"200\"});"},{"lineNumber":102,"author":{"gitId":"illia_sitkov"},"content":"        assertThrows(Exception.class, () -\u003e unbanHandler.handle(commandCall));"},{"lineNumber":103,"author":{"gitId":"illia_sitkov"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":105,"author":{"gitId":"illia_sitkov"},"content":"    @Test"},{"lineNumber":106,"author":{"gitId":"illia_sitkov"},"content":"    public void givenCorrectCommandCall_whenDeleteBanOrg_shouldDeleteSuccessfully() throws Exception {"},{"lineNumber":107,"author":{"gitId":"illia_sitkov"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L, new String[]{\"ORGANIZATION\", \"100\"});"},{"lineNumber":108,"author":{"gitId":"illia_sitkov"},"content":"        unbanHandler.handle(commandCall);"},{"lineNumber":109,"author":{"gitId":"illia_sitkov"},"content":"        verify(banOrganizationService, times(1)).deleteBanForOrganization(100L);"},{"lineNumber":110,"author":{"gitId":"illia_sitkov"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":112,"author":{"gitId":"illia_sitkov"},"content":"    @Test"},{"lineNumber":113,"author":{"gitId":"illia_sitkov"},"content":"    public void givenCorrectCommandCall_whenDeleteBanUser_andOrgNotBanned_shouldDeleteSuccessfully() {"},{"lineNumber":114,"author":{"gitId":"illia_sitkov"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L, new String[]{\"ORGANIZATION\", \"200\"});"},{"lineNumber":115,"author":{"gitId":"illia_sitkov"},"content":"        assertThrows(Exception.class, () -\u003e unbanHandler.handle(commandCall));"},{"lineNumber":116,"author":{"gitId":"illia_sitkov"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"illia_sitkov"},"content":""},{"lineNumber":118,"author":{"gitId":"vdzhos"},"content":"    @Test"},{"lineNumber":119,"author":{"gitId":"vdzhos"},"content":"    public void givenCommandCall_whenArgAbsentAndHandle_shouldThrow() {"},{"lineNumber":120,"author":{"gitId":"vdzhos"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L, new String[]{\"USER\"});"},{"lineNumber":121,"author":{"gitId":"vdzhos"},"content":"        assertThrows(Exception.class, () -\u003e  unbanHandler.handle(commandCall));"},{"lineNumber":122,"author":{"gitId":"vdzhos"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":124,"author":{"gitId":"vdzhos"},"content":"    @Test"},{"lineNumber":125,"author":{"gitId":"vdzhos"},"content":"    public void givenCommandCall_whenArgTypeIncorrectAbsentAndHandle_shouldThrow() {"},{"lineNumber":126,"author":{"gitId":"vdzhos"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L, new String[]{\"INCORRECT_TYPE\", \"0\"});"},{"lineNumber":127,"author":{"gitId":"vdzhos"},"content":"        assertThrows(Exception.class, () -\u003e  unbanHandler.handle(commandCall));"},{"lineNumber":128,"author":{"gitId":"vdzhos"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"vdzhos"},"content":""},{"lineNumber":130,"author":{"gitId":"vdzhos"},"content":"}"}],"authorContributionMap":{"illia_sitkov":64,"vdzhos":66}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/UpdateAccessRuleHandlerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DanilAndriychenko"},"content":"package edu.kmaooad;"},{"lineNumber":2,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":3,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.commandHandlers.CreateAccessRuleHandler;"},{"lineNumber":4,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.commandHandlers.UpdateAccessRuleHandler;"},{"lineNumber":5,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.exceptions.IncorrectResourceParamsException;"},{"lineNumber":6,"author":{"gitId":"Hlib Kalinichev"},"content":"import edu.kmaooad.exceptions.NotFoundException;"},{"lineNumber":7,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.models.Command;"},{"lineNumber":8,"author":{"gitId":"Hlib Kalinichev"},"content":"import edu.kmaooad.models.IssuerType;"},{"lineNumber":9,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.models.Resource;"},{"lineNumber":10,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.models.ResourceType;"},{"lineNumber":11,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.processing.CommandCall;"},{"lineNumber":12,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.services.interfaces.AccessRuleService;"},{"lineNumber":13,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.services.interfaces.CommandService;"},{"lineNumber":14,"author":{"gitId":"DanilAndriychenko"},"content":"import edu.kmaooad.services.interfaces.ResourceService;"},{"lineNumber":15,"author":{"gitId":"DanilAndriychenko"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":16,"author":{"gitId":"DanilAndriychenko"},"content":"import org.springframework.beans.factory.annotation.Autowired;"},{"lineNumber":17,"author":{"gitId":"DanilAndriychenko"},"content":"import org.springframework.boot.test.context.TestConfiguration;"},{"lineNumber":18,"author":{"gitId":"DanilAndriychenko"},"content":"import org.springframework.context.ApplicationEventPublisher;"},{"lineNumber":19,"author":{"gitId":"DanilAndriychenko"},"content":"import org.springframework.context.annotation.Bean;"},{"lineNumber":20,"author":{"gitId":"DanilAndriychenko"},"content":"import org.springframework.context.annotation.Primary;"},{"lineNumber":21,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":22,"author":{"gitId":"DanilAndriychenko"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"},{"lineNumber":23,"author":{"gitId":"DanilAndriychenko"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":24,"author":{"gitId":"DanilAndriychenko"},"content":"import static org.mockito.ArgumentMatchers.any;"},{"lineNumber":25,"author":{"gitId":"Hlib Kalinichev"},"content":"import static org.mockito.ArgumentMatchers.eq;"},{"lineNumber":26,"author":{"gitId":"Hlib Kalinichev"},"content":"import static org.mockito.Mockito.*;"},{"lineNumber":27,"author":{"gitId":"Hlib Kalinichev"},"content":"import static org.mockito.Mockito.verify;"},{"lineNumber":28,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":29,"author":{"gitId":"DanilAndriychenko"},"content":"public class UpdateAccessRuleHandlerTest extends BaseTest {"},{"lineNumber":30,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":31,"author":{"gitId":"DanilAndriychenko"},"content":"    @Autowired"},{"lineNumber":32,"author":{"gitId":"DanilAndriychenko"},"content":"    protected UpdateAccessRuleHandler updateAccessRuleHandler;"},{"lineNumber":33,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":34,"author":{"gitId":"DanilAndriychenko"},"content":"    @TestConfiguration"},{"lineNumber":35,"author":{"gitId":"DanilAndriychenko"},"content":"    static class TestConfig {"},{"lineNumber":36,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":37,"author":{"gitId":"DanilAndriychenko"},"content":"        @Bean"},{"lineNumber":38,"author":{"gitId":"DanilAndriychenko"},"content":"        @Primary"},{"lineNumber":39,"author":{"gitId":"DanilAndriychenko"},"content":"        public CommandService commandService() {"},{"lineNumber":40,"author":{"gitId":"DanilAndriychenko"},"content":"            CommandService service \u003d mock(CommandService.class);"},{"lineNumber":41,"author":{"gitId":"DanilAndriychenko"},"content":"            doReturn(new Command(0L,\"name\",\"functionUrl\")).when(service).getCommandByName(any());"},{"lineNumber":42,"author":{"gitId":"DanilAndriychenko"},"content":"            return service;"},{"lineNumber":43,"author":{"gitId":"DanilAndriychenko"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":45,"author":{"gitId":"DanilAndriychenko"},"content":"        @Bean"},{"lineNumber":46,"author":{"gitId":"DanilAndriychenko"},"content":"        @Primary"},{"lineNumber":47,"author":{"gitId":"DanilAndriychenko"},"content":"        public ResourceService resourceService() {"},{"lineNumber":48,"author":{"gitId":"DanilAndriychenko"},"content":"            ResourceService service \u003d mock(ResourceService.class);"},{"lineNumber":49,"author":{"gitId":"DanilAndriychenko"},"content":"            try {"},{"lineNumber":50,"author":{"gitId":"DanilAndriychenko"},"content":"                doReturn(new Resource(0L, 10L, ResourceType.USER)).when(service).getResourceByRealIdAndType(any(), any());"},{"lineNumber":51,"author":{"gitId":"DanilAndriychenko"},"content":"                return service;"},{"lineNumber":52,"author":{"gitId":"DanilAndriychenko"},"content":"            } catch (IncorrectResourceParamsException e) {"},{"lineNumber":53,"author":{"gitId":"DanilAndriychenko"},"content":"                return null;"},{"lineNumber":54,"author":{"gitId":"DanilAndriychenko"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"DanilAndriychenko"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":57,"author":{"gitId":"DanilAndriychenko"},"content":"        @Bean"},{"lineNumber":58,"author":{"gitId":"DanilAndriychenko"},"content":"        @Primary"},{"lineNumber":59,"author":{"gitId":"DanilAndriychenko"},"content":"        public AccessRuleService accessRuleService() {"},{"lineNumber":60,"author":{"gitId":"Hlib Kalinichev"},"content":"            AccessRuleService service \u003d mock(AccessRuleService.class);"},{"lineNumber":61,"author":{"gitId":"Hlib Kalinichev"},"content":"            doReturn(true).when(service).existsById(eq(22L), eq(IssuerType.USER), any(), any());"},{"lineNumber":62,"author":{"gitId":"Hlib Kalinichev"},"content":"            return service;"},{"lineNumber":63,"author":{"gitId":"DanilAndriychenko"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":65,"author":{"gitId":"DanilAndriychenko"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":67,"author":{"gitId":"DanilAndriychenko"},"content":"    @Test"},{"lineNumber":68,"author":{"gitId":"DanilAndriychenko"},"content":"    public void givenCorrectCommandCall_whenHandle_shouldThrowBecauseNoSuchUser() {"},{"lineNumber":69,"author":{"gitId":"DanilAndriychenko"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L, new String[]{\"111111\", \"USER\", \"222222\", \"USER\", \"createStudent\", \"true\" });"},{"lineNumber":70,"author":{"gitId":"DanilAndriychenko"},"content":"        assertThrows(Exception.class, () -\u003e updateAccessRuleHandler.handle(commandCall));"},{"lineNumber":71,"author":{"gitId":"DanilAndriychenko"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":73,"author":{"gitId":"DanilAndriychenko"},"content":"    @Test"},{"lineNumber":74,"author":{"gitId":"DanilAndriychenko"},"content":"    public void givenCommandCall_whenArgAbsentAndHandle_shouldThrow() {"},{"lineNumber":75,"author":{"gitId":"DanilAndriychenko"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L, new String[]{\"111111\", \"USER\", \"222222\", \"USER\", \"createStudent\"});"},{"lineNumber":76,"author":{"gitId":"DanilAndriychenko"},"content":"        assertThrows(Exception.class, () -\u003e updateAccessRuleHandler.handle(commandCall));"},{"lineNumber":77,"author":{"gitId":"DanilAndriychenko"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":79,"author":{"gitId":"DanilAndriychenko"},"content":"    @Test"},{"lineNumber":80,"author":{"gitId":"DanilAndriychenko"},"content":"    public void givenCommandCall_whenArgTypeIncorrectAbsentAndHandle_shouldThrow() {"},{"lineNumber":81,"author":{"gitId":"DanilAndriychenko"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 456L, new String[]{\"111111\", \"RESOURCE\", \"222222\", \"USER\", \"createStudent\", \"true\" });"},{"lineNumber":82,"author":{"gitId":"DanilAndriychenko"},"content":"        assertThrows(Exception.class, () -\u003e updateAccessRuleHandler.handle(commandCall));"},{"lineNumber":83,"author":{"gitId":"DanilAndriychenko"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"DanilAndriychenko"},"content":""},{"lineNumber":85,"author":{"gitId":"Hlib Kalinichev"},"content":"    @Test"},{"lineNumber":86,"author":{"gitId":"Hlib Kalinichev"},"content":"    public void givenCommandCall_whenHandleCorrectCommandCall_shouldTriggerServiceAndNotThrow() {"},{"lineNumber":87,"author":{"gitId":"Hlib Kalinichev"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 143L, new String[]{\"22\", \"USER\", \"222222\", \"USER\", \"createStudent\", \"true\" });"},{"lineNumber":88,"author":{"gitId":"Hlib Kalinichev"},"content":"        final Long issuerId \u003d 22L;"},{"lineNumber":89,"author":{"gitId":"Hlib Kalinichev"},"content":"        assertDoesNotThrow(() -\u003e updateAccessRuleHandler.handle(commandCall));"},{"lineNumber":90,"author":{"gitId":"Hlib Kalinichev"},"content":"        verify(accessRuleService).existsById(eq(issuerId), eq(IssuerType.USER), any(), any());"},{"lineNumber":91,"author":{"gitId":"Hlib Kalinichev"},"content":"        verify(accessRuleService).upsert(eq(issuerId), eq(IssuerType.USER), any(), any(), eq(true));"},{"lineNumber":92,"author":{"gitId":"Hlib Kalinichev"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":94,"author":{"gitId":"Hlib Kalinichev"},"content":"    @Test"},{"lineNumber":95,"author":{"gitId":"Hlib Kalinichev"},"content":"    public void givenCommandCall_whenAccessRuleDoesNotExist_shouldTriggerServiceAndThrowNotFound() {"},{"lineNumber":96,"author":{"gitId":"Hlib Kalinichev"},"content":"        CommandCall commandCall \u003d new CommandCall(0L, 123L, 143L, new String[]{\"30\", \"DEPARTMENT\", \"222222\", \"USER\", \"createStudent\", \"true\" });"},{"lineNumber":97,"author":{"gitId":"Hlib Kalinichev"},"content":"        final Long issuerId \u003d 30L;"},{"lineNumber":98,"author":{"gitId":"Hlib Kalinichev"},"content":"        assertThrows(NotFoundException.class, () -\u003e updateAccessRuleHandler.handle(commandCall));"},{"lineNumber":99,"author":{"gitId":"Hlib Kalinichev"},"content":"        verify(accessRuleService).existsById(eq(issuerId), eq(IssuerType.DEPARTMENT), any(), any());"},{"lineNumber":100,"author":{"gitId":"Hlib Kalinichev"},"content":"        verify(accessRuleService, times(0)).upsert(eq(issuerId), eq(IssuerType.USER), any(), any(), eq(true));"},{"lineNumber":101,"author":{"gitId":"Hlib Kalinichev"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"Hlib Kalinichev"},"content":""},{"lineNumber":103,"author":{"gitId":"DanilAndriychenko"},"content":"}"}],"authorContributionMap":{"Hlib Kalinichev":26,"DanilAndriychenko":77}}]
