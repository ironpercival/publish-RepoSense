[{"path":".idea/uiDesigner.xml","fileType":"xml","lines":[{"lineNumber":1,"author":{"gitId":"Elina Semenko"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Elina Semenko"},"content":"\u003cproject version\u003d\"4\"\u003e"},{"lineNumber":3,"author":{"gitId":"Elina Semenko"},"content":"  \u003ccomponent name\u003d\"Palette2\"\u003e"},{"lineNumber":4,"author":{"gitId":"Elina Semenko"},"content":"    \u003cgroup name\u003d\"Swing\"\u003e"},{"lineNumber":5,"author":{"gitId":"Elina Semenko"},"content":"      \u003citem class\u003d\"com.intellij.uiDesigner.HSpacer\" tooltip-text\u003d\"Horizontal Spacer\" icon\u003d\"/com/intellij/uiDesigner/icons/hspacer.svg\" removable\u003d\"false\" auto-create-binding\u003d\"false\" can-attach-label\u003d\"false\"\u003e"},{"lineNumber":6,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdefault-constraints vsize-policy\u003d\"1\" hsize-policy\u003d\"6\" anchor\u003d\"0\" fill\u003d\"1\" /\u003e"},{"lineNumber":7,"author":{"gitId":"Elina Semenko"},"content":"      \u003c/item\u003e"},{"lineNumber":8,"author":{"gitId":"Elina Semenko"},"content":"      \u003citem class\u003d\"com.intellij.uiDesigner.VSpacer\" tooltip-text\u003d\"Vertical Spacer\" icon\u003d\"/com/intellij/uiDesigner/icons/vspacer.svg\" removable\u003d\"false\" auto-create-binding\u003d\"false\" can-attach-label\u003d\"false\"\u003e"},{"lineNumber":9,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdefault-constraints vsize-policy\u003d\"6\" hsize-policy\u003d\"1\" anchor\u003d\"0\" fill\u003d\"2\" /\u003e"},{"lineNumber":10,"author":{"gitId":"Elina Semenko"},"content":"      \u003c/item\u003e"},{"lineNumber":11,"author":{"gitId":"Elina Semenko"},"content":"      \u003citem class\u003d\"javax.swing.JPanel\" icon\u003d\"/com/intellij/uiDesigner/icons/panel.svg\" removable\u003d\"false\" auto-create-binding\u003d\"false\" can-attach-label\u003d\"false\"\u003e"},{"lineNumber":12,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdefault-constraints vsize-policy\u003d\"3\" hsize-policy\u003d\"3\" anchor\u003d\"0\" fill\u003d\"3\" /\u003e"},{"lineNumber":13,"author":{"gitId":"Elina Semenko"},"content":"      \u003c/item\u003e"},{"lineNumber":14,"author":{"gitId":"Elina Semenko"},"content":"      \u003citem class\u003d\"javax.swing.JScrollPane\" icon\u003d\"/com/intellij/uiDesigner/icons/scrollPane.svg\" removable\u003d\"false\" auto-create-binding\u003d\"false\" can-attach-label\u003d\"true\"\u003e"},{"lineNumber":15,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdefault-constraints vsize-policy\u003d\"7\" hsize-policy\u003d\"7\" anchor\u003d\"0\" fill\u003d\"3\" /\u003e"},{"lineNumber":16,"author":{"gitId":"Elina Semenko"},"content":"      \u003c/item\u003e"},{"lineNumber":17,"author":{"gitId":"Elina Semenko"},"content":"      \u003citem class\u003d\"javax.swing.JButton\" icon\u003d\"/com/intellij/uiDesigner/icons/button.svg\" removable\u003d\"false\" auto-create-binding\u003d\"true\" can-attach-label\u003d\"false\"\u003e"},{"lineNumber":18,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdefault-constraints vsize-policy\u003d\"0\" hsize-policy\u003d\"3\" anchor\u003d\"0\" fill\u003d\"1\" /\u003e"},{"lineNumber":19,"author":{"gitId":"Elina Semenko"},"content":"        \u003cinitial-values\u003e"},{"lineNumber":20,"author":{"gitId":"Elina Semenko"},"content":"          \u003cproperty name\u003d\"text\" value\u003d\"Button\" /\u003e"},{"lineNumber":21,"author":{"gitId":"Elina Semenko"},"content":"        \u003c/initial-values\u003e"},{"lineNumber":22,"author":{"gitId":"Elina Semenko"},"content":"      \u003c/item\u003e"},{"lineNumber":23,"author":{"gitId":"Elina Semenko"},"content":"      \u003citem class\u003d\"javax.swing.JRadioButton\" icon\u003d\"/com/intellij/uiDesigner/icons/radioButton.svg\" removable\u003d\"false\" auto-create-binding\u003d\"true\" can-attach-label\u003d\"false\"\u003e"},{"lineNumber":24,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdefault-constraints vsize-policy\u003d\"0\" hsize-policy\u003d\"3\" anchor\u003d\"8\" fill\u003d\"0\" /\u003e"},{"lineNumber":25,"author":{"gitId":"Elina Semenko"},"content":"        \u003cinitial-values\u003e"},{"lineNumber":26,"author":{"gitId":"Elina Semenko"},"content":"          \u003cproperty name\u003d\"text\" value\u003d\"RadioButton\" /\u003e"},{"lineNumber":27,"author":{"gitId":"Elina Semenko"},"content":"        \u003c/initial-values\u003e"},{"lineNumber":28,"author":{"gitId":"Elina Semenko"},"content":"      \u003c/item\u003e"},{"lineNumber":29,"author":{"gitId":"Elina Semenko"},"content":"      \u003citem class\u003d\"javax.swing.JCheckBox\" icon\u003d\"/com/intellij/uiDesigner/icons/checkBox.svg\" removable\u003d\"false\" auto-create-binding\u003d\"true\" can-attach-label\u003d\"false\"\u003e"},{"lineNumber":30,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdefault-constraints vsize-policy\u003d\"0\" hsize-policy\u003d\"3\" anchor\u003d\"8\" fill\u003d\"0\" /\u003e"},{"lineNumber":31,"author":{"gitId":"Elina Semenko"},"content":"        \u003cinitial-values\u003e"},{"lineNumber":32,"author":{"gitId":"Elina Semenko"},"content":"          \u003cproperty name\u003d\"text\" value\u003d\"CheckBox\" /\u003e"},{"lineNumber":33,"author":{"gitId":"Elina Semenko"},"content":"        \u003c/initial-values\u003e"},{"lineNumber":34,"author":{"gitId":"Elina Semenko"},"content":"      \u003c/item\u003e"},{"lineNumber":35,"author":{"gitId":"Elina Semenko"},"content":"      \u003citem class\u003d\"javax.swing.JLabel\" icon\u003d\"/com/intellij/uiDesigner/icons/label.svg\" removable\u003d\"false\" auto-create-binding\u003d\"false\" can-attach-label\u003d\"false\"\u003e"},{"lineNumber":36,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdefault-constraints vsize-policy\u003d\"0\" hsize-policy\u003d\"0\" anchor\u003d\"8\" fill\u003d\"0\" /\u003e"},{"lineNumber":37,"author":{"gitId":"Elina Semenko"},"content":"        \u003cinitial-values\u003e"},{"lineNumber":38,"author":{"gitId":"Elina Semenko"},"content":"          \u003cproperty name\u003d\"text\" value\u003d\"Label\" /\u003e"},{"lineNumber":39,"author":{"gitId":"Elina Semenko"},"content":"        \u003c/initial-values\u003e"},{"lineNumber":40,"author":{"gitId":"Elina Semenko"},"content":"      \u003c/item\u003e"},{"lineNumber":41,"author":{"gitId":"Elina Semenko"},"content":"      \u003citem class\u003d\"javax.swing.JTextField\" icon\u003d\"/com/intellij/uiDesigner/icons/textField.svg\" removable\u003d\"false\" auto-create-binding\u003d\"true\" can-attach-label\u003d\"true\"\u003e"},{"lineNumber":42,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdefault-constraints vsize-policy\u003d\"0\" hsize-policy\u003d\"6\" anchor\u003d\"8\" fill\u003d\"1\"\u003e"},{"lineNumber":43,"author":{"gitId":"Elina Semenko"},"content":"          \u003cpreferred-size width\u003d\"150\" height\u003d\"-1\" /\u003e"},{"lineNumber":44,"author":{"gitId":"Elina Semenko"},"content":"        \u003c/default-constraints\u003e"},{"lineNumber":45,"author":{"gitId":"Elina Semenko"},"content":"      \u003c/item\u003e"},{"lineNumber":46,"author":{"gitId":"Elina Semenko"},"content":"      \u003citem class\u003d\"javax.swing.JPasswordField\" icon\u003d\"/com/intellij/uiDesigner/icons/passwordField.svg\" removable\u003d\"false\" auto-create-binding\u003d\"true\" can-attach-label\u003d\"true\"\u003e"},{"lineNumber":47,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdefault-constraints vsize-policy\u003d\"0\" hsize-policy\u003d\"6\" anchor\u003d\"8\" fill\u003d\"1\"\u003e"},{"lineNumber":48,"author":{"gitId":"Elina Semenko"},"content":"          \u003cpreferred-size width\u003d\"150\" height\u003d\"-1\" /\u003e"},{"lineNumber":49,"author":{"gitId":"Elina Semenko"},"content":"        \u003c/default-constraints\u003e"},{"lineNumber":50,"author":{"gitId":"Elina Semenko"},"content":"      \u003c/item\u003e"},{"lineNumber":51,"author":{"gitId":"Elina Semenko"},"content":"      \u003citem class\u003d\"javax.swing.JFormattedTextField\" icon\u003d\"/com/intellij/uiDesigner/icons/formattedTextField.svg\" removable\u003d\"false\" auto-create-binding\u003d\"true\" can-attach-label\u003d\"true\"\u003e"},{"lineNumber":52,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdefault-constraints vsize-policy\u003d\"0\" hsize-policy\u003d\"6\" anchor\u003d\"8\" fill\u003d\"1\"\u003e"},{"lineNumber":53,"author":{"gitId":"Elina Semenko"},"content":"          \u003cpreferred-size width\u003d\"150\" height\u003d\"-1\" /\u003e"},{"lineNumber":54,"author":{"gitId":"Elina Semenko"},"content":"        \u003c/default-constraints\u003e"},{"lineNumber":55,"author":{"gitId":"Elina Semenko"},"content":"      \u003c/item\u003e"},{"lineNumber":56,"author":{"gitId":"Elina Semenko"},"content":"      \u003citem class\u003d\"javax.swing.JTextArea\" icon\u003d\"/com/intellij/uiDesigner/icons/textArea.svg\" removable\u003d\"false\" auto-create-binding\u003d\"true\" can-attach-label\u003d\"true\"\u003e"},{"lineNumber":57,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdefault-constraints vsize-policy\u003d\"6\" hsize-policy\u003d\"6\" anchor\u003d\"0\" fill\u003d\"3\"\u003e"},{"lineNumber":58,"author":{"gitId":"Elina Semenko"},"content":"          \u003cpreferred-size width\u003d\"150\" height\u003d\"50\" /\u003e"},{"lineNumber":59,"author":{"gitId":"Elina Semenko"},"content":"        \u003c/default-constraints\u003e"},{"lineNumber":60,"author":{"gitId":"Elina Semenko"},"content":"      \u003c/item\u003e"},{"lineNumber":61,"author":{"gitId":"Elina Semenko"},"content":"      \u003citem class\u003d\"javax.swing.JTextPane\" icon\u003d\"/com/intellij/uiDesigner/icons/textPane.svg\" removable\u003d\"false\" auto-create-binding\u003d\"true\" can-attach-label\u003d\"true\"\u003e"},{"lineNumber":62,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdefault-constraints vsize-policy\u003d\"6\" hsize-policy\u003d\"6\" anchor\u003d\"0\" fill\u003d\"3\"\u003e"},{"lineNumber":63,"author":{"gitId":"Elina Semenko"},"content":"          \u003cpreferred-size width\u003d\"150\" height\u003d\"50\" /\u003e"},{"lineNumber":64,"author":{"gitId":"Elina Semenko"},"content":"        \u003c/default-constraints\u003e"},{"lineNumber":65,"author":{"gitId":"Elina Semenko"},"content":"      \u003c/item\u003e"},{"lineNumber":66,"author":{"gitId":"Elina Semenko"},"content":"      \u003citem class\u003d\"javax.swing.JEditorPane\" icon\u003d\"/com/intellij/uiDesigner/icons/editorPane.svg\" removable\u003d\"false\" auto-create-binding\u003d\"true\" can-attach-label\u003d\"true\"\u003e"},{"lineNumber":67,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdefault-constraints vsize-policy\u003d\"6\" hsize-policy\u003d\"6\" anchor\u003d\"0\" fill\u003d\"3\"\u003e"},{"lineNumber":68,"author":{"gitId":"Elina Semenko"},"content":"          \u003cpreferred-size width\u003d\"150\" height\u003d\"50\" /\u003e"},{"lineNumber":69,"author":{"gitId":"Elina Semenko"},"content":"        \u003c/default-constraints\u003e"},{"lineNumber":70,"author":{"gitId":"Elina Semenko"},"content":"      \u003c/item\u003e"},{"lineNumber":71,"author":{"gitId":"Elina Semenko"},"content":"      \u003citem class\u003d\"javax.swing.JComboBox\" icon\u003d\"/com/intellij/uiDesigner/icons/comboBox.svg\" removable\u003d\"false\" auto-create-binding\u003d\"true\" can-attach-label\u003d\"true\"\u003e"},{"lineNumber":72,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdefault-constraints vsize-policy\u003d\"0\" hsize-policy\u003d\"2\" anchor\u003d\"8\" fill\u003d\"1\" /\u003e"},{"lineNumber":73,"author":{"gitId":"Elina Semenko"},"content":"      \u003c/item\u003e"},{"lineNumber":74,"author":{"gitId":"Elina Semenko"},"content":"      \u003citem class\u003d\"javax.swing.JTable\" icon\u003d\"/com/intellij/uiDesigner/icons/table.svg\" removable\u003d\"false\" auto-create-binding\u003d\"true\" can-attach-label\u003d\"false\"\u003e"},{"lineNumber":75,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdefault-constraints vsize-policy\u003d\"6\" hsize-policy\u003d\"6\" anchor\u003d\"0\" fill\u003d\"3\"\u003e"},{"lineNumber":76,"author":{"gitId":"Elina Semenko"},"content":"          \u003cpreferred-size width\u003d\"150\" height\u003d\"50\" /\u003e"},{"lineNumber":77,"author":{"gitId":"Elina Semenko"},"content":"        \u003c/default-constraints\u003e"},{"lineNumber":78,"author":{"gitId":"Elina Semenko"},"content":"      \u003c/item\u003e"},{"lineNumber":79,"author":{"gitId":"Elina Semenko"},"content":"      \u003citem class\u003d\"javax.swing.JList\" icon\u003d\"/com/intellij/uiDesigner/icons/list.svg\" removable\u003d\"false\" auto-create-binding\u003d\"true\" can-attach-label\u003d\"false\"\u003e"},{"lineNumber":80,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdefault-constraints vsize-policy\u003d\"6\" hsize-policy\u003d\"2\" anchor\u003d\"0\" fill\u003d\"3\"\u003e"},{"lineNumber":81,"author":{"gitId":"Elina Semenko"},"content":"          \u003cpreferred-size width\u003d\"150\" height\u003d\"50\" /\u003e"},{"lineNumber":82,"author":{"gitId":"Elina Semenko"},"content":"        \u003c/default-constraints\u003e"},{"lineNumber":83,"author":{"gitId":"Elina Semenko"},"content":"      \u003c/item\u003e"},{"lineNumber":84,"author":{"gitId":"Elina Semenko"},"content":"      \u003citem class\u003d\"javax.swing.JTree\" icon\u003d\"/com/intellij/uiDesigner/icons/tree.svg\" removable\u003d\"false\" auto-create-binding\u003d\"true\" can-attach-label\u003d\"false\"\u003e"},{"lineNumber":85,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdefault-constraints vsize-policy\u003d\"6\" hsize-policy\u003d\"6\" anchor\u003d\"0\" fill\u003d\"3\"\u003e"},{"lineNumber":86,"author":{"gitId":"Elina Semenko"},"content":"          \u003cpreferred-size width\u003d\"150\" height\u003d\"50\" /\u003e"},{"lineNumber":87,"author":{"gitId":"Elina Semenko"},"content":"        \u003c/default-constraints\u003e"},{"lineNumber":88,"author":{"gitId":"Elina Semenko"},"content":"      \u003c/item\u003e"},{"lineNumber":89,"author":{"gitId":"Elina Semenko"},"content":"      \u003citem class\u003d\"javax.swing.JTabbedPane\" icon\u003d\"/com/intellij/uiDesigner/icons/tabbedPane.svg\" removable\u003d\"false\" auto-create-binding\u003d\"true\" can-attach-label\u003d\"false\"\u003e"},{"lineNumber":90,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdefault-constraints vsize-policy\u003d\"3\" hsize-policy\u003d\"3\" anchor\u003d\"0\" fill\u003d\"3\"\u003e"},{"lineNumber":91,"author":{"gitId":"Elina Semenko"},"content":"          \u003cpreferred-size width\u003d\"200\" height\u003d\"200\" /\u003e"},{"lineNumber":92,"author":{"gitId":"Elina Semenko"},"content":"        \u003c/default-constraints\u003e"},{"lineNumber":93,"author":{"gitId":"Elina Semenko"},"content":"      \u003c/item\u003e"},{"lineNumber":94,"author":{"gitId":"Elina Semenko"},"content":"      \u003citem class\u003d\"javax.swing.JSplitPane\" icon\u003d\"/com/intellij/uiDesigner/icons/splitPane.svg\" removable\u003d\"false\" auto-create-binding\u003d\"false\" can-attach-label\u003d\"false\"\u003e"},{"lineNumber":95,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdefault-constraints vsize-policy\u003d\"3\" hsize-policy\u003d\"3\" anchor\u003d\"0\" fill\u003d\"3\"\u003e"},{"lineNumber":96,"author":{"gitId":"Elina Semenko"},"content":"          \u003cpreferred-size width\u003d\"200\" height\u003d\"200\" /\u003e"},{"lineNumber":97,"author":{"gitId":"Elina Semenko"},"content":"        \u003c/default-constraints\u003e"},{"lineNumber":98,"author":{"gitId":"Elina Semenko"},"content":"      \u003c/item\u003e"},{"lineNumber":99,"author":{"gitId":"Elina Semenko"},"content":"      \u003citem class\u003d\"javax.swing.JSpinner\" icon\u003d\"/com/intellij/uiDesigner/icons/spinner.svg\" removable\u003d\"false\" auto-create-binding\u003d\"true\" can-attach-label\u003d\"true\"\u003e"},{"lineNumber":100,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdefault-constraints vsize-policy\u003d\"0\" hsize-policy\u003d\"6\" anchor\u003d\"8\" fill\u003d\"1\" /\u003e"},{"lineNumber":101,"author":{"gitId":"Elina Semenko"},"content":"      \u003c/item\u003e"},{"lineNumber":102,"author":{"gitId":"Elina Semenko"},"content":"      \u003citem class\u003d\"javax.swing.JSlider\" icon\u003d\"/com/intellij/uiDesigner/icons/slider.svg\" removable\u003d\"false\" auto-create-binding\u003d\"true\" can-attach-label\u003d\"false\"\u003e"},{"lineNumber":103,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdefault-constraints vsize-policy\u003d\"0\" hsize-policy\u003d\"6\" anchor\u003d\"8\" fill\u003d\"1\" /\u003e"},{"lineNumber":104,"author":{"gitId":"Elina Semenko"},"content":"      \u003c/item\u003e"},{"lineNumber":105,"author":{"gitId":"Elina Semenko"},"content":"      \u003citem class\u003d\"javax.swing.JSeparator\" icon\u003d\"/com/intellij/uiDesigner/icons/separator.svg\" removable\u003d\"false\" auto-create-binding\u003d\"false\" can-attach-label\u003d\"false\"\u003e"},{"lineNumber":106,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdefault-constraints vsize-policy\u003d\"6\" hsize-policy\u003d\"6\" anchor\u003d\"0\" fill\u003d\"3\" /\u003e"},{"lineNumber":107,"author":{"gitId":"Elina Semenko"},"content":"      \u003c/item\u003e"},{"lineNumber":108,"author":{"gitId":"Elina Semenko"},"content":"      \u003citem class\u003d\"javax.swing.JProgressBar\" icon\u003d\"/com/intellij/uiDesigner/icons/progressbar.svg\" removable\u003d\"false\" auto-create-binding\u003d\"true\" can-attach-label\u003d\"false\"\u003e"},{"lineNumber":109,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdefault-constraints vsize-policy\u003d\"0\" hsize-policy\u003d\"6\" anchor\u003d\"0\" fill\u003d\"1\" /\u003e"},{"lineNumber":110,"author":{"gitId":"Elina Semenko"},"content":"      \u003c/item\u003e"},{"lineNumber":111,"author":{"gitId":"Elina Semenko"},"content":"      \u003citem class\u003d\"javax.swing.JToolBar\" icon\u003d\"/com/intellij/uiDesigner/icons/toolbar.svg\" removable\u003d\"false\" auto-create-binding\u003d\"false\" can-attach-label\u003d\"false\"\u003e"},{"lineNumber":112,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdefault-constraints vsize-policy\u003d\"0\" hsize-policy\u003d\"6\" anchor\u003d\"0\" fill\u003d\"1\"\u003e"},{"lineNumber":113,"author":{"gitId":"Elina Semenko"},"content":"          \u003cpreferred-size width\u003d\"-1\" height\u003d\"20\" /\u003e"},{"lineNumber":114,"author":{"gitId":"Elina Semenko"},"content":"        \u003c/default-constraints\u003e"},{"lineNumber":115,"author":{"gitId":"Elina Semenko"},"content":"      \u003c/item\u003e"},{"lineNumber":116,"author":{"gitId":"Elina Semenko"},"content":"      \u003citem class\u003d\"javax.swing.JToolBar$Separator\" icon\u003d\"/com/intellij/uiDesigner/icons/toolbarSeparator.svg\" removable\u003d\"false\" auto-create-binding\u003d\"false\" can-attach-label\u003d\"false\"\u003e"},{"lineNumber":117,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdefault-constraints vsize-policy\u003d\"0\" hsize-policy\u003d\"0\" anchor\u003d\"0\" fill\u003d\"1\" /\u003e"},{"lineNumber":118,"author":{"gitId":"Elina Semenko"},"content":"      \u003c/item\u003e"},{"lineNumber":119,"author":{"gitId":"Elina Semenko"},"content":"      \u003citem class\u003d\"javax.swing.JScrollBar\" icon\u003d\"/com/intellij/uiDesigner/icons/scrollbar.svg\" removable\u003d\"false\" auto-create-binding\u003d\"true\" can-attach-label\u003d\"false\"\u003e"},{"lineNumber":120,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdefault-constraints vsize-policy\u003d\"6\" hsize-policy\u003d\"0\" anchor\u003d\"0\" fill\u003d\"2\" /\u003e"},{"lineNumber":121,"author":{"gitId":"Elina Semenko"},"content":"      \u003c/item\u003e"},{"lineNumber":122,"author":{"gitId":"Elina Semenko"},"content":"    \u003c/group\u003e"},{"lineNumber":123,"author":{"gitId":"Elina Semenko"},"content":"  \u003c/component\u003e"},{"lineNumber":124,"author":{"gitId":"Elina Semenko"},"content":"\u003c/project\u003e"}],"authorContributionMap":{"Elina Semenko":124}},{"path":"kmaooad-functions/.gitignore","fileType":"gitignore","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Build output"},{"lineNumber":2,"author":{"gitId":"-"},"content":"target/"},{"lineNumber":3,"author":{"gitId":"-"},"content":"*.class"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"# Log file"},{"lineNumber":6,"author":{"gitId":"-"},"content":"*.log"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"# BlueJ files"},{"lineNumber":9,"author":{"gitId":"-"},"content":"*.ctxt"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"# Mobile Tools for Java (J2ME)"},{"lineNumber":12,"author":{"gitId":"-"},"content":".mtj.tmp/"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"# Package Files #"},{"lineNumber":15,"author":{"gitId":"-"},"content":"*.jar"},{"lineNumber":16,"author":{"gitId":"-"},"content":"*.war"},{"lineNumber":17,"author":{"gitId":"-"},"content":"*.ear"},{"lineNumber":18,"author":{"gitId":"-"},"content":"*.zip"},{"lineNumber":19,"author":{"gitId":"-"},"content":"*.tar.gz"},{"lineNumber":20,"author":{"gitId":"-"},"content":"*.rar"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml"},{"lineNumber":23,"author":{"gitId":"-"},"content":"hs_err_pid*"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# IDE"},{"lineNumber":26,"author":{"gitId":"-"},"content":".idea/"},{"lineNumber":27,"author":{"gitId":"-"},"content":"*.iml"},{"lineNumber":28,"author":{"gitId":"-"},"content":".settings/"},{"lineNumber":29,"author":{"gitId":"-"},"content":".project"},{"lineNumber":30,"author":{"gitId":"-"},"content":".classpath"},{"lineNumber":31,"author":{"gitId":"-"},"content":".vscode/"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"# macOS"},{"lineNumber":34,"author":{"gitId":"-"},"content":".DS_Store"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"# Azure Functions"},{"lineNumber":37,"author":{"gitId":"-"},"content":"local.settings.json"},{"lineNumber":38,"author":{"gitId":"-"},"content":"bin/"},{"lineNumber":39,"author":{"gitId":"-"},"content":"obj/"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"# Custom"},{"lineNumber":42,"author":{"gitId":"Victor"},"content":"helpers/"}],"authorContributionMap":{"Victor":1,"-":41}},{"path":"kmaooad-functions/pom.xml","fileType":"xml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\" ?\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cproject"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  xmlns\u003d\"http://maven.apache.org/POM/4.0.0\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"  xmlns:xsi\u003d\"http://www.w3.org/2001/XMLSchema-instance\""},{"lineNumber":5,"author":{"gitId":"-"},"content":"  xsi:schemaLocation\u003d\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003cmodelVersion\u003e4.0.0\u003c/modelVersion\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cgroupId\u003eedu.kmaooad\u003c/groupId\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cartifactId\u003ekmaooad-functions\u003c/artifactId\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cversion\u003e1.0-SNAPSHOT\u003c/version\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cpackaging\u003ejar\u003c/packaging\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cname\u003eAzure Java Functions\u003c/name\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cparent\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003cgroupId\u003eorg.springframework.boot\u003c/groupId\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cartifactId\u003espring-boot-starter-parent\u003c/artifactId\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cversion\u003e2.6.6\u003c/version\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003crelativePath/\u003e \u003c!-- lookup parent from repository --\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/parent\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cproperties\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cproject.build.sourceEncoding\u003eUTF-8\u003c/project.build.sourceEncoding\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cjava.version\u003e11\u003c/java.version\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cazure.functions.maven.plugin.version\u003e1.20.0\u003c/azure.functions.maven.plugin.version\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cazure.functions.java.library.version \u003e2.0.1\u003c/azure.functions.java.library.version\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cfunctionAppName\u003ekmaooad-functions-20220927162321908\u003c/functionAppName\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cstart-class\u003eedu.kmaooad.BotFarmApplication\u003c/start-class\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003c/properties\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \u003cdependencyManagement\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003cdependencies\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cdependency\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003cgroupId\u003eorg.springframework.cloud\u003c/groupId\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                \u003cartifactId\u003espring-cloud-function-dependencies\u003c/artifactId\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                \u003cversion\u003e3.2.3\u003c/version\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                \u003ctype\u003epom\u003c/type\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u003cscope\u003eimport\u003c/scope\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003c/dependency\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/dependencies\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003c/dependencyManagement\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003cdependencies\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cdependency\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cgroupId\u003eorg.springframework.cloud\u003c/groupId\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cartifactId\u003espring-cloud-function-adapter-azure\u003c/artifactId\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/dependency\u003e"},{"lineNumber":48,"author":{"gitId":"Victor"},"content":"        \u003cdependency\u003e"},{"lineNumber":49,"author":{"gitId":"Victor"},"content":"            \u003cgroupId\u003eorg.springframework.boot\u003c/groupId\u003e"},{"lineNumber":50,"author":{"gitId":"Victor"},"content":"            \u003cartifactId\u003espring-boot-starter-webflux\u003c/artifactId\u003e"},{"lineNumber":51,"author":{"gitId":"Victor"},"content":"        \u003c/dependency\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003cdependency\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003cgroupId\u003eorg.springframework.boot\u003c/groupId\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003cartifactId\u003espring-boot-starter-data-mongodb\u003c/artifactId\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003c/dependency\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cdependency\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \u003cgroupId\u003eorg.telegram\u003c/groupId\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            \u003cartifactId\u003etelegrambots-spring-boot-starter\u003c/artifactId\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            \u003cversion\u003e6.3.0\u003c/version\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        \u003c/dependency\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003cdependency\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            \u003cgroupId\u003eorg.projectlombok\u003c/groupId\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            \u003cartifactId\u003elombok\u003c/artifactId\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            \u003cversion\u003e1.18.24\u003c/version\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            \u003cscope\u003eprovided\u003c/scope\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        \u003c/dependency\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        \u003cdependency\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            \u003cgroupId\u003eorg.mapstruct\u003c/groupId\u003e"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            \u003cartifactId\u003emapstruct\u003c/artifactId\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            \u003cversion\u003e1.5.3.Final\u003c/version\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        \u003c/dependency\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        \u003cdependency\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            \u003cgroupId\u003ecom.fasterxml.jackson.core\u003c/groupId\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \u003cartifactId\u003ejackson-databind\u003c/artifactId\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            \u003cversion\u003e2.14.0\u003c/version\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        \u003c/dependency\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        \u003cdependency\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            \u003cgroupId\u003ecom.microsoft.azure.functions\u003c/groupId\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            \u003cartifactId\u003eazure-functions-java-library\u003c/artifactId\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \u003cversion\u003e${azure.functions.java.library.version}\u003c/version\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        \u003c/dependency\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"        \u003c!-- Test --\u003e"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        \u003cdependency\u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            \u003cgroupId\u003eorg.springframework.boot\u003c/groupId\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            \u003cartifactId\u003espring-boot-starter-test\u003c/artifactId\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            \u003cscope\u003etest\u003c/scope\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        \u003c/dependency\u003e"},{"lineNumber":89,"author":{"gitId":"Elina Semenko"},"content":"        \u003cdependency\u003e"},{"lineNumber":90,"author":{"gitId":"Elina Semenko"},"content":"            \u003cgroupId\u003eorg.springframework.boot\u003c/groupId\u003e"},{"lineNumber":91,"author":{"gitId":"Elina Semenko"},"content":"            \u003cartifactId\u003espring-boot-autoconfigure\u003c/artifactId\u003e"},{"lineNumber":92,"author":{"gitId":"Elina Semenko"},"content":"            \u003cversion\u003e2.6.6\u003c/version\u003e"},{"lineNumber":93,"author":{"gitId":"Elina Semenko"},"content":"        \u003c/dependency\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    \u003c/dependencies\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \u003cbuild\u003e"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        \u003cplugins\u003e"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            \u003cplugin\u003e"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                \u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                \u003cartifactId\u003emaven-compiler-plugin\u003c/artifactId\u003e"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                \u003cversion\u003e3.8.1\u003c/version\u003e"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                \u003cconfiguration\u003e"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                    \u003csource\u003e${java.version}\u003c/source\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                    \u003ctarget\u003e${java.version}\u003c/target\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                    \u003cencoding\u003e${project.build.sourceEncoding}\u003c/encoding\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                    \u003cannotationProcessorPaths\u003e"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                        \u003cpath\u003e"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                            \u003cgroupId\u003eorg.projectlombok\u003c/groupId\u003e"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                            \u003cartifactId\u003elombok\u003c/artifactId\u003e"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                            \u003cversion\u003e1.18.24\u003c/version\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                        \u003c/path\u003e"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                        \u003cpath\u003e"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                            \u003cgroupId\u003eorg.mapstruct\u003c/groupId\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                            \u003cartifactId\u003emapstruct-processor\u003c/artifactId\u003e"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                            \u003cversion\u003e1.5.3.Final\u003c/version\u003e"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                        \u003c/path\u003e"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                    \u003c/annotationProcessorPaths\u003e"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                \u003c/configuration\u003e"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            \u003c/plugin\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            \u003cplugin\u003e"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                \u003cgroupId\u003eorg.jacoco\u003c/groupId\u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u003cartifactId\u003ejacoco-maven-plugin\u003c/artifactId\u003e"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                \u003cversion\u003e0.8.8\u003c/version\u003e"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                \u003cexecutions\u003e"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                    \u003cexecution\u003e"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                        \u003cid\u003eprepare-agent\u003c/id\u003e"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                        \u003cgoals\u003e"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                            \u003cgoal\u003eprepare-agent\u003c/goal\u003e"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                        \u003c/goals\u003e"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                    \u003c/execution\u003e"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    \u003cexecution\u003e"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                        \u003cid\u003ereport\u003c/id\u003e"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                        \u003cphase\u003etest\u003c/phase\u003e"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                        \u003cgoals\u003e"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                            \u003cgoal\u003ereport\u003c/goal\u003e"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                        \u003c/goals\u003e"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                    \u003c/execution\u003e"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                \u003c/executions\u003e"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            \u003c/plugin\u003e"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            \u003cplugin\u003e"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                \u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                \u003cartifactId\u003emaven-surefire-plugin\u003c/artifactId\u003e"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                \u003cversion\u003e3.0.0-M7\u003c/version\u003e"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                \u003cconfiguration\u003e"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                    \u003cfailIfNoTests\u003etrue\u003c/failIfNoTests\u003e"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                \u003c/configuration\u003e"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            \u003c/plugin\u003e"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            \u003c!--Remove obj folder generated by .NET SDK in maven clean--\u003e"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            \u003cplugin\u003e"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                \u003cartifactId\u003emaven-clean-plugin\u003c/artifactId\u003e"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                \u003cversion\u003e3.1.0\u003c/version\u003e"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                \u003cconfiguration\u003e"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                    \u003cfilesets\u003e"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                        \u003cfileset\u003e"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                            \u003cdirectory\u003eobj\u003c/directory\u003e"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                        \u003c/fileset\u003e"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    \u003c/filesets\u003e"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                \u003c/configuration\u003e"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            \u003c/plugin\u003e"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"            \u003cplugin\u003e"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                \u003cgroupId\u003ecom.microsoft.azure\u003c/groupId\u003e"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                \u003cartifactId\u003eazure-functions-maven-plugin\u003c/artifactId\u003e"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                \u003cversion\u003e${azure.functions.maven.plugin.version}\u003c/version\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                \u003cconfiguration\u003e"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                    \u003c!-- function app name --\u003e"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                    \u003cappName\u003e${functionAppName}\u003c/appName\u003e"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                    \u003c!-- function app resource group --\u003e"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                    \u003cresourceGroup\u003ejava-functions-group\u003c/resourceGroup\u003e"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                    \u003c!-- function app service plan name --\u003e"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                    \u003cappServicePlanName\u003ejava-functions-app-service-plan\u003c/appServicePlanName\u003e"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                    \u003c!-- function app region--\u003e"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                    \u003c!-- refers https://github.com/microsoft/azure-maven-plugins/wiki/Azure-Functions:-Configuration-Details#supported-regions for all valid values --\u003e"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                    \u003cregion\u003ewestus\u003c/region\u003e"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                    \u003c!-- function pricingTier, default to be consumption if not specified --\u003e"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                    \u003c!-- refers https://github.com/microsoft/azure-maven-plugins/wiki/Azure-Functions:-Configuration-Details#supported-pricing-tiers for all valid values --\u003e"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                    \u003c!-- \u003cpricingTier\u003e\u003c/pricingTier\u003e --\u003e"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                    \u003c!-- Whether to disable application insights, default is false --\u003e"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                    \u003c!-- refers https://github.com/microsoft/azure-maven-plugins/wiki/Azure-Functions:-Configuration-Details for all valid configurations for application insights--\u003e"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                    \u003c!-- \u003cdisableAppInsights\u003e\u003c/disableAppInsights\u003e --\u003e"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                    \u003cruntime\u003e"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                        \u003c!-- runtime os, could be windows, linux or docker--\u003e"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                        \u003cos\u003ewindows\u003c/os\u003e"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                        \u003cjavaVersion\u003e11\u003c/javaVersion\u003e"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                    \u003c/runtime\u003e"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                    \u003cappSettings\u003e"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                        \u003cproperty\u003e"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                            \u003cname\u003eFUNCTIONS_EXTENSION_VERSION\u003c/name\u003e"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                            \u003cvalue\u003e~4\u003c/value\u003e"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                        \u003c/property\u003e"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                    \u003c/appSettings\u003e"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                \u003c/configuration\u003e"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                \u003cexecutions\u003e"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                    \u003cexecution\u003e"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                        \u003cid\u003epackage-functions\u003c/id\u003e"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                        \u003cgoals\u003e"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                            \u003cgoal\u003epackage\u003c/goal\u003e"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                        \u003c/goals\u003e"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                    \u003c/execution\u003e"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                \u003c/executions\u003e"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            \u003c/plugin\u003e"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            \u003cplugin\u003e"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                \u003cgroupId\u003eorg.springframework.boot\u003c/groupId\u003e"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                \u003cartifactId\u003espring-boot-maven-plugin\u003c/artifactId\u003e"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                \u003cconfiguration\u003e"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                    \u003cmainClass\u003eedu.kmaooad.BotFarmApplication\u003c/mainClass\u003e"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                \u003c/configuration\u003e"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            \u003c/plugin\u003e"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"            \u003cplugin\u003e"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                \u003cgroupId\u003ecom.diffplug.spotless\u003c/groupId\u003e"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                \u003cartifactId\u003espotless-maven-plugin\u003c/artifactId\u003e"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                \u003cversion\u003e2.27.2\u003c/version\u003e"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                \u003cconfiguration\u003e"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                    \u003cjava\u003e"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                        \u003cgoogleJavaFormat\u003e"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                            \u003cversion\u003e1.15.0\u003c/version\u003e"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                            \u003creflowLongStrings\u003etrue\u003c/reflowLongStrings\u003e"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                        \u003c/googleJavaFormat\u003e"},{"lineNumber":220,"author":{"gitId":"Victor"},"content":"                        \u003cremoveUnusedImports /\u003e"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    \u003c/java\u003e"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                \u003c/configuration\u003e"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            \u003c/plugin\u003e"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        \u003c/plugins\u003e"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    \u003c/build\u003e"},{"lineNumber":226,"author":{"gitId":"-"},"content":""},{"lineNumber":227,"author":{"gitId":"-"},"content":"    \u003crepositories\u003e"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        \u003crepository\u003e"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            \u003cid\u003espring-snapshots\u003c/id\u003e"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            \u003cname\u003eSpring Snapshots\u003c/name\u003e"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            \u003curl\u003ehttps://repo.spring.io/libs-snapshot-local\u003c/url\u003e"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            \u003csnapshots\u003e"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                \u003cenabled\u003etrue\u003c/enabled\u003e"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            \u003c/snapshots\u003e"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            \u003creleases\u003e"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                \u003cenabled\u003efalse\u003c/enabled\u003e"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            \u003c/releases\u003e"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        \u003c/repository\u003e"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        \u003crepository\u003e"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            \u003cid\u003espring-milestones\u003c/id\u003e"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            \u003cname\u003eSpring Milestones\u003c/name\u003e"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            \u003curl\u003ehttps://repo.spring.io/libs-milestone-local\u003c/url\u003e"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            \u003csnapshots\u003e"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                \u003cenabled\u003efalse\u003c/enabled\u003e"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            \u003c/snapshots\u003e"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        \u003c/repository\u003e"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        \u003crepository\u003e"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            \u003cid\u003espring-releases\u003c/id\u003e"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            \u003cname\u003eSpring Releases\u003c/name\u003e"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            \u003curl\u003ehttps://repo.spring.io/release\u003c/url\u003e"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            \u003csnapshots\u003e"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                \u003cenabled\u003efalse\u003c/enabled\u003e"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            \u003c/snapshots\u003e"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        \u003c/repository\u003e"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    \u003c/repositories\u003e"},{"lineNumber":256,"author":{"gitId":"-"},"content":"\u003c/project\u003e"}],"authorContributionMap":{"Victor":5,"Elina Semenko":5,"-":246}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/command/dispatch/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.command.dispatch;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import java.util.stream.Stream;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":""},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"public enum Command {"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"  GET_JOBS(\"/getAllJobs\"),"},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"  ADD_JOB(\"/addJob\"),"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"  DELETE_JOB(\"/deleteJob\"),"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"  CANCEL(\"/cancel\"),"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":"  ADD_CV(\"/addCV\"),"},{"lineNumber":11,"author":{"gitId":"Victor"},"content":"  UPDATE_CV(\"/updateCV\"),"},{"lineNumber":12,"author":{"gitId":"Victor"},"content":"  DELETE_CV(\"/deleteCV\"),"},{"lineNumber":13,"author":{"gitId":"Victor"},"content":"  GET_ALL_CV(\"/getAllCV\"),"},{"lineNumber":14,"author":{"gitId":"Victor"},"content":"  TOGGLE_CV_HIRES(\"/toggleCVHires\"),"},{"lineNumber":15,"author":{"gitId":"Victor"},"content":"  TOGGLE_CV_OPEN(\"/toggleCVOpen\"),"},{"lineNumber":16,"author":{"gitId":"Victor"},"content":"  UPDATE_CV_COMPETENCES(\"/updateCVCompetences\"),"},{"lineNumber":17,"author":{"gitId":"Khrystyna Boiko"},"content":"  UPDATE_DEPARTMENT_STATUS(\"/updateDepartmentStatus\"),"},{"lineNumber":18,"author":{"gitId":"Victor"},"content":"  UNKNOWN_COMMAND(\"\");"},{"lineNumber":19,"author":{"gitId":"Victor"},"content":""},{"lineNumber":20,"author":{"gitId":"Victor"},"content":"  private final String value;"},{"lineNumber":21,"author":{"gitId":"Victor"},"content":""},{"lineNumber":22,"author":{"gitId":"Victor"},"content":"  Command(String value) {"},{"lineNumber":23,"author":{"gitId":"Victor"},"content":"    this.value \u003d value;"},{"lineNumber":24,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":25,"author":{"gitId":"Victor"},"content":""},{"lineNumber":26,"author":{"gitId":"Victor"},"content":"  public String getValue() {"},{"lineNumber":27,"author":{"gitId":"Victor"},"content":"    return value;"},{"lineNumber":28,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":29,"author":{"gitId":"Victor"},"content":""},{"lineNumber":30,"author":{"gitId":"Victor"},"content":"  public static Command fromString(String commandString) {"},{"lineNumber":31,"author":{"gitId":"Victor"},"content":"    return Stream.of(Command.values())"},{"lineNumber":32,"author":{"gitId":"Victor"},"content":"        .filter(command -\u003e command.getValue().equals(commandString))"},{"lineNumber":33,"author":{"gitId":"Victor"},"content":"        .findFirst()"},{"lineNumber":34,"author":{"gitId":"Victor"},"content":"        .orElse(UNKNOWN_COMMAND);"},{"lineNumber":35,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":36,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":35,"Khrystyna Boiko":1}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/command/dispatch/CommandDispatcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.command.dispatch;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.handler.CommandHandler;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.domain.model.UserState;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.service.UserStateService;"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.web.request.UserRequest;"},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"import lombok.RequiredArgsConstructor;"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":""},{"lineNumber":11,"author":{"gitId":"Victor"},"content":"@Component"},{"lineNumber":12,"author":{"gitId":"Victor"},"content":"@RequiredArgsConstructor"},{"lineNumber":13,"author":{"gitId":"Victor"},"content":"public class CommandDispatcher {"},{"lineNumber":14,"author":{"gitId":"Victor"},"content":""},{"lineNumber":15,"author":{"gitId":"Victor"},"content":"  private final List\u003cCommandHandler\u003e handlers;"},{"lineNumber":16,"author":{"gitId":"Victor"},"content":"  private final CommandHandler unknownCommandHandler;"},{"lineNumber":17,"author":{"gitId":"Victor"},"content":"  private final UserStateService userStateService;"},{"lineNumber":18,"author":{"gitId":"Victor"},"content":""},{"lineNumber":19,"author":{"gitId":"Victor"},"content":"  public void dispatch(UserRequest userRequest) {"},{"lineNumber":20,"author":{"gitId":"Victor"},"content":"    if (userRequest.isCommand()) {"},{"lineNumber":21,"author":{"gitId":"Victor"},"content":"      final Command command \u003d Command.fromString(userRequest.getText());"},{"lineNumber":22,"author":{"gitId":"Victor"},"content":"      final CommandHandler commandHandler \u003d getHandlerForCommand(command);"},{"lineNumber":23,"author":{"gitId":"Victor"},"content":"      commandHandler.handle(userRequest);"},{"lineNumber":24,"author":{"gitId":"Victor"},"content":"    } else {"},{"lineNumber":25,"author":{"gitId":"Victor"},"content":"      final UserState userState \u003d userStateService.getStateForUser(userRequest.getChatId());"},{"lineNumber":26,"author":{"gitId":"Victor"},"content":"      if (!userState.isEmpty()) {"},{"lineNumber":27,"author":{"gitId":"Victor"},"content":"        final Command currentCommand \u003d userState.getCurrentCommand();"},{"lineNumber":28,"author":{"gitId":"Victor"},"content":"        final CommandHandler commandHandler \u003d getHandlerForCommand(currentCommand);"},{"lineNumber":29,"author":{"gitId":"Victor"},"content":"        commandHandler.handle(userRequest);"},{"lineNumber":30,"author":{"gitId":"Victor"},"content":"      }"},{"lineNumber":31,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":33,"author":{"gitId":"Victor"},"content":""},{"lineNumber":34,"author":{"gitId":"Victor"},"content":"  private CommandHandler getHandlerForCommand(Command command) {"},{"lineNumber":35,"author":{"gitId":"Victor"},"content":"    return handlers.stream()"},{"lineNumber":36,"author":{"gitId":"Victor"},"content":"        .filter(handler -\u003e handler.canHandle(command))"},{"lineNumber":37,"author":{"gitId":"Victor"},"content":"        .findFirst()"},{"lineNumber":38,"author":{"gitId":"Victor"},"content":"        .orElse(unknownCommandHandler);"},{"lineNumber":39,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":40,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":40}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/command/handler/CommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.command.handler;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.dispatch.Command;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.web.request.UserRequest;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":""},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"public interface CommandHandler {"},{"lineNumber":7,"author":{"gitId":"Victor"},"content":""},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"  void handle(UserRequest userRequest);"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":""},{"lineNumber":10,"author":{"gitId":"Victor"},"content":"  boolean canHandle(Command command);"},{"lineNumber":11,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":11}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/command/handler/CommandState.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.command.handler;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"public interface CommandState {"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":""},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"  String getName();"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":6}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/command/handler/ToggleActiveCVCommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elina Semenko"},"content":"package edu.kmaooad.command.handler;"},{"lineNumber":2,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.dispatch.Command;"},{"lineNumber":4,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.domain.dto.cv.UpdateCVDTO;"},{"lineNumber":5,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.domain.model.CV;"},{"lineNumber":6,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.domain.model.UserState;"},{"lineNumber":7,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.service.CVService;"},{"lineNumber":8,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.service.TelegramService;"},{"lineNumber":9,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.service.UserStateService;"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.web.request.UserRequest;"},{"lineNumber":11,"author":{"gitId":"Elina Semenko"},"content":"import java.util.Objects;"},{"lineNumber":12,"author":{"gitId":"Elina Semenko"},"content":"import lombok.RequiredArgsConstructor;"},{"lineNumber":13,"author":{"gitId":"Elina Semenko"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":14,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":15,"author":{"gitId":"Elina Semenko"},"content":"@Component"},{"lineNumber":16,"author":{"gitId":"Elina Semenko"},"content":"@RequiredArgsConstructor"},{"lineNumber":17,"author":{"gitId":"Elina Semenko"},"content":"public class ToggleActiveCVCommandHandler implements CommandHandler {"},{"lineNumber":18,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":19,"author":{"gitId":"Elina Semenko"},"content":"  private enum ToggleHireCVState implements CommandState {"},{"lineNumber":20,"author":{"gitId":"Elina Semenko"},"content":"    WAITING_FOR_TOGGLE_CV_DECISION("},{"lineNumber":21,"author":{"gitId":"Elina Semenko"},"content":"        \"TOGGLE_CV_WAITING_FOR_DECISION\", \"You want to toggle hire status for your CV? (Y or N)\"),"},{"lineNumber":22,"author":{"gitId":"Elina Semenko"},"content":"    WAITING_FOR_TOGGLE_CV_ID("},{"lineNumber":23,"author":{"gitId":"Elina Semenko"},"content":"        \"TOGGLE_CV_WAITING_FOR_ID\","},{"lineNumber":24,"author":{"gitId":"Elina Semenko"},"content":"        \"Please, enter an id of the cv which you want to toggle hire status\"),"},{"lineNumber":25,"author":{"gitId":"Elina Semenko"},"content":"    WAITING_FOR_TOGGLE_CV_NAME(\"TOGGLE_CV_WAITING_FOR_NAME\", \"Please, enter your full name\");"},{"lineNumber":26,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":27,"author":{"gitId":"Elina Semenko"},"content":"    private final String name;"},{"lineNumber":28,"author":{"gitId":"Elina Semenko"},"content":"    private final String message;"},{"lineNumber":29,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":30,"author":{"gitId":"Elina Semenko"},"content":"    ToggleHireCVState(String name, String message) {"},{"lineNumber":31,"author":{"gitId":"Elina Semenko"},"content":"      this.name \u003d name;"},{"lineNumber":32,"author":{"gitId":"Elina Semenko"},"content":"      this.message \u003d message;"},{"lineNumber":33,"author":{"gitId":"Elina Semenko"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":35,"author":{"gitId":"Elina Semenko"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"Elina Semenko"},"content":"    public String getName() {"},{"lineNumber":37,"author":{"gitId":"Elina Semenko"},"content":"      return name;"},{"lineNumber":38,"author":{"gitId":"Elina Semenko"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":40,"author":{"gitId":"Elina Semenko"},"content":"    public String getMessage() {"},{"lineNumber":41,"author":{"gitId":"Elina Semenko"},"content":"      return message;"},{"lineNumber":42,"author":{"gitId":"Elina Semenko"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":44,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":45,"author":{"gitId":"Elina Semenko"},"content":"  private final TelegramService telegramService;"},{"lineNumber":46,"author":{"gitId":"Elina Semenko"},"content":"  private final UserStateService userStateService;"},{"lineNumber":47,"author":{"gitId":"Elina Semenko"},"content":"  private final CVService cvService;"},{"lineNumber":48,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":49,"author":{"gitId":"Elina Semenko"},"content":"  @Override"},{"lineNumber":50,"author":{"gitId":"Elina Semenko"},"content":"  public void handle(UserRequest userRequest) {"},{"lineNumber":51,"author":{"gitId":"Elina Semenko"},"content":"    final UserState userState \u003d userStateService.getStateForUser(userRequest.getChatId());"},{"lineNumber":52,"author":{"gitId":"Elina Semenko"},"content":"    if (userState.isEmpty()) {"},{"lineNumber":53,"author":{"gitId":"Elina Semenko"},"content":"      initializeUserState(userRequest, userState);"},{"lineNumber":54,"author":{"gitId":"Elina Semenko"},"content":"    } else {"},{"lineNumber":55,"author":{"gitId":"Elina Semenko"},"content":"      performStateAction(userRequest, userState);"},{"lineNumber":56,"author":{"gitId":"Elina Semenko"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":58,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":59,"author":{"gitId":"Elina Semenko"},"content":"  private void performStateAction(UserRequest userRequest, UserState userState) {"},{"lineNumber":60,"author":{"gitId":"Elina Semenko"},"content":"    final ToggleHireCVState currentState \u003d (ToggleHireCVState) userState.getCommandState();"},{"lineNumber":61,"author":{"gitId":"Elina Semenko"},"content":"    final String userInput \u003d userRequest.getText();"},{"lineNumber":62,"author":{"gitId":"Elina Semenko"},"content":"    final Long chatId \u003d userRequest.getChatId();"},{"lineNumber":63,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":64,"author":{"gitId":"Elina Semenko"},"content":"    switch (currentState) {"},{"lineNumber":65,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_TOGGLE_CV_DECISION:"},{"lineNumber":66,"author":{"gitId":"Elina Semenko"},"content":"        userState.addInput(\"decision\", userInput);"},{"lineNumber":67,"author":{"gitId":"Elina Semenko"},"content":"        ToggleActiveCVCommandHandler.ToggleHireCVState nextState \u003d"},{"lineNumber":68,"author":{"gitId":"Elina Semenko"},"content":"            Objects.equals(userInput, \"Y\")"},{"lineNumber":69,"author":{"gitId":"Elina Semenko"},"content":"                ? ToggleHireCVState.WAITING_FOR_TOGGLE_CV_NAME"},{"lineNumber":70,"author":{"gitId":"Elina Semenko"},"content":"                : ToggleHireCVState.WAITING_FOR_TOGGLE_CV_ID;"},{"lineNumber":71,"author":{"gitId":"Elina Semenko"},"content":"        userState.setCommandState(nextState);"},{"lineNumber":72,"author":{"gitId":"Elina Semenko"},"content":"        telegramService.sendMessage(chatId, nextState.getMessage());"},{"lineNumber":73,"author":{"gitId":"Elina Semenko"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":74,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":75,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":76,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_TOGGLE_CV_ID:"},{"lineNumber":77,"author":{"gitId":"Elina Semenko"},"content":"        if (cvService.getCVById(userInput).isPresent()) {"},{"lineNumber":78,"author":{"gitId":"Elina Semenko"},"content":"          final CV cv \u003d cvService.getCVById(userInput).get();"},{"lineNumber":79,"author":{"gitId":"Elina Semenko"},"content":"          final UpdateCVDTO updateCVDTO \u003d"},{"lineNumber":80,"author":{"gitId":"Elina Semenko"},"content":"              UpdateCVDTO.builder()"},{"lineNumber":81,"author":{"gitId":"Elina Semenko"},"content":"                  .id(cv.getId())"},{"lineNumber":82,"author":{"gitId":"Elina Semenko"},"content":"                  .name(cv.getName())"},{"lineNumber":83,"author":{"gitId":"Elina Semenko"},"content":"                  .description(cv.getDescription())"},{"lineNumber":84,"author":{"gitId":"Elina Semenko"},"content":"                  .activities(cv.getActivities())"},{"lineNumber":85,"author":{"gitId":"Elina Semenko"},"content":"                  .competences(cv.getCompetences())"},{"lineNumber":86,"author":{"gitId":"Elina Semenko"},"content":"                  .preferences(cv.getPreferences())"},{"lineNumber":87,"author":{"gitId":"Elina Semenko"},"content":"                  .isActive(!cv.getIsActive())"},{"lineNumber":88,"author":{"gitId":"Elina Semenko"},"content":"                  .isHidden(cv.getIsHidden())"},{"lineNumber":89,"author":{"gitId":"Elina Semenko"},"content":"                  .manageCompetencies(cv.getManageCompetencies())"},{"lineNumber":90,"author":{"gitId":"Elina Semenko"},"content":"                  .build();"},{"lineNumber":91,"author":{"gitId":"Elina Semenko"},"content":"          cvService.updateCV(updateCVDTO);"},{"lineNumber":92,"author":{"gitId":"Elina Semenko"},"content":"          userState.clear();"},{"lineNumber":93,"author":{"gitId":"Elina Semenko"},"content":"          userStateService.setStateForUser(chatId, userState);"},{"lineNumber":94,"author":{"gitId":"Elina Semenko"},"content":"          telegramService.sendMessage(chatId, \"Successfully updated CV!\");"},{"lineNumber":95,"author":{"gitId":"Elina Semenko"},"content":"        } else {"},{"lineNumber":96,"author":{"gitId":"Elina Semenko"},"content":"          telegramService.sendMessage("},{"lineNumber":97,"author":{"gitId":"Elina Semenko"},"content":"              chatId, \"CV with provided id doesn\u0027t exists! Please, provide a valid id\");"},{"lineNumber":98,"author":{"gitId":"Elina Semenko"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":100,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":101,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_TOGGLE_CV_NAME:"},{"lineNumber":102,"author":{"gitId":"Elina Semenko"},"content":"        if (cvService.getCVByName(userInput).isPresent()) {"},{"lineNumber":103,"author":{"gitId":"Elina Semenko"},"content":"          final CV cv \u003d cvService.getCVByName(userInput).get();"},{"lineNumber":104,"author":{"gitId":"Elina Semenko"},"content":"          final UpdateCVDTO updateCVDTO \u003d"},{"lineNumber":105,"author":{"gitId":"Elina Semenko"},"content":"              UpdateCVDTO.builder()"},{"lineNumber":106,"author":{"gitId":"Elina Semenko"},"content":"                  .name(cv.getName())"},{"lineNumber":107,"author":{"gitId":"Elina Semenko"},"content":"                  .description(cv.getDescription())"},{"lineNumber":108,"author":{"gitId":"Elina Semenko"},"content":"                  .activities(cv.getActivities())"},{"lineNumber":109,"author":{"gitId":"Elina Semenko"},"content":"                  .competences(cv.getCompetences())"},{"lineNumber":110,"author":{"gitId":"Elina Semenko"},"content":"                  .preferences(cv.getPreferences())"},{"lineNumber":111,"author":{"gitId":"Elina Semenko"},"content":"                  .isActive(!cv.getIsActive())"},{"lineNumber":112,"author":{"gitId":"Elina Semenko"},"content":"                  .isHidden(cv.getIsHidden())"},{"lineNumber":113,"author":{"gitId":"Elina Semenko"},"content":"                  .manageCompetencies(cv.getManageCompetencies())"},{"lineNumber":114,"author":{"gitId":"Elina Semenko"},"content":"                  .build();"},{"lineNumber":115,"author":{"gitId":"Elina Semenko"},"content":"          cvService.updateCV(updateCVDTO);"},{"lineNumber":116,"author":{"gitId":"Elina Semenko"},"content":"          userState.clear();"},{"lineNumber":117,"author":{"gitId":"Elina Semenko"},"content":"          userStateService.setStateForUser(chatId, userState);"},{"lineNumber":118,"author":{"gitId":"Elina Semenko"},"content":"          telegramService.sendMessage(chatId, \"Successfully updated CV!\");"},{"lineNumber":119,"author":{"gitId":"Elina Semenko"},"content":"        } else {"},{"lineNumber":120,"author":{"gitId":"Elina Semenko"},"content":"          telegramService.sendMessage("},{"lineNumber":121,"author":{"gitId":"Elina Semenko"},"content":"              chatId, \"CV with provided full name doesn\u0027t exists! Please, provide a valid id\");"},{"lineNumber":122,"author":{"gitId":"Elina Semenko"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":124,"author":{"gitId":"Elina Semenko"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":126,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":127,"author":{"gitId":"Elina Semenko"},"content":"  private void initializeUserState(UserRequest userRequest, UserState userState) {"},{"lineNumber":128,"author":{"gitId":"Elina Semenko"},"content":"    final Long chatId \u003d userRequest.getChatId();"},{"lineNumber":129,"author":{"gitId":"Elina Semenko"},"content":"    userState.setCurrentCommand(Command.TOGGLE_CV_HIRES);"},{"lineNumber":130,"author":{"gitId":"Elina Semenko"},"content":"    userState.setCommandState(ToggleHireCVState.WAITING_FOR_TOGGLE_CV_DECISION);"},{"lineNumber":131,"author":{"gitId":"Elina Semenko"},"content":"    userStateService.setStateForUser(chatId, userState);"},{"lineNumber":132,"author":{"gitId":"Elina Semenko"},"content":"    telegramService.sendMessage("},{"lineNumber":133,"author":{"gitId":"Elina Semenko"},"content":"        chatId, ToggleHireCVState.WAITING_FOR_TOGGLE_CV_DECISION.getMessage());"},{"lineNumber":134,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":135,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":136,"author":{"gitId":"Elina Semenko"},"content":"  @Override"},{"lineNumber":137,"author":{"gitId":"Elina Semenko"},"content":"  public boolean canHandle(Command command) {"},{"lineNumber":138,"author":{"gitId":"Elina Semenko"},"content":"    return command.equals(Command.TOGGLE_CV_HIRES);"},{"lineNumber":139,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":140,"author":{"gitId":"Elina Semenko"},"content":"}"}],"authorContributionMap":{"Elina Semenko":138,"Victor":2}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/command/handler/common/CancelCommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.command.handler.common;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.dispatch.Command;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.handler.CommandHandler;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.domain.model.UserState;"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.service.TelegramService;"},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.service.UserStateService;"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.web.request.UserRequest;"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"import lombok.RequiredArgsConstructor;"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":11,"author":{"gitId":"Victor"},"content":""},{"lineNumber":12,"author":{"gitId":"Victor"},"content":"@Component"},{"lineNumber":13,"author":{"gitId":"Victor"},"content":"@RequiredArgsConstructor"},{"lineNumber":14,"author":{"gitId":"Victor"},"content":"public class CancelCommandHandler implements CommandHandler {"},{"lineNumber":15,"author":{"gitId":"Victor"},"content":""},{"lineNumber":16,"author":{"gitId":"Victor"},"content":"  private final TelegramService telegramService;"},{"lineNumber":17,"author":{"gitId":"Victor"},"content":"  private final UserStateService userStateService;"},{"lineNumber":18,"author":{"gitId":"Victor"},"content":""},{"lineNumber":19,"author":{"gitId":"Victor"},"content":"  @Override"},{"lineNumber":20,"author":{"gitId":"Victor"},"content":"  public void handle(UserRequest userRequest) {"},{"lineNumber":21,"author":{"gitId":"Victor"},"content":"    final Long chatId \u003d userRequest.getChatId();"},{"lineNumber":22,"author":{"gitId":"Victor"},"content":"    final UserState userState \u003d userStateService.getStateForUser(chatId);"},{"lineNumber":23,"author":{"gitId":"Victor"},"content":"    if (!userState.isEmpty()) {"},{"lineNumber":24,"author":{"gitId":"Victor"},"content":"      userState.clear();"},{"lineNumber":25,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Victor"},"content":"    telegramService.sendMessage("},{"lineNumber":27,"author":{"gitId":"Victor"},"content":"        chatId,"},{"lineNumber":28,"author":{"gitId":"Victor"},"content":"        \"Current active command was cancelled! Please, enter a command you want to execute\");"},{"lineNumber":29,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":30,"author":{"gitId":"Victor"},"content":""},{"lineNumber":31,"author":{"gitId":"Victor"},"content":"  @Override"},{"lineNumber":32,"author":{"gitId":"Victor"},"content":"  public boolean canHandle(Command command) {"},{"lineNumber":33,"author":{"gitId":"Victor"},"content":"    return command.equals(Command.CANCEL);"},{"lineNumber":34,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":35,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":35}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/command/handler/common/UnknownCommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.command.handler.common;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.dispatch.Command;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.handler.CommandHandler;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.service.TelegramService;"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.web.request.UserRequest;"},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"import lombok.RequiredArgsConstructor;"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":""},{"lineNumber":10,"author":{"gitId":"Victor"},"content":"@Component"},{"lineNumber":11,"author":{"gitId":"Victor"},"content":"@RequiredArgsConstructor"},{"lineNumber":12,"author":{"gitId":"Victor"},"content":"public class UnknownCommandHandler implements CommandHandler {"},{"lineNumber":13,"author":{"gitId":"Victor"},"content":""},{"lineNumber":14,"author":{"gitId":"Victor"},"content":"  private final TelegramService telegramService;"},{"lineNumber":15,"author":{"gitId":"Victor"},"content":""},{"lineNumber":16,"author":{"gitId":"Victor"},"content":"  @Override"},{"lineNumber":17,"author":{"gitId":"Victor"},"content":"  public void handle(UserRequest userRequest) {"},{"lineNumber":18,"author":{"gitId":"Victor"},"content":"    telegramService.sendMessage("},{"lineNumber":19,"author":{"gitId":"Victor"},"content":"        userRequest.getChatId(), \"Unknown command! Please, provide a valid command\");"},{"lineNumber":20,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":21,"author":{"gitId":"Victor"},"content":""},{"lineNumber":22,"author":{"gitId":"Victor"},"content":"  @Override"},{"lineNumber":23,"author":{"gitId":"Victor"},"content":"  public boolean canHandle(Command command) {"},{"lineNumber":24,"author":{"gitId":"Victor"},"content":"    return command.equals(Command.UNKNOWN_COMMAND);"},{"lineNumber":25,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":26,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":26}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/command/handler/cv/AddCVCommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.command.handler.cv;"},{"lineNumber":2,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.dispatch.Command;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.handler.CommandHandler;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.handler.CommandState;"},{"lineNumber":6,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.domain.dto.cv.AddCVDTO;"},{"lineNumber":7,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.domain.model.CompetenceCenter;"},{"lineNumber":8,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.domain.model.UserState;"},{"lineNumber":9,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.service.CVService;"},{"lineNumber":10,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.service.TelegramService;"},{"lineNumber":11,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.service.UserStateService;"},{"lineNumber":12,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.web.request.UserRequest;"},{"lineNumber":13,"author":{"gitId":"Elina Semenko"},"content":"import java.util.List;"},{"lineNumber":14,"author":{"gitId":"Elina Semenko"},"content":"import java.util.Map;"},{"lineNumber":15,"author":{"gitId":"Elina Semenko"},"content":"import java.util.Objects;"},{"lineNumber":16,"author":{"gitId":"Elina Semenko"},"content":"import lombok.RequiredArgsConstructor;"},{"lineNumber":17,"author":{"gitId":"Elina Semenko"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":18,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":19,"author":{"gitId":"Elina Semenko"},"content":"@Component"},{"lineNumber":20,"author":{"gitId":"Elina Semenko"},"content":"@RequiredArgsConstructor"},{"lineNumber":21,"author":{"gitId":"Elina Semenko"},"content":"public class AddCVCommandHandler implements CommandHandler {"},{"lineNumber":22,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":23,"author":{"gitId":"Elina Semenko"},"content":"  private enum AddCVState implements CommandState {"},{"lineNumber":24,"author":{"gitId":"Elina Semenko"},"content":"    WAITING_FOR_NAME(\"ADD_CV_WAITING_FOR_NAME\", \"Please, enter you full name (must not be empty)\"),"},{"lineNumber":25,"author":{"gitId":"Elina Semenko"},"content":"    WAITING_FOR_DESCRIPTION("},{"lineNumber":26,"author":{"gitId":"Elina Semenko"},"content":"        \"ADD_CV_WAITING_FOR_DESCRIPTION\", \"Please, enter short summary (can be empty)\"),"},{"lineNumber":27,"author":{"gitId":"Elina Semenko"},"content":"    WAITING_FOR_ACTIVITIES("},{"lineNumber":28,"author":{"gitId":"Elina Semenko"},"content":"        \"ADD_CV_WAITING_FOR_ACTIVITIES\","},{"lineNumber":29,"author":{"gitId":"Elina Semenko"},"content":"        \"Please, enter a list of job activities (as comma-separated list)\"),"},{"lineNumber":30,"author":{"gitId":"Elina Semenko"},"content":"    WAITING_FOR_MANAGE_COMPETENCIES("},{"lineNumber":31,"author":{"gitId":"Elina Semenko"},"content":"        \"ADD_CV_WAITING_FOR_MANAGE_COMPETENCIES\","},{"lineNumber":32,"author":{"gitId":"Elina Semenko"},"content":"        \"Should your competencies be filled automatically? (Y or N)\"),"},{"lineNumber":33,"author":{"gitId":"Elina Semenko"},"content":"    WAITING_FOR_COMPETENCES("},{"lineNumber":34,"author":{"gitId":"Elina Semenko"},"content":"        \"ADD_CV_WAITING_FOR_COMPETENCES\","},{"lineNumber":35,"author":{"gitId":"Elina Semenko"},"content":"        \"Please, enter a list of you job competences (as comma-separated list)\"),"},{"lineNumber":36,"author":{"gitId":"Elina Semenko"},"content":"    WAITING_FOR_PREFERENCES("},{"lineNumber":37,"author":{"gitId":"Elina Semenko"},"content":"        \"ADD_CV_WAITING_FOR_PREFERENCES\","},{"lineNumber":38,"author":{"gitId":"Elina Semenko"},"content":"        \"Please, enter a list of you job preferences (as comma-separated list)\"),"},{"lineNumber":39,"author":{"gitId":"Elina Semenko"},"content":"    WAITING_FOR_IS_ACTIVE("},{"lineNumber":40,"author":{"gitId":"Elina Semenko"},"content":"        \"ADD_CV_WAITING_FOR_IS_ACTIVE\", \"Are you open to new opportunities? (Y or N)\"),"},{"lineNumber":41,"author":{"gitId":"Victor"},"content":"    WAITING_FOR_IS_HIDDEN(\"ADD_CV_WAITING_FOR_IS_HIDDEN\", \"Hide your cv? (Y or N)\");"},{"lineNumber":42,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":43,"author":{"gitId":"Elina Semenko"},"content":"    private final String name;"},{"lineNumber":44,"author":{"gitId":"Elina Semenko"},"content":"    private final String message;"},{"lineNumber":45,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":46,"author":{"gitId":"Elina Semenko"},"content":"    AddCVState(String name, String message) {"},{"lineNumber":47,"author":{"gitId":"Elina Semenko"},"content":"      this.name \u003d name;"},{"lineNumber":48,"author":{"gitId":"Elina Semenko"},"content":"      this.message \u003d message;"},{"lineNumber":49,"author":{"gitId":"Elina Semenko"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":51,"author":{"gitId":"Elina Semenko"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"Elina Semenko"},"content":"    public String getName() {"},{"lineNumber":53,"author":{"gitId":"Elina Semenko"},"content":"      return name;"},{"lineNumber":54,"author":{"gitId":"Elina Semenko"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":56,"author":{"gitId":"Elina Semenko"},"content":"    public String getMessage() {"},{"lineNumber":57,"author":{"gitId":"Elina Semenko"},"content":"      return message;"},{"lineNumber":58,"author":{"gitId":"Elina Semenko"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":60,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":61,"author":{"gitId":"Elina Semenko"},"content":"  private final TelegramService telegramService;"},{"lineNumber":62,"author":{"gitId":"Elina Semenko"},"content":"  private final UserStateService userStateService;"},{"lineNumber":63,"author":{"gitId":"Elina Semenko"},"content":"  private final CVService cvService;"},{"lineNumber":64,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":65,"author":{"gitId":"Elina Semenko"},"content":"  @Override"},{"lineNumber":66,"author":{"gitId":"Elina Semenko"},"content":"  public void handle(UserRequest userRequest) {"},{"lineNumber":67,"author":{"gitId":"Elina Semenko"},"content":"    final UserState userState \u003d userStateService.getStateForUser(userRequest.getChatId());"},{"lineNumber":68,"author":{"gitId":"Elina Semenko"},"content":"    if (userState.isEmpty()) {"},{"lineNumber":69,"author":{"gitId":"Elina Semenko"},"content":"      initializeUserState(userRequest, userState);"},{"lineNumber":70,"author":{"gitId":"Elina Semenko"},"content":"    } else {"},{"lineNumber":71,"author":{"gitId":"Elina Semenko"},"content":"      performStateAction(userRequest, userState);"},{"lineNumber":72,"author":{"gitId":"Elina Semenko"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":74,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":75,"author":{"gitId":"Elina Semenko"},"content":"  private void performStateAction(UserRequest userRequest, UserState userState) {"},{"lineNumber":76,"author":{"gitId":"Victor"},"content":"    final AddCVCommandHandler.AddCVState currentState \u003d"},{"lineNumber":77,"author":{"gitId":"Victor"},"content":"        (AddCVCommandHandler.AddCVState) userState.getCommandState();"},{"lineNumber":78,"author":{"gitId":"Elina Semenko"},"content":"    final String userInput \u003d userRequest.getText();"},{"lineNumber":79,"author":{"gitId":"Elina Semenko"},"content":"    final Long chatId \u003d userRequest.getChatId();"},{"lineNumber":80,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":81,"author":{"gitId":"Elina Semenko"},"content":"    switch (currentState) {"},{"lineNumber":82,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_NAME:"},{"lineNumber":83,"author":{"gitId":"Elina Semenko"},"content":"        userState.addInput(\"name\", userInput);"},{"lineNumber":84,"author":{"gitId":"Elina Semenko"},"content":"        userState.setCommandState(AddCVCommandHandler.AddCVState.WAITING_FOR_DESCRIPTION);"},{"lineNumber":85,"author":{"gitId":"Victor"},"content":"        telegramService.sendMessage("},{"lineNumber":86,"author":{"gitId":"Victor"},"content":"            chatId, AddCVCommandHandler.AddCVState.WAITING_FOR_DESCRIPTION.getMessage());"},{"lineNumber":87,"author":{"gitId":"Elina Semenko"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":88,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":89,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":90,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_DESCRIPTION:"},{"lineNumber":91,"author":{"gitId":"Elina Semenko"},"content":"        userState.addInput(\"description\", userInput);"},{"lineNumber":92,"author":{"gitId":"Elina Semenko"},"content":"        userState.setCommandState(AddCVCommandHandler.AddCVState.WAITING_FOR_ACTIVITIES);"},{"lineNumber":93,"author":{"gitId":"Victor"},"content":"        telegramService.sendMessage("},{"lineNumber":94,"author":{"gitId":"Victor"},"content":"            chatId, AddCVCommandHandler.AddCVState.WAITING_FOR_ACTIVITIES.getMessage());"},{"lineNumber":95,"author":{"gitId":"Elina Semenko"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":96,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":97,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":98,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_ACTIVITIES:"},{"lineNumber":99,"author":{"gitId":"Elina Semenko"},"content":"        userState.addInput(\"activities\", userInput);"},{"lineNumber":100,"author":{"gitId":"Elina Semenko"},"content":"        userState.setCommandState(AddCVCommandHandler.AddCVState.WAITING_FOR_MANAGE_COMPETENCIES);"},{"lineNumber":101,"author":{"gitId":"Victor"},"content":"        telegramService.sendMessage("},{"lineNumber":102,"author":{"gitId":"Victor"},"content":"            chatId, AddCVCommandHandler.AddCVState.WAITING_FOR_MANAGE_COMPETENCIES.getMessage());"},{"lineNumber":103,"author":{"gitId":"Elina Semenko"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":104,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":105,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":106,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_MANAGE_COMPETENCIES:"},{"lineNumber":107,"author":{"gitId":"Elina Semenko"},"content":"        userState.addInput(\"manageCompetencies\", userInput);"},{"lineNumber":108,"author":{"gitId":"Victor"},"content":"        AddCVState nextState \u003d"},{"lineNumber":109,"author":{"gitId":"Victor"},"content":"            Objects.equals(userInput, \"Y\")"},{"lineNumber":110,"author":{"gitId":"Victor"},"content":"                ? AddCVCommandHandler.AddCVState.WAITING_FOR_PREFERENCES"},{"lineNumber":111,"author":{"gitId":"Victor"},"content":"                : AddCVCommandHandler.AddCVState.WAITING_FOR_COMPETENCES;"},{"lineNumber":112,"author":{"gitId":"Elina Semenko"},"content":"        userState.setCommandState(nextState);"},{"lineNumber":113,"author":{"gitId":"Elina Semenko"},"content":"        telegramService.sendMessage(chatId, nextState.getMessage());"},{"lineNumber":114,"author":{"gitId":"Elina Semenko"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":115,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":116,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":117,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_COMPETENCES:"},{"lineNumber":118,"author":{"gitId":"Elina Semenko"},"content":"        userState.addInput(\"competences\", userInput);"},{"lineNumber":119,"author":{"gitId":"Elina Semenko"},"content":"        userState.setCommandState(AddCVCommandHandler.AddCVState.WAITING_FOR_PREFERENCES);"},{"lineNumber":120,"author":{"gitId":"Victor"},"content":"        telegramService.sendMessage("},{"lineNumber":121,"author":{"gitId":"Victor"},"content":"            chatId, AddCVCommandHandler.AddCVState.WAITING_FOR_PREFERENCES.getMessage());"},{"lineNumber":122,"author":{"gitId":"Elina Semenko"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":123,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":124,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":125,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_PREFERENCES:"},{"lineNumber":126,"author":{"gitId":"Elina Semenko"},"content":"        userState.addInput(\"preferences\", userInput);"},{"lineNumber":127,"author":{"gitId":"Elina Semenko"},"content":"        userState.setCommandState(AddCVCommandHandler.AddCVState.WAITING_FOR_IS_HIDDEN);"},{"lineNumber":128,"author":{"gitId":"Elina Semenko"},"content":"        telegramService.sendMessage("},{"lineNumber":129,"author":{"gitId":"Elina Semenko"},"content":"            chatId, AddCVCommandHandler.AddCVState.WAITING_FOR_IS_HIDDEN.getMessage());"},{"lineNumber":130,"author":{"gitId":"Elina Semenko"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":131,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":132,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":133,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_IS_HIDDEN:"},{"lineNumber":134,"author":{"gitId":"Elina Semenko"},"content":"        userState.addInput(\"isHidden\", userInput);"},{"lineNumber":135,"author":{"gitId":"Elina Semenko"},"content":"        userState.setCommandState(AddCVCommandHandler.AddCVState.WAITING_FOR_IS_ACTIVE);"},{"lineNumber":136,"author":{"gitId":"Victor"},"content":"        telegramService.sendMessage("},{"lineNumber":137,"author":{"gitId":"Victor"},"content":"            chatId, AddCVCommandHandler.AddCVState.WAITING_FOR_IS_ACTIVE.getMessage());"},{"lineNumber":138,"author":{"gitId":"Elina Semenko"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":139,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":140,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":141,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_IS_ACTIVE:"},{"lineNumber":142,"author":{"gitId":"Elina Semenko"},"content":"        userState.addInput(\"isActive\", userInput);"},{"lineNumber":143,"author":{"gitId":"Elina Semenko"},"content":"        final Map\u003cString, String\u003e inputs \u003d userState.getInputs();"},{"lineNumber":144,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":145,"author":{"gitId":"Elina Semenko"},"content":"        CompetenceCenter competenceCenter \u003d new CompetenceCenter();"},{"lineNumber":146,"author":{"gitId":"Elina Semenko"},"content":"        List\u003cString\u003e activities \u003d List.of(inputs.get(\"activities\"));"},{"lineNumber":147,"author":{"gitId":"Elina Semenko"},"content":"        final AddCVDTO addCVDTO \u003d"},{"lineNumber":148,"author":{"gitId":"Elina Semenko"},"content":"            AddCVDTO.builder()"},{"lineNumber":149,"author":{"gitId":"Elina Semenko"},"content":"                .name(inputs.get(\"name\"))"},{"lineNumber":150,"author":{"gitId":"Elina Semenko"},"content":"                .description(inputs.get(\"description\"))"},{"lineNumber":151,"author":{"gitId":"Elina Semenko"},"content":"                .activities(activities)"},{"lineNumber":152,"author":{"gitId":"Victor"},"content":"                .competences("},{"lineNumber":153,"author":{"gitId":"Victor"},"content":"                    inputs.get(\"competences\") !\u003d null"},{"lineNumber":154,"author":{"gitId":"Victor"},"content":"                        ? List.of(inputs.get(\"competences\"))"},{"lineNumber":155,"author":{"gitId":"Victor"},"content":"                        : competenceCenter.generateCompetencies("},{"lineNumber":156,"author":{"gitId":"Victor"},"content":"                            activities)) // form list automatically"},{"lineNumber":157,"author":{"gitId":"Elina Semenko"},"content":"                .preferences(List.of(inputs.get(\"preferences\"))) // check if not empty!"},{"lineNumber":158,"author":{"gitId":"Elina Semenko"},"content":"                .isActive(Objects.equals(inputs.get(\"isActive\"), \"Y\"))"},{"lineNumber":159,"author":{"gitId":"Elina Semenko"},"content":"                .isHidden(Objects.equals(inputs.get(\"isHidden\"), \"Y\"))"},{"lineNumber":160,"author":{"gitId":"Elina Semenko"},"content":"                .manageCompetencies(Objects.equals(inputs.get(\"manageCompetencies\"), \"Y\"))"},{"lineNumber":161,"author":{"gitId":"Elina Semenko"},"content":"                .build();"},{"lineNumber":162,"author":{"gitId":"Elina Semenko"},"content":"        cvService.addCV(addCVDTO);"},{"lineNumber":163,"author":{"gitId":"Elina Semenko"},"content":"        telegramService.sendMessage(chatId, \"Successfully added your cv!\");"},{"lineNumber":164,"author":{"gitId":"Elina Semenko"},"content":"        userState.clear();"},{"lineNumber":165,"author":{"gitId":"Elina Semenko"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":166,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":167,"author":{"gitId":"Elina Semenko"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":169,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":170,"author":{"gitId":"Elina Semenko"},"content":"  private void initializeUserState(UserRequest userRequest, UserState userState) {"},{"lineNumber":171,"author":{"gitId":"Elina Semenko"},"content":"    final Long chatId \u003d userRequest.getChatId();"},{"lineNumber":172,"author":{"gitId":"Elina Semenko"},"content":"    userState.setCurrentCommand(Command.ADD_CV);"},{"lineNumber":173,"author":{"gitId":"Elina Semenko"},"content":"    userState.setCommandState(AddCVCommandHandler.AddCVState.WAITING_FOR_NAME);"},{"lineNumber":174,"author":{"gitId":"Elina Semenko"},"content":"    userStateService.setStateForUser(chatId, userState);"},{"lineNumber":175,"author":{"gitId":"Victor"},"content":"    telegramService.sendMessage("},{"lineNumber":176,"author":{"gitId":"Victor"},"content":"        chatId, AddCVCommandHandler.AddCVState.WAITING_FOR_NAME.getMessage());"},{"lineNumber":177,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":178,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":179,"author":{"gitId":"Elina Semenko"},"content":"  @Override"},{"lineNumber":180,"author":{"gitId":"Elina Semenko"},"content":"  public boolean canHandle(Command command) {"},{"lineNumber":181,"author":{"gitId":"Elina Semenko"},"content":"    return command.equals(Command.ADD_CV);"},{"lineNumber":182,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":183,"author":{"gitId":"Elina Semenko"},"content":"}"}],"authorContributionMap":{"Victor":29,"Elina Semenko":154}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/command/handler/cv/DeleteCVCommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.command.handler.cv;"},{"lineNumber":2,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.dispatch.Command;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.handler.CommandHandler;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.handler.CommandState;"},{"lineNumber":6,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.domain.model.UserState;"},{"lineNumber":7,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.service.CVService;"},{"lineNumber":8,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.service.TelegramService;"},{"lineNumber":9,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.service.UserStateService;"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.web.request.UserRequest;"},{"lineNumber":11,"author":{"gitId":"Victor"},"content":"import java.util.Objects;"},{"lineNumber":12,"author":{"gitId":"Elina Semenko"},"content":"import lombok.RequiredArgsConstructor;"},{"lineNumber":13,"author":{"gitId":"Elina Semenko"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":14,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":15,"author":{"gitId":"Elina Semenko"},"content":"@Component"},{"lineNumber":16,"author":{"gitId":"Elina Semenko"},"content":"@RequiredArgsConstructor"},{"lineNumber":17,"author":{"gitId":"Elina Semenko"},"content":"public class DeleteCVCommandHandler implements CommandHandler {"},{"lineNumber":18,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":19,"author":{"gitId":"Elina Semenko"},"content":"  private enum DeleteCVState implements CommandState {"},{"lineNumber":20,"author":{"gitId":"Elina Semenko"},"content":"    WAITING_FOR_CV_DECISION("},{"lineNumber":21,"author":{"gitId":"Elina Semenko"},"content":"        \"DELETE_CV_WAITING_FOR_DECISION\", \"You want to delete your CV? (Y or N)\"),"},{"lineNumber":22,"author":{"gitId":"Elina Semenko"},"content":"    WAITING_FOR_CV_ID("},{"lineNumber":23,"author":{"gitId":"Elina Semenko"},"content":"        \"DELETE_CV_WAITING_FOR_ID\", \"Please, enter an id of the cv which you want to delete\"),"},{"lineNumber":24,"author":{"gitId":"Victor"},"content":"    WAITING_FOR_CV_NAME(\"DELETE_CV_WAITING_FOR_NAME\", \"Please, enter your full name\");"},{"lineNumber":25,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":26,"author":{"gitId":"Elina Semenko"},"content":"    private final String name;"},{"lineNumber":27,"author":{"gitId":"Elina Semenko"},"content":"    private final String message;"},{"lineNumber":28,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":29,"author":{"gitId":"Elina Semenko"},"content":"    DeleteCVState(String name, String message) {"},{"lineNumber":30,"author":{"gitId":"Elina Semenko"},"content":"      this.name \u003d name;"},{"lineNumber":31,"author":{"gitId":"Elina Semenko"},"content":"      this.message \u003d message;"},{"lineNumber":32,"author":{"gitId":"Elina Semenko"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":34,"author":{"gitId":"Elina Semenko"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"Elina Semenko"},"content":"    public String getName() {"},{"lineNumber":36,"author":{"gitId":"Elina Semenko"},"content":"      return name;"},{"lineNumber":37,"author":{"gitId":"Elina Semenko"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":39,"author":{"gitId":"Elina Semenko"},"content":"    public String getMessage() {"},{"lineNumber":40,"author":{"gitId":"Elina Semenko"},"content":"      return message;"},{"lineNumber":41,"author":{"gitId":"Elina Semenko"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":43,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":44,"author":{"gitId":"Elina Semenko"},"content":"  private final TelegramService telegramService;"},{"lineNumber":45,"author":{"gitId":"Elina Semenko"},"content":"  private final UserStateService userStateService;"},{"lineNumber":46,"author":{"gitId":"Elina Semenko"},"content":"  private final CVService cvService;"},{"lineNumber":47,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":48,"author":{"gitId":"Elina Semenko"},"content":"  @Override"},{"lineNumber":49,"author":{"gitId":"Elina Semenko"},"content":"  public void handle(UserRequest userRequest) {"},{"lineNumber":50,"author":{"gitId":"Elina Semenko"},"content":"    final UserState userState \u003d userStateService.getStateForUser(userRequest.getChatId());"},{"lineNumber":51,"author":{"gitId":"Elina Semenko"},"content":"    if (userState.isEmpty()) {"},{"lineNumber":52,"author":{"gitId":"Elina Semenko"},"content":"      initializeUserState(userRequest, userState);"},{"lineNumber":53,"author":{"gitId":"Elina Semenko"},"content":"    } else {"},{"lineNumber":54,"author":{"gitId":"Elina Semenko"},"content":"      performStateAction(userRequest, userState);"},{"lineNumber":55,"author":{"gitId":"Elina Semenko"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":57,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":58,"author":{"gitId":"Elina Semenko"},"content":"  private void performStateAction(UserRequest userRequest, UserState userState) {"},{"lineNumber":59,"author":{"gitId":"Elina Semenko"},"content":"    final DeleteCVState currentState \u003d (DeleteCVState) userState.getCommandState();"},{"lineNumber":60,"author":{"gitId":"Elina Semenko"},"content":"    final String userInput \u003d userRequest.getText();"},{"lineNumber":61,"author":{"gitId":"Elina Semenko"},"content":"    final Long chatId \u003d userRequest.getChatId();"},{"lineNumber":62,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":63,"author":{"gitId":"Elina Semenko"},"content":"    switch (currentState) {"},{"lineNumber":64,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_CV_DECISION:"},{"lineNumber":65,"author":{"gitId":"Elina Semenko"},"content":"        userState.addInput(\"decision\", userInput);"},{"lineNumber":66,"author":{"gitId":"Victor"},"content":"        DeleteCVCommandHandler.DeleteCVState nextState \u003d"},{"lineNumber":67,"author":{"gitId":"Victor"},"content":"            Objects.equals(userInput, \"Y\")"},{"lineNumber":68,"author":{"gitId":"Victor"},"content":"                ? DeleteCVState.WAITING_FOR_CV_NAME"},{"lineNumber":69,"author":{"gitId":"Victor"},"content":"                : DeleteCVState.WAITING_FOR_CV_ID;"},{"lineNumber":70,"author":{"gitId":"Elina Semenko"},"content":"        userState.setCommandState(nextState);"},{"lineNumber":71,"author":{"gitId":"Elina Semenko"},"content":"        telegramService.sendMessage(chatId, nextState.getMessage());"},{"lineNumber":72,"author":{"gitId":"Elina Semenko"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":73,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":74,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":75,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_CV_ID:"},{"lineNumber":76,"author":{"gitId":"Elina Semenko"},"content":"        if (cvService.getCVById(userInput).isPresent()) {"},{"lineNumber":77,"author":{"gitId":"Elina Semenko"},"content":"          cvService.deleteCV(userInput);"},{"lineNumber":78,"author":{"gitId":"Elina Semenko"},"content":"          userState.clear();"},{"lineNumber":79,"author":{"gitId":"Elina Semenko"},"content":"          userStateService.setStateForUser(chatId, userState);"},{"lineNumber":80,"author":{"gitId":"Elina Semenko"},"content":"          telegramService.sendMessage(chatId, \"Successfully deleted CV!\");"},{"lineNumber":81,"author":{"gitId":"Elina Semenko"},"content":"        } else {"},{"lineNumber":82,"author":{"gitId":"Victor"},"content":"          telegramService.sendMessage(chatId, \"CV with provided id doesn\u0027t exist!\");"},{"lineNumber":83,"author":{"gitId":"Elina Semenko"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":85,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":86,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_CV_NAME:"},{"lineNumber":87,"author":{"gitId":"Elina Semenko"},"content":"        if (cvService.getCVByName(userInput).isPresent()) {"},{"lineNumber":88,"author":{"gitId":"Elina Semenko"},"content":"          cvService.deleteCV(userInput);"},{"lineNumber":89,"author":{"gitId":"Elina Semenko"},"content":"          userState.clear();"},{"lineNumber":90,"author":{"gitId":"Elina Semenko"},"content":"          userStateService.setStateForUser(chatId, userState);"},{"lineNumber":91,"author":{"gitId":"Elina Semenko"},"content":"          telegramService.sendMessage(chatId, \"Successfully deleted CV!\");"},{"lineNumber":92,"author":{"gitId":"Elina Semenko"},"content":"        } else {"},{"lineNumber":93,"author":{"gitId":"Victor"},"content":"          telegramService.sendMessage(chatId, \"CV with provided full name doesn\u0027t exist!\");"},{"lineNumber":94,"author":{"gitId":"Elina Semenko"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":96,"author":{"gitId":"Elina Semenko"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":98,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":99,"author":{"gitId":"Elina Semenko"},"content":"  private void initializeUserState(UserRequest userRequest, UserState userState) {"},{"lineNumber":100,"author":{"gitId":"Elina Semenko"},"content":"    final Long chatId \u003d userRequest.getChatId();"},{"lineNumber":101,"author":{"gitId":"Elina Semenko"},"content":"    userState.setCurrentCommand(Command.DELETE_CV);"},{"lineNumber":102,"author":{"gitId":"Elina Semenko"},"content":"    userState.setCommandState(DeleteCVState.WAITING_FOR_CV_DECISION);"},{"lineNumber":103,"author":{"gitId":"Elina Semenko"},"content":"    userStateService.setStateForUser(chatId, userState);"},{"lineNumber":104,"author":{"gitId":"Elina Semenko"},"content":"    telegramService.sendMessage(chatId, DeleteCVState.WAITING_FOR_CV_DECISION.getMessage());"},{"lineNumber":105,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":106,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":107,"author":{"gitId":"Elina Semenko"},"content":"  @Override"},{"lineNumber":108,"author":{"gitId":"Elina Semenko"},"content":"  public boolean canHandle(Command command) {"},{"lineNumber":109,"author":{"gitId":"Elina Semenko"},"content":"    return command.equals(Command.DELETE_CV);"},{"lineNumber":110,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":111,"author":{"gitId":"Elina Semenko"},"content":"}"}],"authorContributionMap":{"Victor":13,"Elina Semenko":98}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/command/handler/cv/GetAllCVCommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.command.handler.cv;"},{"lineNumber":2,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.dispatch.Command;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.handler.CommandHandler;"},{"lineNumber":5,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.domain.model.CV;"},{"lineNumber":6,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.service.CVService;"},{"lineNumber":7,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.service.TelegramService;"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.web.request.UserRequest;"},{"lineNumber":9,"author":{"gitId":"Elina Semenko"},"content":"import lombok.RequiredArgsConstructor;"},{"lineNumber":10,"author":{"gitId":"Elina Semenko"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":11,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":12,"author":{"gitId":"Elina Semenko"},"content":"@Component"},{"lineNumber":13,"author":{"gitId":"Elina Semenko"},"content":"@RequiredArgsConstructor"},{"lineNumber":14,"author":{"gitId":"Elina Semenko"},"content":"public class GetAllCVCommandHandler implements CommandHandler {"},{"lineNumber":15,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":16,"author":{"gitId":"Elina Semenko"},"content":"  private final CVService cvService;"},{"lineNumber":17,"author":{"gitId":"Elina Semenko"},"content":"  private final TelegramService telegramService;"},{"lineNumber":18,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":19,"author":{"gitId":"Elina Semenko"},"content":"  @Override"},{"lineNumber":20,"author":{"gitId":"Elina Semenko"},"content":"  public void handle(UserRequest userRequest) {"},{"lineNumber":21,"author":{"gitId":"Elina Semenko"},"content":"    final Long chatId \u003d userRequest.getChatId();"},{"lineNumber":22,"author":{"gitId":"Elina Semenko"},"content":"    StringBuilder stringBuilder \u003d new StringBuilder(\"All available cvs:\\n\");"},{"lineNumber":23,"author":{"gitId":"Elina Semenko"},"content":"    for (CV cv : cvService.getAllCVs()) {"},{"lineNumber":24,"author":{"gitId":"Elina Semenko"},"content":"      stringBuilder.append(cv.toString()).append(\"\\n\");"},{"lineNumber":25,"author":{"gitId":"Elina Semenko"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Elina Semenko"},"content":"    telegramService.sendMessage(chatId, stringBuilder.toString());"},{"lineNumber":27,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":28,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":29,"author":{"gitId":"Elina Semenko"},"content":"  @Override"},{"lineNumber":30,"author":{"gitId":"Elina Semenko"},"content":"  public boolean canHandle(Command command) {"},{"lineNumber":31,"author":{"gitId":"Elina Semenko"},"content":"    return command.equals(Command.GET_ALL_CV);"},{"lineNumber":32,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":33,"author":{"gitId":"Elina Semenko"},"content":"}"}],"authorContributionMap":{"Victor":4,"Elina Semenko":29}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/command/handler/cv/ToggleOpenCVCommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.command.handler.cv;"},{"lineNumber":2,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.dispatch.Command;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.handler.CommandHandler;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.handler.CommandState;"},{"lineNumber":6,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.domain.dto.cv.UpdateCVDTO;"},{"lineNumber":7,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.domain.model.CV;"},{"lineNumber":8,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.domain.model.UserState;"},{"lineNumber":9,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.service.CVService;"},{"lineNumber":10,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.service.TelegramService;"},{"lineNumber":11,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.service.UserStateService;"},{"lineNumber":12,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.web.request.UserRequest;"},{"lineNumber":13,"author":{"gitId":"Victor"},"content":"import java.util.Objects;"},{"lineNumber":14,"author":{"gitId":"Elina Semenko"},"content":"import lombok.RequiredArgsConstructor;"},{"lineNumber":15,"author":{"gitId":"Elina Semenko"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":16,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":17,"author":{"gitId":"Elina Semenko"},"content":"@Component"},{"lineNumber":18,"author":{"gitId":"Elina Semenko"},"content":"@RequiredArgsConstructor"},{"lineNumber":19,"author":{"gitId":"Elina Semenko"},"content":"public class ToggleOpenCVCommandHandler implements CommandHandler {"},{"lineNumber":20,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":21,"author":{"gitId":"Victor"},"content":"  private enum ToggleOpenCVState implements CommandState {"},{"lineNumber":22,"author":{"gitId":"Elina Semenko"},"content":"    WAITING_FOR_TOGGLE_CV_DECISION("},{"lineNumber":23,"author":{"gitId":"Victor"},"content":"        \"TOGGLE_CV_WAITING_FOR_DECISION\","},{"lineNumber":24,"author":{"gitId":"Victor"},"content":"        \"You want to toggle visibility status for your CV? (Y or N)\"),"},{"lineNumber":25,"author":{"gitId":"Elina Semenko"},"content":"    WAITING_FOR_TOGGLE_CV_ID("},{"lineNumber":26,"author":{"gitId":"Victor"},"content":"        \"TOGGLE_CV_WAITING_FOR_ID\","},{"lineNumber":27,"author":{"gitId":"Victor"},"content":"        \"Please, enter an id of the cv which you want to toggle visibility status\"),"},{"lineNumber":28,"author":{"gitId":"Victor"},"content":"    WAITING_FOR_TOGGLE_CV_NAME(\"TOGGLE_CV_WAITING_FOR_NAME\", \"Please, enter your full name\");"},{"lineNumber":29,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":30,"author":{"gitId":"Elina Semenko"},"content":"    private final String name;"},{"lineNumber":31,"author":{"gitId":"Elina Semenko"},"content":"    private final String message;"},{"lineNumber":32,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":33,"author":{"gitId":"Victor"},"content":"    ToggleOpenCVState(String name, String message) {"},{"lineNumber":34,"author":{"gitId":"Elina Semenko"},"content":"      this.name \u003d name;"},{"lineNumber":35,"author":{"gitId":"Elina Semenko"},"content":"      this.message \u003d message;"},{"lineNumber":36,"author":{"gitId":"Elina Semenko"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":38,"author":{"gitId":"Elina Semenko"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"Elina Semenko"},"content":"    public String getName() {"},{"lineNumber":40,"author":{"gitId":"Elina Semenko"},"content":"      return name;"},{"lineNumber":41,"author":{"gitId":"Elina Semenko"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":43,"author":{"gitId":"Elina Semenko"},"content":"    public String getMessage() {"},{"lineNumber":44,"author":{"gitId":"Elina Semenko"},"content":"      return message;"},{"lineNumber":45,"author":{"gitId":"Elina Semenko"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":47,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":48,"author":{"gitId":"Elina Semenko"},"content":"  private final TelegramService telegramService;"},{"lineNumber":49,"author":{"gitId":"Elina Semenko"},"content":"  private final UserStateService userStateService;"},{"lineNumber":50,"author":{"gitId":"Elina Semenko"},"content":"  private final CVService cvService;"},{"lineNumber":51,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":52,"author":{"gitId":"Elina Semenko"},"content":"  @Override"},{"lineNumber":53,"author":{"gitId":"Elina Semenko"},"content":"  public void handle(UserRequest userRequest) {"},{"lineNumber":54,"author":{"gitId":"Elina Semenko"},"content":"    final UserState userState \u003d userStateService.getStateForUser(userRequest.getChatId());"},{"lineNumber":55,"author":{"gitId":"Elina Semenko"},"content":"    if (userState.isEmpty()) {"},{"lineNumber":56,"author":{"gitId":"Elina Semenko"},"content":"      initializeUserState(userRequest, userState);"},{"lineNumber":57,"author":{"gitId":"Elina Semenko"},"content":"    } else {"},{"lineNumber":58,"author":{"gitId":"Elina Semenko"},"content":"      performStateAction(userRequest, userState);"},{"lineNumber":59,"author":{"gitId":"Elina Semenko"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":61,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":62,"author":{"gitId":"Elina Semenko"},"content":"  private void performStateAction(UserRequest userRequest, UserState userState) {"},{"lineNumber":63,"author":{"gitId":"Victor"},"content":"    final ToggleOpenCVState currentState \u003d (ToggleOpenCVState) userState.getCommandState();"},{"lineNumber":64,"author":{"gitId":"Elina Semenko"},"content":"    final String userInput \u003d userRequest.getText();"},{"lineNumber":65,"author":{"gitId":"Elina Semenko"},"content":"    final Long chatId \u003d userRequest.getChatId();"},{"lineNumber":66,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":67,"author":{"gitId":"Elina Semenko"},"content":"    switch (currentState) {"},{"lineNumber":68,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_TOGGLE_CV_DECISION:"},{"lineNumber":69,"author":{"gitId":"Elina Semenko"},"content":"        userState.addInput(\"decision\", userInput);"},{"lineNumber":70,"author":{"gitId":"Victor"},"content":"        ToggleOpenCVCommandHandler.ToggleOpenCVState nextState \u003d"},{"lineNumber":71,"author":{"gitId":"Victor"},"content":"            Objects.equals(userInput, \"Y\")"},{"lineNumber":72,"author":{"gitId":"Victor"},"content":"                ? ToggleOpenCVState.WAITING_FOR_TOGGLE_CV_NAME"},{"lineNumber":73,"author":{"gitId":"Victor"},"content":"                : ToggleOpenCVState.WAITING_FOR_TOGGLE_CV_ID;"},{"lineNumber":74,"author":{"gitId":"Elina Semenko"},"content":"        userState.setCommandState(nextState);"},{"lineNumber":75,"author":{"gitId":"Elina Semenko"},"content":"        telegramService.sendMessage(chatId, nextState.getMessage());"},{"lineNumber":76,"author":{"gitId":"Elina Semenko"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":77,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":78,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":79,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_TOGGLE_CV_ID:"},{"lineNumber":80,"author":{"gitId":"Elina Semenko"},"content":"        if (cvService.getCVById(userInput).isPresent()) {"},{"lineNumber":81,"author":{"gitId":"Elina Semenko"},"content":"          final CV cv \u003d cvService.getCVById(userInput).get();"},{"lineNumber":82,"author":{"gitId":"Elina Semenko"},"content":"          final UpdateCVDTO updateCVDTO \u003d"},{"lineNumber":83,"author":{"gitId":"Elina Semenko"},"content":"              UpdateCVDTO.builder()"},{"lineNumber":84,"author":{"gitId":"Elina Semenko"},"content":"                  .id(cv.getId())"},{"lineNumber":85,"author":{"gitId":"Elina Semenko"},"content":"                  .name(cv.getName())"},{"lineNumber":86,"author":{"gitId":"Elina Semenko"},"content":"                  .description(cv.getDescription())"},{"lineNumber":87,"author":{"gitId":"Elina Semenko"},"content":"                  .activities(cv.getActivities())"},{"lineNumber":88,"author":{"gitId":"Elina Semenko"},"content":"                  .competences(cv.getCompetences())"},{"lineNumber":89,"author":{"gitId":"Elina Semenko"},"content":"                  .preferences(cv.getPreferences())"},{"lineNumber":90,"author":{"gitId":"Victor"},"content":"                  .isActive(cv.getIsActive())"},{"lineNumber":91,"author":{"gitId":"Victor"},"content":"                  .isHidden(!cv.getIsHidden())"},{"lineNumber":92,"author":{"gitId":"Elina Semenko"},"content":"                  .manageCompetencies(cv.getManageCompetencies())"},{"lineNumber":93,"author":{"gitId":"Elina Semenko"},"content":"                  .build();"},{"lineNumber":94,"author":{"gitId":"Elina Semenko"},"content":"          cvService.updateCV(updateCVDTO);"},{"lineNumber":95,"author":{"gitId":"Elina Semenko"},"content":"          userState.clear();"},{"lineNumber":96,"author":{"gitId":"Elina Semenko"},"content":"          userStateService.setStateForUser(chatId, userState);"},{"lineNumber":97,"author":{"gitId":"Elina Semenko"},"content":"          telegramService.sendMessage(chatId, \"Successfully updated CV!\");"},{"lineNumber":98,"author":{"gitId":"Elina Semenko"},"content":"        } else {"},{"lineNumber":99,"author":{"gitId":"Elina Semenko"},"content":"          telegramService.sendMessage("},{"lineNumber":100,"author":{"gitId":"Elina Semenko"},"content":"              chatId, \"CV with provided id doesn\u0027t exists! Please, provide a valid id\");"},{"lineNumber":101,"author":{"gitId":"Elina Semenko"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":103,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":104,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_TOGGLE_CV_NAME:"},{"lineNumber":105,"author":{"gitId":"Elina Semenko"},"content":"        if (cvService.getCVByName(userInput).isPresent()) {"},{"lineNumber":106,"author":{"gitId":"Elina Semenko"},"content":"          final CV cv \u003d cvService.getCVByName(userInput).get();"},{"lineNumber":107,"author":{"gitId":"Elina Semenko"},"content":"          final UpdateCVDTO updateCVDTO \u003d"},{"lineNumber":108,"author":{"gitId":"Elina Semenko"},"content":"              UpdateCVDTO.builder()"},{"lineNumber":109,"author":{"gitId":"Victor"},"content":"                  .id(cv.getId())"},{"lineNumber":110,"author":{"gitId":"Elina Semenko"},"content":"                  .name(cv.getName())"},{"lineNumber":111,"author":{"gitId":"Elina Semenko"},"content":"                  .description(cv.getDescription())"},{"lineNumber":112,"author":{"gitId":"Elina Semenko"},"content":"                  .activities(cv.getActivities())"},{"lineNumber":113,"author":{"gitId":"Elina Semenko"},"content":"                  .competences(cv.getCompetences())"},{"lineNumber":114,"author":{"gitId":"Elina Semenko"},"content":"                  .preferences(cv.getPreferences())"},{"lineNumber":115,"author":{"gitId":"Victor"},"content":"                  .isActive(cv.getIsActive())"},{"lineNumber":116,"author":{"gitId":"Victor"},"content":"                  .isHidden(!cv.getIsHidden())"},{"lineNumber":117,"author":{"gitId":"Elina Semenko"},"content":"                  .manageCompetencies(cv.getManageCompetencies())"},{"lineNumber":118,"author":{"gitId":"Elina Semenko"},"content":"                  .build();"},{"lineNumber":119,"author":{"gitId":"Elina Semenko"},"content":"          cvService.updateCV(updateCVDTO);"},{"lineNumber":120,"author":{"gitId":"Elina Semenko"},"content":"          userState.clear();"},{"lineNumber":121,"author":{"gitId":"Elina Semenko"},"content":"          userStateService.setStateForUser(chatId, userState);"},{"lineNumber":122,"author":{"gitId":"Elina Semenko"},"content":"          telegramService.sendMessage(chatId, \"Successfully updated CV!\");"},{"lineNumber":123,"author":{"gitId":"Elina Semenko"},"content":"        } else {"},{"lineNumber":124,"author":{"gitId":"Elina Semenko"},"content":"          telegramService.sendMessage("},{"lineNumber":125,"author":{"gitId":"Elina Semenko"},"content":"              chatId, \"CV with provided full name doesn\u0027t exists! Please, provide a valid id\");"},{"lineNumber":126,"author":{"gitId":"Elina Semenko"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":128,"author":{"gitId":"Elina Semenko"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":130,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":131,"author":{"gitId":"Elina Semenko"},"content":"  private void initializeUserState(UserRequest userRequest, UserState userState) {"},{"lineNumber":132,"author":{"gitId":"Elina Semenko"},"content":"    final Long chatId \u003d userRequest.getChatId();"},{"lineNumber":133,"author":{"gitId":"Victor"},"content":"    userState.setCurrentCommand(Command.TOGGLE_CV_OPEN);"},{"lineNumber":134,"author":{"gitId":"Victor"},"content":"    userState.setCommandState(ToggleOpenCVState.WAITING_FOR_TOGGLE_CV_DECISION);"},{"lineNumber":135,"author":{"gitId":"Elina Semenko"},"content":"    userStateService.setStateForUser(chatId, userState);"},{"lineNumber":136,"author":{"gitId":"Victor"},"content":"    telegramService.sendMessage("},{"lineNumber":137,"author":{"gitId":"Victor"},"content":"        chatId, ToggleOpenCVState.WAITING_FOR_TOGGLE_CV_DECISION.getMessage());"},{"lineNumber":138,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":139,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":140,"author":{"gitId":"Elina Semenko"},"content":"  @Override"},{"lineNumber":141,"author":{"gitId":"Elina Semenko"},"content":"  public boolean canHandle(Command command) {"},{"lineNumber":142,"author":{"gitId":"Victor"},"content":"    return command.equals(Command.TOGGLE_CV_OPEN);"},{"lineNumber":143,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":144,"author":{"gitId":"Elina Semenko"},"content":"}"}],"authorContributionMap":{"Victor":28,"Elina Semenko":116}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/command/handler/cv/UpdateCVCommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.command.handler.cv;"},{"lineNumber":2,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.dispatch.Command;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.handler.CommandHandler;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.handler.CommandState;"},{"lineNumber":6,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.domain.dto.cv.UpdateCVDTO;"},{"lineNumber":7,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.domain.model.CV;"},{"lineNumber":8,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.domain.model.CompetenceCenter;"},{"lineNumber":9,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.domain.model.UserState;"},{"lineNumber":10,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.service.CVService;"},{"lineNumber":11,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.service.TelegramService;"},{"lineNumber":12,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.service.UserStateService;"},{"lineNumber":13,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.web.request.UserRequest;"},{"lineNumber":14,"author":{"gitId":"Elina Semenko"},"content":"import java.util.List;"},{"lineNumber":15,"author":{"gitId":"Elina Semenko"},"content":"import java.util.Map;"},{"lineNumber":16,"author":{"gitId":"Elina Semenko"},"content":"import java.util.Objects;"},{"lineNumber":17,"author":{"gitId":"Elina Semenko"},"content":"import lombok.RequiredArgsConstructor;"},{"lineNumber":18,"author":{"gitId":"Elina Semenko"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":19,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":20,"author":{"gitId":"Elina Semenko"},"content":"@Component"},{"lineNumber":21,"author":{"gitId":"Elina Semenko"},"content":"@RequiredArgsConstructor"},{"lineNumber":22,"author":{"gitId":"Elina Semenko"},"content":"public class UpdateCVCommandHandler implements CommandHandler {"},{"lineNumber":23,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":24,"author":{"gitId":"Elina Semenko"},"content":"  private enum UpdateCVState implements CommandState {"},{"lineNumber":25,"author":{"gitId":"Elina Semenko"},"content":"    WAITING_FOR_UPDATE_CV_DECISION("},{"lineNumber":26,"author":{"gitId":"Elina Semenko"},"content":"        \"TOGGLE_CV_WAITING_FOR_DECISION\", \"You want to update your CV? (Y or N)\"),"},{"lineNumber":27,"author":{"gitId":"Elina Semenko"},"content":"    WAITING_FOR_UPDATE_CV_ID("},{"lineNumber":28,"author":{"gitId":"Elina Semenko"},"content":"        \"TOGGLE_CV_WAITING_FOR_ID\", \"Please, enter an id of the cv which you want to updates\"),"},{"lineNumber":29,"author":{"gitId":"Elina Semenko"},"content":"    WAITING_FOR_UPDATE_CV_ID_NAME("},{"lineNumber":30,"author":{"gitId":"Elina Semenko"},"content":"        \"TOGGLE_CV_WAITING_FOR_ID\", \"Please, enter you full name (must not be empty) to start\"),"},{"lineNumber":31,"author":{"gitId":"Victor"},"content":"    WAITING_FOR_UPDATE_NAME("},{"lineNumber":32,"author":{"gitId":"Victor"},"content":"        \"ADD_CV_WAITING_FOR_NAME\","},{"lineNumber":33,"author":{"gitId":"Victor"},"content":"        \"Please, enter you full name (must not be empty) or \u0027skip\u0027 to skip this field\"),"},{"lineNumber":34,"author":{"gitId":"Elina Semenko"},"content":"    WAITING_FOR_UPDATE_DESCRIPTION("},{"lineNumber":35,"author":{"gitId":"Victor"},"content":"        \"ADD_CV_WAITING_FOR_DESCRIPTION\","},{"lineNumber":36,"author":{"gitId":"Victor"},"content":"        \"Please, enter short summary (can be empty) or \u0027skip\u0027 to skip this field\"),"},{"lineNumber":37,"author":{"gitId":"Elina Semenko"},"content":"    WAITING_FOR_UPDATE_ACTIVITIES("},{"lineNumber":38,"author":{"gitId":"Elina Semenko"},"content":"        \"ADD_CV_WAITING_FOR_ACTIVITIES\","},{"lineNumber":39,"author":{"gitId":"Victor"},"content":"        \"Please, enter a list of job activities (as comma-separated list) or \u0027skip\u0027 to skip this\""},{"lineNumber":40,"author":{"gitId":"Victor"},"content":"            + \" field\"),"},{"lineNumber":41,"author":{"gitId":"Elina Semenko"},"content":"    WAITING_FOR_UPDATE_MANAGE_COMPETENCIES("},{"lineNumber":42,"author":{"gitId":"Elina Semenko"},"content":"        \"ADD_CV_WAITING_FOR_MANAGE_COMPETENCIES\","},{"lineNumber":43,"author":{"gitId":"Elina Semenko"},"content":"        \"Should your competencies be filled automatically? (Y or N) or \u0027skip\u0027 to skip this field\"),"},{"lineNumber":44,"author":{"gitId":"Elina Semenko"},"content":"    WAITING_FOR_UPDATE_COMPETENCES("},{"lineNumber":45,"author":{"gitId":"Elina Semenko"},"content":"        \"ADD_CV_WAITING_FOR_COMPETENCES\","},{"lineNumber":46,"author":{"gitId":"Victor"},"content":"        \"Please, enter a list of you job competences (as comma-separated list) or \u0027skip\u0027 to skip\""},{"lineNumber":47,"author":{"gitId":"Victor"},"content":"            + \" this field\"),"},{"lineNumber":48,"author":{"gitId":"Elina Semenko"},"content":"    WAITING_FOR_UPDATE_PREFERENCES("},{"lineNumber":49,"author":{"gitId":"Elina Semenko"},"content":"        \"ADD_CV_WAITING_FOR_PREFERENCES\","},{"lineNumber":50,"author":{"gitId":"Victor"},"content":"        \"Please, enter a list of you job preferences (as comma-separated list) or \u0027skip\u0027 to skip\""},{"lineNumber":51,"author":{"gitId":"Victor"},"content":"            + \" this field\"),"},{"lineNumber":52,"author":{"gitId":"Elina Semenko"},"content":"    WAITING_FOR_UPDATE_IS_HIDDEN("},{"lineNumber":53,"author":{"gitId":"Victor"},"content":"        \"ADD_CV_WAITING_FOR_IS_HIDDEN\", \"Hide your CV? (Y or N) or \u0027skip\u0027 to skip this field\"),"},{"lineNumber":54,"author":{"gitId":"Elina Semenko"},"content":"    WAITING_FOR_UPDATE_IS_ACTIVE("},{"lineNumber":55,"author":{"gitId":"Elina Semenko"},"content":"        \"ADD_CV_WAITING_FOR_IS_ACTIVE\","},{"lineNumber":56,"author":{"gitId":"Elina Semenko"},"content":"        \"Are you open to new opportunities? (Y or N) or \u0027skip\u0027 to skip this field\");"},{"lineNumber":57,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":58,"author":{"gitId":"Elina Semenko"},"content":"    private final String name;"},{"lineNumber":59,"author":{"gitId":"Elina Semenko"},"content":"    private final String message;"},{"lineNumber":60,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":61,"author":{"gitId":"Elina Semenko"},"content":"    UpdateCVState(String name, String message) {"},{"lineNumber":62,"author":{"gitId":"Elina Semenko"},"content":"      this.name \u003d name;"},{"lineNumber":63,"author":{"gitId":"Elina Semenko"},"content":"      this.message \u003d message;"},{"lineNumber":64,"author":{"gitId":"Elina Semenko"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":66,"author":{"gitId":"Elina Semenko"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"Elina Semenko"},"content":"    public String getName() {"},{"lineNumber":68,"author":{"gitId":"Elina Semenko"},"content":"      return name;"},{"lineNumber":69,"author":{"gitId":"Elina Semenko"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":71,"author":{"gitId":"Elina Semenko"},"content":"    public String getMessage() {"},{"lineNumber":72,"author":{"gitId":"Elina Semenko"},"content":"      return message;"},{"lineNumber":73,"author":{"gitId":"Elina Semenko"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":75,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":76,"author":{"gitId":"Elina Semenko"},"content":"  private final TelegramService telegramService;"},{"lineNumber":77,"author":{"gitId":"Elina Semenko"},"content":"  private final UserStateService userStateService;"},{"lineNumber":78,"author":{"gitId":"Elina Semenko"},"content":"  private final CVService cvService;"},{"lineNumber":79,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":80,"author":{"gitId":"Elina Semenko"},"content":"  @Override"},{"lineNumber":81,"author":{"gitId":"Elina Semenko"},"content":"  public void handle(UserRequest userRequest) {"},{"lineNumber":82,"author":{"gitId":"Elina Semenko"},"content":"    final UserState userState \u003d userStateService.getStateForUser(userRequest.getChatId());"},{"lineNumber":83,"author":{"gitId":"Elina Semenko"},"content":"    if (userState.isEmpty()) {"},{"lineNumber":84,"author":{"gitId":"Elina Semenko"},"content":"      initializeUserState(userRequest, userState);"},{"lineNumber":85,"author":{"gitId":"Elina Semenko"},"content":"    } else {"},{"lineNumber":86,"author":{"gitId":"Elina Semenko"},"content":"      performStateAction(userRequest, userState);"},{"lineNumber":87,"author":{"gitId":"Elina Semenko"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":89,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":90,"author":{"gitId":"Elina Semenko"},"content":"  private void performStateAction(UserRequest userRequest, UserState userState) {"},{"lineNumber":91,"author":{"gitId":"Victor"},"content":"    final UpdateCVCommandHandler.UpdateCVState currentState \u003d"},{"lineNumber":92,"author":{"gitId":"Victor"},"content":"        (UpdateCVCommandHandler.UpdateCVState) userState.getCommandState();"},{"lineNumber":93,"author":{"gitId":"Elina Semenko"},"content":"    final String userInput \u003d userRequest.getText();"},{"lineNumber":94,"author":{"gitId":"Elina Semenko"},"content":"    final Long chatId \u003d userRequest.getChatId();"},{"lineNumber":95,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":96,"author":{"gitId":"Elina Semenko"},"content":"    switch (currentState) {"},{"lineNumber":97,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_UPDATE_CV_DECISION:"},{"lineNumber":98,"author":{"gitId":"Elina Semenko"},"content":"        userState.addInput(\"decision\", userInput);"},{"lineNumber":99,"author":{"gitId":"Victor"},"content":"        UpdateCVCommandHandler.UpdateCVState nextState \u003d"},{"lineNumber":100,"author":{"gitId":"Victor"},"content":"            Objects.equals(userInput, \"Y\")"},{"lineNumber":101,"author":{"gitId":"Victor"},"content":"                ? UpdateCVState.WAITING_FOR_UPDATE_CV_ID_NAME"},{"lineNumber":102,"author":{"gitId":"Victor"},"content":"                : UpdateCVState.WAITING_FOR_UPDATE_CV_ID;"},{"lineNumber":103,"author":{"gitId":"Elina Semenko"},"content":"        userState.setCommandState(nextState);"},{"lineNumber":104,"author":{"gitId":"Elina Semenko"},"content":"        telegramService.sendMessage(chatId, nextState.getMessage());"},{"lineNumber":105,"author":{"gitId":"Elina Semenko"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":106,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":107,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":108,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_UPDATE_CV_ID:"},{"lineNumber":109,"author":{"gitId":"Victor"},"content":"        if (cvService.getCVById(userInput).isPresent()) {"},{"lineNumber":110,"author":{"gitId":"Elina Semenko"},"content":"          userState.addInput(\"id\", userInput);"},{"lineNumber":111,"author":{"gitId":"Elina Semenko"},"content":"          userState.setCommandState(UpdateCVCommandHandler.UpdateCVState.WAITING_FOR_UPDATE_NAME);"},{"lineNumber":112,"author":{"gitId":"Victor"},"content":"          telegramService.sendMessage("},{"lineNumber":113,"author":{"gitId":"Victor"},"content":"              chatId, UpdateCVCommandHandler.UpdateCVState.WAITING_FOR_UPDATE_NAME.getMessage());"},{"lineNumber":114,"author":{"gitId":"Elina Semenko"},"content":"          userStateService.setStateForUser(chatId, userState);"},{"lineNumber":115,"author":{"gitId":"Victor"},"content":"        } else {"},{"lineNumber":116,"author":{"gitId":"Victor"},"content":"          telegramService.sendMessage(chatId, \"CV with provided id doesn\u0027t exist!\");"},{"lineNumber":117,"author":{"gitId":"Victor"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":119,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":120,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_UPDATE_CV_ID_NAME:"},{"lineNumber":121,"author":{"gitId":"Victor"},"content":"        if (cvService.getCVByName(userInput).isPresent()) {"},{"lineNumber":122,"author":{"gitId":"Elina Semenko"},"content":"          userState.addInput(\"idname\", userInput);"},{"lineNumber":123,"author":{"gitId":"Elina Semenko"},"content":"          userState.setCommandState(UpdateCVCommandHandler.UpdateCVState.WAITING_FOR_UPDATE_NAME);"},{"lineNumber":124,"author":{"gitId":"Victor"},"content":"          telegramService.sendMessage("},{"lineNumber":125,"author":{"gitId":"Victor"},"content":"              chatId, UpdateCVCommandHandler.UpdateCVState.WAITING_FOR_UPDATE_NAME.getMessage());"},{"lineNumber":126,"author":{"gitId":"Elina Semenko"},"content":"          userStateService.setStateForUser(chatId, userState);"},{"lineNumber":127,"author":{"gitId":"Victor"},"content":"        } else {"},{"lineNumber":128,"author":{"gitId":"Victor"},"content":"          telegramService.sendMessage(chatId, \"CV with provided full name doesn\u0027t exist!\");"},{"lineNumber":129,"author":{"gitId":"Victor"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":131,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":132,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_UPDATE_NAME:"},{"lineNumber":133,"author":{"gitId":"Elina Semenko"},"content":"        userState.addInput(\"name\", userInput);"},{"lineNumber":134,"author":{"gitId":"Victor"},"content":"        userState.setCommandState("},{"lineNumber":135,"author":{"gitId":"Victor"},"content":"            UpdateCVCommandHandler.UpdateCVState.WAITING_FOR_UPDATE_DESCRIPTION);"},{"lineNumber":136,"author":{"gitId":"Victor"},"content":"        telegramService.sendMessage("},{"lineNumber":137,"author":{"gitId":"Victor"},"content":"            chatId,"},{"lineNumber":138,"author":{"gitId":"Victor"},"content":"            UpdateCVCommandHandler.UpdateCVState.WAITING_FOR_UPDATE_DESCRIPTION.getMessage());"},{"lineNumber":139,"author":{"gitId":"Elina Semenko"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":140,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":141,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":142,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_UPDATE_DESCRIPTION:"},{"lineNumber":143,"author":{"gitId":"Elina Semenko"},"content":"        userState.addInput(\"description\", userInput);"},{"lineNumber":144,"author":{"gitId":"Victor"},"content":"        userState.setCommandState("},{"lineNumber":145,"author":{"gitId":"Victor"},"content":"            UpdateCVCommandHandler.UpdateCVState.WAITING_FOR_UPDATE_ACTIVITIES);"},{"lineNumber":146,"author":{"gitId":"Victor"},"content":"        telegramService.sendMessage("},{"lineNumber":147,"author":{"gitId":"Victor"},"content":"            chatId,"},{"lineNumber":148,"author":{"gitId":"Victor"},"content":"            UpdateCVCommandHandler.UpdateCVState.WAITING_FOR_UPDATE_ACTIVITIES.getMessage());"},{"lineNumber":149,"author":{"gitId":"Elina Semenko"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":150,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":151,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":152,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_UPDATE_ACTIVITIES:"},{"lineNumber":153,"author":{"gitId":"Elina Semenko"},"content":"        userState.addInput(\"activities\", userInput);"},{"lineNumber":154,"author":{"gitId":"Victor"},"content":"        userState.setCommandState("},{"lineNumber":155,"author":{"gitId":"Victor"},"content":"            UpdateCVCommandHandler.UpdateCVState.WAITING_FOR_UPDATE_MANAGE_COMPETENCIES);"},{"lineNumber":156,"author":{"gitId":"Victor"},"content":"        telegramService.sendMessage("},{"lineNumber":157,"author":{"gitId":"Victor"},"content":"            chatId,"},{"lineNumber":158,"author":{"gitId":"Victor"},"content":"            UpdateCVCommandHandler.UpdateCVState.WAITING_FOR_UPDATE_MANAGE_COMPETENCIES"},{"lineNumber":159,"author":{"gitId":"Victor"},"content":"                .getMessage());"},{"lineNumber":160,"author":{"gitId":"Elina Semenko"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":161,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":162,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":163,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_UPDATE_MANAGE_COMPETENCIES:"},{"lineNumber":164,"author":{"gitId":"Elina Semenko"},"content":"        userState.addInput(\"manageCompetencies\", userInput);"},{"lineNumber":165,"author":{"gitId":"Victor"},"content":"        UpdateCVState nextState1 \u003d"},{"lineNumber":166,"author":{"gitId":"Victor"},"content":"            Objects.equals(userInput, \"Y\")"},{"lineNumber":167,"author":{"gitId":"Victor"},"content":"                ? UpdateCVCommandHandler.UpdateCVState.WAITING_FOR_UPDATE_PREFERENCES"},{"lineNumber":168,"author":{"gitId":"Victor"},"content":"                : UpdateCVCommandHandler.UpdateCVState.WAITING_FOR_UPDATE_COMPETENCES;"},{"lineNumber":169,"author":{"gitId":"Elina Semenko"},"content":"        userState.setCommandState(nextState1);"},{"lineNumber":170,"author":{"gitId":"Elina Semenko"},"content":"        telegramService.sendMessage(chatId, nextState1.getMessage());"},{"lineNumber":171,"author":{"gitId":"Elina Semenko"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":172,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":173,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":174,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_UPDATE_COMPETENCES:"},{"lineNumber":175,"author":{"gitId":"Elina Semenko"},"content":"        userState.addInput(\"competences\", userInput);"},{"lineNumber":176,"author":{"gitId":"Victor"},"content":"        userState.setCommandState("},{"lineNumber":177,"author":{"gitId":"Victor"},"content":"            UpdateCVCommandHandler.UpdateCVState.WAITING_FOR_UPDATE_PREFERENCES);"},{"lineNumber":178,"author":{"gitId":"Victor"},"content":"        telegramService.sendMessage("},{"lineNumber":179,"author":{"gitId":"Victor"},"content":"            chatId,"},{"lineNumber":180,"author":{"gitId":"Victor"},"content":"            UpdateCVCommandHandler.UpdateCVState.WAITING_FOR_UPDATE_PREFERENCES.getMessage());"},{"lineNumber":181,"author":{"gitId":"Elina Semenko"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":182,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":183,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":184,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_UPDATE_PREFERENCES:"},{"lineNumber":185,"author":{"gitId":"Elina Semenko"},"content":"        userState.addInput(\"preferences\", userInput);"},{"lineNumber":186,"author":{"gitId":"Elina Semenko"},"content":"        userState.setCommandState("},{"lineNumber":187,"author":{"gitId":"Elina Semenko"},"content":"            UpdateCVCommandHandler.UpdateCVState.WAITING_FOR_UPDATE_IS_HIDDEN);"},{"lineNumber":188,"author":{"gitId":"Elina Semenko"},"content":"        telegramService.sendMessage("},{"lineNumber":189,"author":{"gitId":"Elina Semenko"},"content":"            chatId, UpdateCVCommandHandler.UpdateCVState.WAITING_FOR_UPDATE_IS_HIDDEN.getMessage());"},{"lineNumber":190,"author":{"gitId":"Elina Semenko"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":191,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":192,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":193,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_UPDATE_IS_HIDDEN:"},{"lineNumber":194,"author":{"gitId":"Elina Semenko"},"content":"        userState.addInput(\"isHidden\", userInput);"},{"lineNumber":195,"author":{"gitId":"Victor"},"content":"        userState.setCommandState("},{"lineNumber":196,"author":{"gitId":"Victor"},"content":"            UpdateCVCommandHandler.UpdateCVState.WAITING_FOR_UPDATE_IS_ACTIVE);"},{"lineNumber":197,"author":{"gitId":"Victor"},"content":"        telegramService.sendMessage("},{"lineNumber":198,"author":{"gitId":"Victor"},"content":"            chatId, UpdateCVCommandHandler.UpdateCVState.WAITING_FOR_UPDATE_IS_ACTIVE.getMessage());"},{"lineNumber":199,"author":{"gitId":"Elina Semenko"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":200,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":201,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":202,"author":{"gitId":"Elina Semenko"},"content":"      case WAITING_FOR_UPDATE_IS_ACTIVE:"},{"lineNumber":203,"author":{"gitId":"Elina Semenko"},"content":"        userState.addInput(\"isActive\", userInput);"},{"lineNumber":204,"author":{"gitId":"Elina Semenko"},"content":"        final Map\u003cString, String\u003e inputs \u003d userState.getInputs();"},{"lineNumber":205,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":206,"author":{"gitId":"Elina Semenko"},"content":"        CompetenceCenter competenceCenter \u003d new CompetenceCenter();"},{"lineNumber":207,"author":{"gitId":"Elina Semenko"},"content":"        List\u003cString\u003e activities \u003d List.of(inputs.get(\"activities\"));"},{"lineNumber":208,"author":{"gitId":"Victor"},"content":"        final CV cv \u003d"},{"lineNumber":209,"author":{"gitId":"Victor"},"content":"            Objects.equals(inputs.get(\"decision\"), \"Y\")"},{"lineNumber":210,"author":{"gitId":"Victor"},"content":"                ? cvService.getCVByName(inputs.get(\"idname\")).get()"},{"lineNumber":211,"author":{"gitId":"Victor"},"content":"                : cvService.getCVById(inputs.get(\"id\")).get();"},{"lineNumber":212,"author":{"gitId":"Elina Semenko"},"content":"        final UpdateCVDTO updateCVDTO \u003d"},{"lineNumber":213,"author":{"gitId":"Elina Semenko"},"content":"            UpdateCVDTO.builder()"},{"lineNumber":214,"author":{"gitId":"Elina Semenko"},"content":"                .id(cv.getId())"},{"lineNumber":215,"author":{"gitId":"Victor"},"content":"                .name("},{"lineNumber":216,"author":{"gitId":"Victor"},"content":"                    Objects.equals(inputs.get(\"name\"), \"skip\") ? cv.getName() : inputs.get(\"name\"))"},{"lineNumber":217,"author":{"gitId":"Victor"},"content":"                .description("},{"lineNumber":218,"author":{"gitId":"Victor"},"content":"                    Objects.equals(inputs.get(\"description\"), \"skip\")"},{"lineNumber":219,"author":{"gitId":"Victor"},"content":"                        ? cv.getDescription()"},{"lineNumber":220,"author":{"gitId":"Victor"},"content":"                        : inputs.get(\"description\"))"},{"lineNumber":221,"author":{"gitId":"Victor"},"content":"                .activities("},{"lineNumber":222,"author":{"gitId":"Victor"},"content":"                    Objects.equals(inputs.get(\"activities\"), \"skip\")"},{"lineNumber":223,"author":{"gitId":"Victor"},"content":"                        ? cv.getActivities()"},{"lineNumber":224,"author":{"gitId":"Elina Semenko"},"content":"                        : activities)"},{"lineNumber":225,"author":{"gitId":"Victor"},"content":"                .competences("},{"lineNumber":226,"author":{"gitId":"Victor"},"content":"                    Objects.equals(inputs.get(\"competences\"), \"skip\")"},{"lineNumber":227,"author":{"gitId":"Victor"},"content":"                        ? cv.getCompetences()"},{"lineNumber":228,"author":{"gitId":"Victor"},"content":"                        : (inputs.get(\"competences\") !\u003d null"},{"lineNumber":229,"author":{"gitId":"Victor"},"content":"                            ? List.of(inputs.get(\"competences\"))"},{"lineNumber":230,"author":{"gitId":"Elina Semenko"},"content":"                            : competenceCenter.generateCompetencies(activities)))"},{"lineNumber":231,"author":{"gitId":"Victor"},"content":"                .preferences("},{"lineNumber":232,"author":{"gitId":"Victor"},"content":"                    Objects.equals(inputs.get(\"preferences\"), \"skip\")"},{"lineNumber":233,"author":{"gitId":"Victor"},"content":"                        ? cv.getPreferences()"},{"lineNumber":234,"author":{"gitId":"Victor"},"content":"                        : List.of(inputs.get(\"preferences\")))"},{"lineNumber":235,"author":{"gitId":"Victor"},"content":"                .isActive("},{"lineNumber":236,"author":{"gitId":"Victor"},"content":"                    Objects.equals(inputs.get(\"isActive\"), \"skip\")"},{"lineNumber":237,"author":{"gitId":"Victor"},"content":"                        ? cv.getIsActive()"},{"lineNumber":238,"author":{"gitId":"Victor"},"content":"                        : (Objects.equals(inputs.get(\"isActive\"), \"Y\")))"},{"lineNumber":239,"author":{"gitId":"Elina Semenko"},"content":"                .isHidden("},{"lineNumber":240,"author":{"gitId":"Elina Semenko"},"content":"                    Objects.equals(inputs.get(\"isHidden\"), \"skip\")"},{"lineNumber":241,"author":{"gitId":"Elina Semenko"},"content":"                        ? cv.getIsActive()"},{"lineNumber":242,"author":{"gitId":"Elina Semenko"},"content":"                        : (Objects.equals(inputs.get(\"isHidden\"), \"Y\")))"},{"lineNumber":243,"author":{"gitId":"Victor"},"content":"                .manageCompetencies("},{"lineNumber":244,"author":{"gitId":"Victor"},"content":"                    Objects.equals(inputs.get(\"manageCompetencies\"), \"skip\")"},{"lineNumber":245,"author":{"gitId":"Victor"},"content":"                        ? cv.getManageCompetencies()"},{"lineNumber":246,"author":{"gitId":"Victor"},"content":"                        : Objects.equals(inputs.get(\"manageCompetencies\"), \"Y\"))"},{"lineNumber":247,"author":{"gitId":"Elina Semenko"},"content":"                .build();"},{"lineNumber":248,"author":{"gitId":"Elina Semenko"},"content":"        cvService.updateCV(updateCVDTO);"},{"lineNumber":249,"author":{"gitId":"Elina Semenko"},"content":"        userState.clear();"},{"lineNumber":250,"author":{"gitId":"Elina Semenko"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":251,"author":{"gitId":"Elina Semenko"},"content":"        telegramService.sendMessage(chatId, \"Successfully updated CV!\");"},{"lineNumber":252,"author":{"gitId":"Elina Semenko"},"content":"        userState.clear();"},{"lineNumber":253,"author":{"gitId":"Elina Semenko"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":254,"author":{"gitId":"Elina Semenko"},"content":"        break;"},{"lineNumber":255,"author":{"gitId":"Elina Semenko"},"content":"    }"},{"lineNumber":256,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":257,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":258,"author":{"gitId":"Elina Semenko"},"content":"  private void initializeUserState(UserRequest userRequest, UserState userState) {"},{"lineNumber":259,"author":{"gitId":"Elina Semenko"},"content":"    final Long chatId \u003d userRequest.getChatId();"},{"lineNumber":260,"author":{"gitId":"Elina Semenko"},"content":"    userState.setCurrentCommand(Command.UPDATE_CV);"},{"lineNumber":261,"author":{"gitId":"Elina Semenko"},"content":"    userState.setCommandState(UpdateCVState.WAITING_FOR_UPDATE_CV_DECISION);"},{"lineNumber":262,"author":{"gitId":"Elina Semenko"},"content":"    userStateService.setStateForUser(chatId, userState);"},{"lineNumber":263,"author":{"gitId":"Victor"},"content":"    telegramService.sendMessage("},{"lineNumber":264,"author":{"gitId":"Victor"},"content":"        chatId, UpdateCVCommandHandler.UpdateCVState.WAITING_FOR_UPDATE_CV_DECISION.getMessage());"},{"lineNumber":265,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":266,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":267,"author":{"gitId":"Elina Semenko"},"content":"  @Override"},{"lineNumber":268,"author":{"gitId":"Elina Semenko"},"content":"  public boolean canHandle(Command command) {"},{"lineNumber":269,"author":{"gitId":"Elina Semenko"},"content":"    return command.equals(Command.UPDATE_CV);"},{"lineNumber":270,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":271,"author":{"gitId":"Elina Semenko"},"content":"}"}],"authorContributionMap":{"Victor":96,"Elina Semenko":175}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/command/handler/cv/UpdateCVCompetencesCommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.command.handler.cv;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.dispatch.Command;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.handler.CommandHandler;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.handler.CommandState;"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.domain.dto.cv.UpdateCVDTO;"},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.domain.model.CV;"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.domain.model.UserState;"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.service.CVService;"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.service.TelegramService;"},{"lineNumber":11,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.service.UserStateService;"},{"lineNumber":12,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.web.request.UserRequest;"},{"lineNumber":13,"author":{"gitId":"Victor"},"content":"import java.util.List;"},{"lineNumber":14,"author":{"gitId":"Victor"},"content":"import java.util.Map;"},{"lineNumber":15,"author":{"gitId":"Victor"},"content":"import java.util.Objects;"},{"lineNumber":16,"author":{"gitId":"Victor"},"content":"import java.util.stream.Collectors;"},{"lineNumber":17,"author":{"gitId":"Victor"},"content":"import java.util.stream.Stream;"},{"lineNumber":18,"author":{"gitId":"Victor"},"content":"import lombok.RequiredArgsConstructor;"},{"lineNumber":19,"author":{"gitId":"Victor"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":20,"author":{"gitId":"Victor"},"content":""},{"lineNumber":21,"author":{"gitId":"Victor"},"content":"@Component"},{"lineNumber":22,"author":{"gitId":"Victor"},"content":"@RequiredArgsConstructor"},{"lineNumber":23,"author":{"gitId":"Victor"},"content":"public class UpdateCVCompetencesCommandHandler implements CommandHandler {"},{"lineNumber":24,"author":{"gitId":"Victor"},"content":""},{"lineNumber":25,"author":{"gitId":"Victor"},"content":"  private enum UpdateCVCompetencesState implements CommandState {"},{"lineNumber":26,"author":{"gitId":"Victor"},"content":"    WAITING_FOR_UPDATE_COMPETENCES_CV_DECISION("},{"lineNumber":27,"author":{"gitId":"Victor"},"content":"        \"UPDATE_COMPETENCES_CV_WAITING_FOR_DECISION\","},{"lineNumber":28,"author":{"gitId":"Victor"},"content":"        \"You want to update competences for your CV? (Y or N)\"),"},{"lineNumber":29,"author":{"gitId":"Victor"},"content":"    WAITING_FOR_UPDATE_COMPETENCES_CV_ID("},{"lineNumber":30,"author":{"gitId":"Victor"},"content":"        \"UPDATE_COMPETENCES_CV_WAITING_FOR_ID\","},{"lineNumber":31,"author":{"gitId":"Victor"},"content":"        \"Please, enter an id of the cv which you want to update competences\"),"},{"lineNumber":32,"author":{"gitId":"Victor"},"content":"    WAITING_FOR_UPDATE_COMPETENCES_CV_NAME("},{"lineNumber":33,"author":{"gitId":"Victor"},"content":"        \"UPDATE_COMPETENCES_CV_WAITING_FOR_NAME\", \"Please, enter your full name\"),"},{"lineNumber":34,"author":{"gitId":"Victor"},"content":"    WAITING_FOR_UPDATE_COMPETENCES_CV_ACTION("},{"lineNumber":35,"author":{"gitId":"Victor"},"content":"        \"UPDATE_COMPETENCES_CV_WAITING_FOR_ACTION\","},{"lineNumber":36,"author":{"gitId":"Victor"},"content":"        \"You want to add competences or remove? (+ or -)\"),"},{"lineNumber":37,"author":{"gitId":"Victor"},"content":"    WAITING_FOR_UPDATE_COMPETENCES_ADD("},{"lineNumber":38,"author":{"gitId":"Victor"},"content":"        \"UPDATE_COMPETENCES_CV_WAITING_FOR_ADD\","},{"lineNumber":39,"author":{"gitId":"Victor"},"content":"        \"Please, enter needed competences (comma-separated list)\"),"},{"lineNumber":40,"author":{"gitId":"Victor"},"content":"    WAITING_FOR_UPDATE_COMPETENCES_REMOVE("},{"lineNumber":41,"author":{"gitId":"Victor"},"content":"        \"UPDATE_COMPETENCES_CV_WAITING_FOR_REMOVE\","},{"lineNumber":42,"author":{"gitId":"Victor"},"content":"        \"Please, enter needed competences (comma-separated list)\");"},{"lineNumber":43,"author":{"gitId":"Victor"},"content":""},{"lineNumber":44,"author":{"gitId":"Victor"},"content":"    private final String name;"},{"lineNumber":45,"author":{"gitId":"Victor"},"content":"    private final String message;"},{"lineNumber":46,"author":{"gitId":"Victor"},"content":""},{"lineNumber":47,"author":{"gitId":"Victor"},"content":"    UpdateCVCompetencesState(String name, String message) {"},{"lineNumber":48,"author":{"gitId":"Victor"},"content":"      this.name \u003d name;"},{"lineNumber":49,"author":{"gitId":"Victor"},"content":"      this.message \u003d message;"},{"lineNumber":50,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Victor"},"content":""},{"lineNumber":52,"author":{"gitId":"Victor"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"Victor"},"content":"    public String getName() {"},{"lineNumber":54,"author":{"gitId":"Victor"},"content":"      return name;"},{"lineNumber":55,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Victor"},"content":""},{"lineNumber":57,"author":{"gitId":"Victor"},"content":"    public String getMessage() {"},{"lineNumber":58,"author":{"gitId":"Victor"},"content":"      return message;"},{"lineNumber":59,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":61,"author":{"gitId":"Victor"},"content":""},{"lineNumber":62,"author":{"gitId":"Victor"},"content":"  private final TelegramService telegramService;"},{"lineNumber":63,"author":{"gitId":"Victor"},"content":"  private final UserStateService userStateService;"},{"lineNumber":64,"author":{"gitId":"Victor"},"content":"  private final CVService cvService;"},{"lineNumber":65,"author":{"gitId":"Victor"},"content":""},{"lineNumber":66,"author":{"gitId":"Victor"},"content":"  @Override"},{"lineNumber":67,"author":{"gitId":"Victor"},"content":"  public void handle(UserRequest userRequest) {"},{"lineNumber":68,"author":{"gitId":"Victor"},"content":"    final UserState userState \u003d userStateService.getStateForUser(userRequest.getChatId());"},{"lineNumber":69,"author":{"gitId":"Victor"},"content":"    if (userState.isEmpty()) {"},{"lineNumber":70,"author":{"gitId":"Victor"},"content":"      initializeUserState(userRequest, userState);"},{"lineNumber":71,"author":{"gitId":"Victor"},"content":"    } else {"},{"lineNumber":72,"author":{"gitId":"Victor"},"content":"      performStateAction(userRequest, userState);"},{"lineNumber":73,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":75,"author":{"gitId":"Victor"},"content":""},{"lineNumber":76,"author":{"gitId":"Victor"},"content":"  private void performStateAction(UserRequest userRequest, UserState userState) {"},{"lineNumber":77,"author":{"gitId":"Victor"},"content":"    final UpdateCVCompetencesState currentState \u003d"},{"lineNumber":78,"author":{"gitId":"Victor"},"content":"        (UpdateCVCompetencesState) userState.getCommandState();"},{"lineNumber":79,"author":{"gitId":"Victor"},"content":"    final String userInput \u003d userRequest.getText();"},{"lineNumber":80,"author":{"gitId":"Victor"},"content":"    final Long chatId \u003d userRequest.getChatId();"},{"lineNumber":81,"author":{"gitId":"Victor"},"content":""},{"lineNumber":82,"author":{"gitId":"Victor"},"content":"    final CV cv;"},{"lineNumber":83,"author":{"gitId":"Victor"},"content":"    final UpdateCVDTO updateCVDTO;"},{"lineNumber":84,"author":{"gitId":"Victor"},"content":"    final Map\u003cString, String\u003e inputs;"},{"lineNumber":85,"author":{"gitId":"Victor"},"content":""},{"lineNumber":86,"author":{"gitId":"Victor"},"content":"    switch (currentState) {"},{"lineNumber":87,"author":{"gitId":"Victor"},"content":"      case WAITING_FOR_UPDATE_COMPETENCES_CV_DECISION:"},{"lineNumber":88,"author":{"gitId":"Victor"},"content":"        userState.addInput(\"decision\", userInput);"},{"lineNumber":89,"author":{"gitId":"Victor"},"content":"        UpdateCVCompetencesCommandHandler.UpdateCVCompetencesState nextState \u003d"},{"lineNumber":90,"author":{"gitId":"Victor"},"content":"            Objects.equals(userInput, \"Y\")"},{"lineNumber":91,"author":{"gitId":"Victor"},"content":"                ? UpdateCVCompetencesState.WAITING_FOR_UPDATE_COMPETENCES_CV_NAME"},{"lineNumber":92,"author":{"gitId":"Victor"},"content":"                : UpdateCVCompetencesState.WAITING_FOR_UPDATE_COMPETENCES_CV_ID;"},{"lineNumber":93,"author":{"gitId":"Victor"},"content":"        userState.setCommandState(nextState);"},{"lineNumber":94,"author":{"gitId":"Victor"},"content":"        telegramService.sendMessage(chatId, nextState.getMessage());"},{"lineNumber":95,"author":{"gitId":"Victor"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":96,"author":{"gitId":"Victor"},"content":"        break;"},{"lineNumber":97,"author":{"gitId":"Victor"},"content":""},{"lineNumber":98,"author":{"gitId":"Victor"},"content":"      case WAITING_FOR_UPDATE_COMPETENCES_CV_ID:"},{"lineNumber":99,"author":{"gitId":"Victor"},"content":"        userState.addInput(\"id\", userInput);"},{"lineNumber":100,"author":{"gitId":"Victor"},"content":"        if (cvService.getCVById(userInput).isPresent()) {"},{"lineNumber":101,"author":{"gitId":"Victor"},"content":"          cv \u003d cvService.getCVById(userInput).get();"},{"lineNumber":102,"author":{"gitId":"Victor"},"content":""},{"lineNumber":103,"author":{"gitId":"Victor"},"content":"          userState.setCommandState("},{"lineNumber":104,"author":{"gitId":"Victor"},"content":"              UpdateCVCompetencesState.WAITING_FOR_UPDATE_COMPETENCES_CV_ACTION);"},{"lineNumber":105,"author":{"gitId":"Victor"},"content":"          telegramService.sendMessage("},{"lineNumber":106,"author":{"gitId":"Victor"},"content":"              chatId,"},{"lineNumber":107,"author":{"gitId":"Victor"},"content":"              UpdateCVCompetencesState.WAITING_FOR_UPDATE_COMPETENCES_CV_ACTION.getMessage()"},{"lineNumber":108,"author":{"gitId":"Victor"},"content":"                  + \"Your competences:\\n\\n\""},{"lineNumber":109,"author":{"gitId":"Victor"},"content":"                  + cv.getCompetences());"},{"lineNumber":110,"author":{"gitId":"Victor"},"content":"          userStateService.setStateForUser(chatId, userState);"},{"lineNumber":111,"author":{"gitId":"Victor"},"content":"        } else {"},{"lineNumber":112,"author":{"gitId":"Victor"},"content":"          telegramService.sendMessage("},{"lineNumber":113,"author":{"gitId":"Victor"},"content":"              chatId, \"CV with provided id doesn\u0027t exists! Please, provide a valid id\");"},{"lineNumber":114,"author":{"gitId":"Victor"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"Victor"},"content":"        break;"},{"lineNumber":116,"author":{"gitId":"Victor"},"content":""},{"lineNumber":117,"author":{"gitId":"Victor"},"content":"      case WAITING_FOR_UPDATE_COMPETENCES_CV_NAME:"},{"lineNumber":118,"author":{"gitId":"Victor"},"content":"        userState.addInput(\"nameid\", userInput);"},{"lineNumber":119,"author":{"gitId":"Victor"},"content":"        if (cvService.getCVByName(userInput).isPresent()) {"},{"lineNumber":120,"author":{"gitId":"Victor"},"content":"          cv \u003d cvService.getCVByName(userInput).get();"},{"lineNumber":121,"author":{"gitId":"Victor"},"content":""},{"lineNumber":122,"author":{"gitId":"Victor"},"content":"          userState.setCommandState("},{"lineNumber":123,"author":{"gitId":"Victor"},"content":"              UpdateCVCompetencesState.WAITING_FOR_UPDATE_COMPETENCES_CV_ACTION);"},{"lineNumber":124,"author":{"gitId":"Victor"},"content":"          telegramService.sendMessage("},{"lineNumber":125,"author":{"gitId":"Victor"},"content":"              chatId,"},{"lineNumber":126,"author":{"gitId":"Victor"},"content":"              UpdateCVCompetencesState.WAITING_FOR_UPDATE_COMPETENCES_CV_ACTION.getMessage()"},{"lineNumber":127,"author":{"gitId":"Victor"},"content":"                  + \"Your competences:\\n\\n\""},{"lineNumber":128,"author":{"gitId":"Victor"},"content":"                  + cv.getCompetences());"},{"lineNumber":129,"author":{"gitId":"Victor"},"content":"          userStateService.setStateForUser(chatId, userState);"},{"lineNumber":130,"author":{"gitId":"Victor"},"content":"        } else {"},{"lineNumber":131,"author":{"gitId":"Victor"},"content":"          telegramService.sendMessage("},{"lineNumber":132,"author":{"gitId":"Victor"},"content":"              chatId, \"CV with provided name doesn\u0027t exists! Please, provide a valid name\");"},{"lineNumber":133,"author":{"gitId":"Victor"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"Victor"},"content":"        break;"},{"lineNumber":135,"author":{"gitId":"Victor"},"content":""},{"lineNumber":136,"author":{"gitId":"Victor"},"content":"      case WAITING_FOR_UPDATE_COMPETENCES_CV_ACTION:"},{"lineNumber":137,"author":{"gitId":"Victor"},"content":"        userState.addInput(\"action\", userInput);"},{"lineNumber":138,"author":{"gitId":"Victor"},"content":"        nextState \u003d"},{"lineNumber":139,"author":{"gitId":"Victor"},"content":"            Objects.equals(userInput, \"A\")"},{"lineNumber":140,"author":{"gitId":"Victor"},"content":"                ? UpdateCVCompetencesState.WAITING_FOR_UPDATE_COMPETENCES_ADD"},{"lineNumber":141,"author":{"gitId":"Victor"},"content":"                : UpdateCVCompetencesState.WAITING_FOR_UPDATE_COMPETENCES_REMOVE;"},{"lineNumber":142,"author":{"gitId":"Victor"},"content":"        userState.setCommandState(nextState);"},{"lineNumber":143,"author":{"gitId":"Victor"},"content":"        telegramService.sendMessage(chatId, nextState.getMessage());"},{"lineNumber":144,"author":{"gitId":"Victor"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":145,"author":{"gitId":"Victor"},"content":"        break;"},{"lineNumber":146,"author":{"gitId":"Victor"},"content":""},{"lineNumber":147,"author":{"gitId":"Victor"},"content":"      case WAITING_FOR_UPDATE_COMPETENCES_ADD:"},{"lineNumber":148,"author":{"gitId":"Victor"},"content":"        userState.addInput(\"add\", userInput);"},{"lineNumber":149,"author":{"gitId":"Victor"},"content":"        inputs \u003d userState.getInputs();"},{"lineNumber":150,"author":{"gitId":"Victor"},"content":"        if (cvService.getCVByName(inputs.get(\"idname\")).isPresent()) {"},{"lineNumber":151,"author":{"gitId":"Victor"},"content":"          cv \u003d cvService.getCVByName(userInput).get();"},{"lineNumber":152,"author":{"gitId":"Victor"},"content":"        } else {"},{"lineNumber":153,"author":{"gitId":"Victor"},"content":"          cv \u003d cvService.getCVById(inputs.get(\"id\")).get();"},{"lineNumber":154,"author":{"gitId":"Victor"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"Victor"},"content":"        List\u003cString\u003e competences \u003d"},{"lineNumber":156,"author":{"gitId":"Victor"},"content":"            Stream.concat(cv.getCompetences().stream(), Stream.of(inputs.get(\"add\")))"},{"lineNumber":157,"author":{"gitId":"Victor"},"content":"                .collect(Collectors.toList());"},{"lineNumber":158,"author":{"gitId":"Victor"},"content":"        updateCVDTO \u003d"},{"lineNumber":159,"author":{"gitId":"Victor"},"content":"            UpdateCVDTO.builder()"},{"lineNumber":160,"author":{"gitId":"Victor"},"content":"                .id(cv.getId())"},{"lineNumber":161,"author":{"gitId":"Victor"},"content":"                .name(cv.getName())"},{"lineNumber":162,"author":{"gitId":"Victor"},"content":"                .description(cv.getDescription())"},{"lineNumber":163,"author":{"gitId":"Victor"},"content":"                .activities(cv.getActivities())"},{"lineNumber":164,"author":{"gitId":"Victor"},"content":"                .competences(competences)"},{"lineNumber":165,"author":{"gitId":"Victor"},"content":"                .preferences(cv.getPreferences())"},{"lineNumber":166,"author":{"gitId":"Victor"},"content":"                .isActive(cv.getIsActive())"},{"lineNumber":167,"author":{"gitId":"Victor"},"content":"                .manageCompetencies(cv.getManageCompetencies())"},{"lineNumber":168,"author":{"gitId":"Victor"},"content":"                .build();"},{"lineNumber":169,"author":{"gitId":"Victor"},"content":"        cvService.updateCV(updateCVDTO);"},{"lineNumber":170,"author":{"gitId":"Victor"},"content":"        userState.clear();"},{"lineNumber":171,"author":{"gitId":"Victor"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":172,"author":{"gitId":"Victor"},"content":"        telegramService.sendMessage(chatId, \"Successfully updated CV!\");"},{"lineNumber":173,"author":{"gitId":"Victor"},"content":"        break;"},{"lineNumber":174,"author":{"gitId":"Victor"},"content":""},{"lineNumber":175,"author":{"gitId":"Victor"},"content":"      case WAITING_FOR_UPDATE_COMPETENCES_REMOVE:"},{"lineNumber":176,"author":{"gitId":"Victor"},"content":"        userState.addInput(\"remove\", userInput);"},{"lineNumber":177,"author":{"gitId":"Victor"},"content":"        inputs \u003d userState.getInputs();"},{"lineNumber":178,"author":{"gitId":"Victor"},"content":"        if (cvService.getCVByName(inputs.get(\"idname\")).isPresent()) {"},{"lineNumber":179,"author":{"gitId":"Victor"},"content":"          cv \u003d cvService.getCVByName(userInput).get();"},{"lineNumber":180,"author":{"gitId":"Victor"},"content":"        } else {"},{"lineNumber":181,"author":{"gitId":"Victor"},"content":"          cv \u003d cvService.getCVById(inputs.get(\"id\")).get();"},{"lineNumber":182,"author":{"gitId":"Victor"},"content":"        }"},{"lineNumber":183,"author":{"gitId":"Victor"},"content":"        List\u003cString\u003e cvcompetences \u003d cv.getCompetences();"},{"lineNumber":184,"author":{"gitId":"Victor"},"content":"        cvcompetences.removeAll(List.of(inputs.get(\"remove\")));"},{"lineNumber":185,"author":{"gitId":"Victor"},"content":"        updateCVDTO \u003d"},{"lineNumber":186,"author":{"gitId":"Victor"},"content":"            UpdateCVDTO.builder()"},{"lineNumber":187,"author":{"gitId":"Victor"},"content":"                .id(cv.getId())"},{"lineNumber":188,"author":{"gitId":"Victor"},"content":"                .name(cv.getName())"},{"lineNumber":189,"author":{"gitId":"Victor"},"content":"                .description(cv.getDescription())"},{"lineNumber":190,"author":{"gitId":"Victor"},"content":"                .activities(cv.getActivities())"},{"lineNumber":191,"author":{"gitId":"Victor"},"content":"                .competences(cvcompetences)"},{"lineNumber":192,"author":{"gitId":"Victor"},"content":"                .preferences(cv.getPreferences())"},{"lineNumber":193,"author":{"gitId":"Victor"},"content":"                .isActive(cv.getIsActive())"},{"lineNumber":194,"author":{"gitId":"Victor"},"content":"                .manageCompetencies(cv.getManageCompetencies())"},{"lineNumber":195,"author":{"gitId":"Victor"},"content":"                .build();"},{"lineNumber":196,"author":{"gitId":"Victor"},"content":"        cvService.updateCV(updateCVDTO);"},{"lineNumber":197,"author":{"gitId":"Victor"},"content":"        userState.clear();"},{"lineNumber":198,"author":{"gitId":"Victor"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":199,"author":{"gitId":"Victor"},"content":"        telegramService.sendMessage(chatId, \"Successfully updated CV!\");"},{"lineNumber":200,"author":{"gitId":"Victor"},"content":"        break;"},{"lineNumber":201,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":202,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":203,"author":{"gitId":"Victor"},"content":""},{"lineNumber":204,"author":{"gitId":"Victor"},"content":"  private void initializeUserState(UserRequest userRequest, UserState userState) {"},{"lineNumber":205,"author":{"gitId":"Victor"},"content":"    final Long chatId \u003d userRequest.getChatId();"},{"lineNumber":206,"author":{"gitId":"Victor"},"content":"    userState.setCurrentCommand(Command.UPDATE_CV_COMPETENCES);"},{"lineNumber":207,"author":{"gitId":"Victor"},"content":"    userState.setCommandState(UpdateCVCompetencesState.WAITING_FOR_UPDATE_COMPETENCES_CV_DECISION);"},{"lineNumber":208,"author":{"gitId":"Victor"},"content":"    userStateService.setStateForUser(chatId, userState);"},{"lineNumber":209,"author":{"gitId":"Victor"},"content":"    telegramService.sendMessage("},{"lineNumber":210,"author":{"gitId":"Victor"},"content":"        chatId, UpdateCVCompetencesState.WAITING_FOR_UPDATE_COMPETENCES_CV_DECISION.getMessage());"},{"lineNumber":211,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":212,"author":{"gitId":"Victor"},"content":""},{"lineNumber":213,"author":{"gitId":"Victor"},"content":"  @Override"},{"lineNumber":214,"author":{"gitId":"Victor"},"content":"  public boolean canHandle(Command command) {"},{"lineNumber":215,"author":{"gitId":"Victor"},"content":"    return command.equals(Command.UPDATE_CV_COMPETENCES);"},{"lineNumber":216,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":217,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":217}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/command/handler/job/AddJobCommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.command.handler.job;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.dispatch.Command;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.handler.CommandHandler;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.handler.CommandState;"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.domain.dto.job.AddJobDTO;"},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.domain.model.UserState;"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.service.JobService;"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.service.TelegramService;"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.service.UserStateService;"},{"lineNumber":11,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.web.request.UserRequest;"},{"lineNumber":12,"author":{"gitId":"Victor"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitId":"Victor"},"content":"import java.util.Map;"},{"lineNumber":14,"author":{"gitId":"Victor"},"content":"import lombok.RequiredArgsConstructor;"},{"lineNumber":15,"author":{"gitId":"Victor"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":16,"author":{"gitId":"Victor"},"content":""},{"lineNumber":17,"author":{"gitId":"Victor"},"content":"@Component"},{"lineNumber":18,"author":{"gitId":"Victor"},"content":"@RequiredArgsConstructor"},{"lineNumber":19,"author":{"gitId":"Victor"},"content":"public class AddJobCommandHandler implements CommandHandler {"},{"lineNumber":20,"author":{"gitId":"Victor"},"content":""},{"lineNumber":21,"author":{"gitId":"Victor"},"content":"  private enum AddJobState implements CommandState {"},{"lineNumber":22,"author":{"gitId":"Victor"},"content":"    WAITING_FOR_TITLE(\"ADD_JOB_WAITING_FOR_TITLE\", \"Please, enter a job title (must not be empty)\"),"},{"lineNumber":23,"author":{"gitId":"Victor"},"content":"    WAITING_FOR_DESCRIPTION("},{"lineNumber":24,"author":{"gitId":"Victor"},"content":"        \"ADD_JOB_WAITING_FOR_DESCRIPTION\", \"Please, enter a job description (can be empty)\"),"},{"lineNumber":25,"author":{"gitId":"Victor"},"content":"    WAITING_FOR_ACTIVITIES("},{"lineNumber":26,"author":{"gitId":"Victor"},"content":"        \"ADD_JOB_WAITING_FOR_ACTIVITIES\","},{"lineNumber":27,"author":{"gitId":"Victor"},"content":"        \"Please, enter a list of job activities (as comma-separated list)\"),"},{"lineNumber":28,"author":{"gitId":"Victor"},"content":"    WAITING_FOR_COMPETENCES("},{"lineNumber":29,"author":{"gitId":"Victor"},"content":"        \"ADD_JOB_WAITING_FOR_COMPETENCES\","},{"lineNumber":30,"author":{"gitId":"Victor"},"content":"        \"Please, enter a list of job competences (as comma-separated list)\");"},{"lineNumber":31,"author":{"gitId":"Victor"},"content":""},{"lineNumber":32,"author":{"gitId":"Victor"},"content":"    private final String name;"},{"lineNumber":33,"author":{"gitId":"Victor"},"content":"    private final String message;"},{"lineNumber":34,"author":{"gitId":"Victor"},"content":""},{"lineNumber":35,"author":{"gitId":"Victor"},"content":"    AddJobState(String name, String message) {"},{"lineNumber":36,"author":{"gitId":"Victor"},"content":"      this.name \u003d name;"},{"lineNumber":37,"author":{"gitId":"Victor"},"content":"      this.message \u003d message;"},{"lineNumber":38,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Victor"},"content":""},{"lineNumber":40,"author":{"gitId":"Victor"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"Victor"},"content":"    public String getName() {"},{"lineNumber":42,"author":{"gitId":"Victor"},"content":"      return name;"},{"lineNumber":43,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Victor"},"content":""},{"lineNumber":45,"author":{"gitId":"Victor"},"content":"    public String getMessage() {"},{"lineNumber":46,"author":{"gitId":"Victor"},"content":"      return message;"},{"lineNumber":47,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":49,"author":{"gitId":"Victor"},"content":""},{"lineNumber":50,"author":{"gitId":"Victor"},"content":"  private final TelegramService telegramService;"},{"lineNumber":51,"author":{"gitId":"Victor"},"content":"  private final UserStateService userStateService;"},{"lineNumber":52,"author":{"gitId":"Victor"},"content":"  private final JobService jobService;"},{"lineNumber":53,"author":{"gitId":"Victor"},"content":""},{"lineNumber":54,"author":{"gitId":"Victor"},"content":"  @Override"},{"lineNumber":55,"author":{"gitId":"Victor"},"content":"  public void handle(UserRequest userRequest) {"},{"lineNumber":56,"author":{"gitId":"Victor"},"content":"    final UserState userState \u003d userStateService.getStateForUser(userRequest.getChatId());"},{"lineNumber":57,"author":{"gitId":"Victor"},"content":"    if (userState.isEmpty()) {"},{"lineNumber":58,"author":{"gitId":"Victor"},"content":"      initializeUserState(userRequest, userState);"},{"lineNumber":59,"author":{"gitId":"Victor"},"content":"    } else {"},{"lineNumber":60,"author":{"gitId":"Victor"},"content":"      performStateAction(userRequest, userState);"},{"lineNumber":61,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":63,"author":{"gitId":"Victor"},"content":""},{"lineNumber":64,"author":{"gitId":"Victor"},"content":"  private void performStateAction(UserRequest userRequest, UserState userState) {"},{"lineNumber":65,"author":{"gitId":"Victor"},"content":"    final AddJobState currentState \u003d (AddJobState) userState.getCommandState();"},{"lineNumber":66,"author":{"gitId":"Victor"},"content":"    final String userInput \u003d userRequest.getText();"},{"lineNumber":67,"author":{"gitId":"Victor"},"content":"    final Long chatId \u003d userRequest.getChatId();"},{"lineNumber":68,"author":{"gitId":"Victor"},"content":""},{"lineNumber":69,"author":{"gitId":"Victor"},"content":"    switch (currentState) {"},{"lineNumber":70,"author":{"gitId":"Victor"},"content":"      case WAITING_FOR_TITLE:"},{"lineNumber":71,"author":{"gitId":"Victor"},"content":"        userState.addInput(\"title\", userInput);"},{"lineNumber":72,"author":{"gitId":"Victor"},"content":"        userState.setCommandState(AddJobState.WAITING_FOR_DESCRIPTION);"},{"lineNumber":73,"author":{"gitId":"Victor"},"content":"        telegramService.sendMessage(chatId, AddJobState.WAITING_FOR_DESCRIPTION.getMessage());"},{"lineNumber":74,"author":{"gitId":"Victor"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":75,"author":{"gitId":"Victor"},"content":"        break;"},{"lineNumber":76,"author":{"gitId":"Victor"},"content":""},{"lineNumber":77,"author":{"gitId":"Victor"},"content":"      case WAITING_FOR_DESCRIPTION:"},{"lineNumber":78,"author":{"gitId":"Victor"},"content":"        userState.addInput(\"description\", userInput);"},{"lineNumber":79,"author":{"gitId":"Victor"},"content":"        userState.setCommandState(AddJobState.WAITING_FOR_ACTIVITIES);"},{"lineNumber":80,"author":{"gitId":"Victor"},"content":"        telegramService.sendMessage(chatId, AddJobState.WAITING_FOR_ACTIVITIES.getMessage());"},{"lineNumber":81,"author":{"gitId":"Victor"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":82,"author":{"gitId":"Victor"},"content":"        break;"},{"lineNumber":83,"author":{"gitId":"Victor"},"content":""},{"lineNumber":84,"author":{"gitId":"Victor"},"content":"      case WAITING_FOR_ACTIVITIES:"},{"lineNumber":85,"author":{"gitId":"Victor"},"content":"        userState.addInput(\"activities\", userInput);"},{"lineNumber":86,"author":{"gitId":"Victor"},"content":"        userState.setCommandState(AddJobState.WAITING_FOR_COMPETENCES);"},{"lineNumber":87,"author":{"gitId":"Victor"},"content":"        telegramService.sendMessage(chatId, AddJobState.WAITING_FOR_COMPETENCES.getMessage());"},{"lineNumber":88,"author":{"gitId":"Victor"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":89,"author":{"gitId":"Victor"},"content":"        break;"},{"lineNumber":90,"author":{"gitId":"Victor"},"content":""},{"lineNumber":91,"author":{"gitId":"Victor"},"content":"      case WAITING_FOR_COMPETENCES:"},{"lineNumber":92,"author":{"gitId":"Victor"},"content":"        userState.addInput(\"competences\", userInput);"},{"lineNumber":93,"author":{"gitId":"Victor"},"content":"        final Map\u003cString, String\u003e inputs \u003d userState.getInputs();"},{"lineNumber":94,"author":{"gitId":"Victor"},"content":"        final AddJobDTO addJobDTO \u003d"},{"lineNumber":95,"author":{"gitId":"Victor"},"content":"            AddJobDTO.builder()"},{"lineNumber":96,"author":{"gitId":"Victor"},"content":"                .title(inputs.get(\"title\"))"},{"lineNumber":97,"author":{"gitId":"Victor"},"content":"                .description(inputs.get(\"description\"))"},{"lineNumber":98,"author":{"gitId":"Victor"},"content":"                .activities(List.of(inputs.get(\"activities\")))"},{"lineNumber":99,"author":{"gitId":"Victor"},"content":"                .competences(List.of(inputs.get(\"competences\")))"},{"lineNumber":100,"author":{"gitId":"Victor"},"content":"                .build();"},{"lineNumber":101,"author":{"gitId":"Victor"},"content":"        jobService.addJob(addJobDTO);"},{"lineNumber":102,"author":{"gitId":"Victor"},"content":"        telegramService.sendMessage(chatId, \"Successfully added new job!\");"},{"lineNumber":103,"author":{"gitId":"Victor"},"content":"        userState.clear();"},{"lineNumber":104,"author":{"gitId":"Victor"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":105,"author":{"gitId":"Victor"},"content":"        break;"},{"lineNumber":106,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":108,"author":{"gitId":"Victor"},"content":""},{"lineNumber":109,"author":{"gitId":"Victor"},"content":"  private void initializeUserState(UserRequest userRequest, UserState userState) {"},{"lineNumber":110,"author":{"gitId":"Victor"},"content":"    final Long chatId \u003d userRequest.getChatId();"},{"lineNumber":111,"author":{"gitId":"Victor"},"content":"    userState.setCurrentCommand(Command.ADD_JOB);"},{"lineNumber":112,"author":{"gitId":"Victor"},"content":"    userState.setCommandState(AddJobState.WAITING_FOR_TITLE);"},{"lineNumber":113,"author":{"gitId":"Victor"},"content":"    userStateService.setStateForUser(chatId, userState);"},{"lineNumber":114,"author":{"gitId":"Victor"},"content":"    telegramService.sendMessage(chatId, AddJobState.WAITING_FOR_TITLE.getMessage());"},{"lineNumber":115,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":116,"author":{"gitId":"Victor"},"content":""},{"lineNumber":117,"author":{"gitId":"Victor"},"content":"  @Override"},{"lineNumber":118,"author":{"gitId":"Victor"},"content":"  public boolean canHandle(Command command) {"},{"lineNumber":119,"author":{"gitId":"Victor"},"content":"    return command.equals(Command.ADD_JOB);"},{"lineNumber":120,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":121,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":121}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/command/handler/job/DeleteJobCommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.command.handler.job;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.dispatch.Command;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.handler.CommandHandler;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.handler.CommandState;"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.domain.model.UserState;"},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.service.JobService;"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.service.TelegramService;"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.service.UserStateService;"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.web.request.UserRequest;"},{"lineNumber":11,"author":{"gitId":"Victor"},"content":"import lombok.RequiredArgsConstructor;"},{"lineNumber":12,"author":{"gitId":"Victor"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":13,"author":{"gitId":"Victor"},"content":""},{"lineNumber":14,"author":{"gitId":"Victor"},"content":"@Component"},{"lineNumber":15,"author":{"gitId":"Victor"},"content":"@RequiredArgsConstructor"},{"lineNumber":16,"author":{"gitId":"Victor"},"content":"public class DeleteJobCommandHandler implements CommandHandler {"},{"lineNumber":17,"author":{"gitId":"Victor"},"content":""},{"lineNumber":18,"author":{"gitId":"Victor"},"content":"  private enum DeleteJobState implements CommandState {"},{"lineNumber":19,"author":{"gitId":"Victor"},"content":"    WAITING_FOR_JOB_ID("},{"lineNumber":20,"author":{"gitId":"Victor"},"content":"        \"DELETE_JOB_WAITING_FOR_ID\", \"Please, enter an id of job which you want to delete\");"},{"lineNumber":21,"author":{"gitId":"Victor"},"content":""},{"lineNumber":22,"author":{"gitId":"Victor"},"content":"    private final String name;"},{"lineNumber":23,"author":{"gitId":"Victor"},"content":"    private final String message;"},{"lineNumber":24,"author":{"gitId":"Victor"},"content":""},{"lineNumber":25,"author":{"gitId":"Victor"},"content":"    DeleteJobState(String name, String message) {"},{"lineNumber":26,"author":{"gitId":"Victor"},"content":"      this.name \u003d name;"},{"lineNumber":27,"author":{"gitId":"Victor"},"content":"      this.message \u003d message;"},{"lineNumber":28,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Victor"},"content":""},{"lineNumber":30,"author":{"gitId":"Victor"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"Victor"},"content":"    public String getName() {"},{"lineNumber":32,"author":{"gitId":"Victor"},"content":"      return name;"},{"lineNumber":33,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Victor"},"content":""},{"lineNumber":35,"author":{"gitId":"Victor"},"content":"    public String getMessage() {"},{"lineNumber":36,"author":{"gitId":"Victor"},"content":"      return message;"},{"lineNumber":37,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":39,"author":{"gitId":"Victor"},"content":""},{"lineNumber":40,"author":{"gitId":"Victor"},"content":"  private final TelegramService telegramService;"},{"lineNumber":41,"author":{"gitId":"Victor"},"content":"  private final UserStateService userStateService;"},{"lineNumber":42,"author":{"gitId":"Victor"},"content":"  private final JobService jobService;"},{"lineNumber":43,"author":{"gitId":"Victor"},"content":""},{"lineNumber":44,"author":{"gitId":"Victor"},"content":"  @Override"},{"lineNumber":45,"author":{"gitId":"Victor"},"content":"  public void handle(UserRequest userRequest) {"},{"lineNumber":46,"author":{"gitId":"Victor"},"content":"    final UserState userState \u003d userStateService.getStateForUser(userRequest.getChatId());"},{"lineNumber":47,"author":{"gitId":"Victor"},"content":"    if (userState.isEmpty()) {"},{"lineNumber":48,"author":{"gitId":"Victor"},"content":"      initializeUserState(userRequest, userState);"},{"lineNumber":49,"author":{"gitId":"Victor"},"content":"    } else {"},{"lineNumber":50,"author":{"gitId":"Victor"},"content":"      performStateAction(userRequest, userState);"},{"lineNumber":51,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":53,"author":{"gitId":"Victor"},"content":""},{"lineNumber":54,"author":{"gitId":"Victor"},"content":"  private void performStateAction(UserRequest userRequest, UserState userState) {"},{"lineNumber":55,"author":{"gitId":"Victor"},"content":"    final DeleteJobState currentState \u003d (DeleteJobState) userState.getCommandState();"},{"lineNumber":56,"author":{"gitId":"Victor"},"content":"    final String userInput \u003d userRequest.getText();"},{"lineNumber":57,"author":{"gitId":"Victor"},"content":"    final Long chatId \u003d userRequest.getChatId();"},{"lineNumber":58,"author":{"gitId":"Victor"},"content":""},{"lineNumber":59,"author":{"gitId":"Victor"},"content":"    if (currentState.equals(DeleteJobState.WAITING_FOR_JOB_ID)) {"},{"lineNumber":60,"author":{"gitId":"Victor"},"content":"      if (jobService.getJobById(userInput).isPresent()) {"},{"lineNumber":61,"author":{"gitId":"Victor"},"content":"        jobService.deleteJob(userInput);"},{"lineNumber":62,"author":{"gitId":"Victor"},"content":"        userState.clear();"},{"lineNumber":63,"author":{"gitId":"Victor"},"content":"        userStateService.setStateForUser(chatId, userState);"},{"lineNumber":64,"author":{"gitId":"Victor"},"content":"        telegramService.sendMessage(chatId, \"Successfully deleted job!\");"},{"lineNumber":65,"author":{"gitId":"Victor"},"content":"      } else {"},{"lineNumber":66,"author":{"gitId":"Victor"},"content":"        telegramService.sendMessage("},{"lineNumber":67,"author":{"gitId":"Victor"},"content":"            chatId, \"Job with provided id doesn\u0027t exists! Please, provide a valid id\");"},{"lineNumber":68,"author":{"gitId":"Victor"},"content":"      }"},{"lineNumber":69,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":71,"author":{"gitId":"Victor"},"content":""},{"lineNumber":72,"author":{"gitId":"Victor"},"content":"  private void initializeUserState(UserRequest userRequest, UserState userState) {"},{"lineNumber":73,"author":{"gitId":"Victor"},"content":"    final Long chatId \u003d userRequest.getChatId();"},{"lineNumber":74,"author":{"gitId":"Victor"},"content":"    userState.setCurrentCommand(Command.DELETE_JOB);"},{"lineNumber":75,"author":{"gitId":"Victor"},"content":"    userState.setCommandState(DeleteJobState.WAITING_FOR_JOB_ID);"},{"lineNumber":76,"author":{"gitId":"Victor"},"content":"    userStateService.setStateForUser(chatId, userState);"},{"lineNumber":77,"author":{"gitId":"Victor"},"content":"    telegramService.sendMessage(chatId, DeleteJobState.WAITING_FOR_JOB_ID.getMessage());"},{"lineNumber":78,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":79,"author":{"gitId":"Victor"},"content":""},{"lineNumber":80,"author":{"gitId":"Victor"},"content":"  @Override"},{"lineNumber":81,"author":{"gitId":"Victor"},"content":"  public boolean canHandle(Command command) {"},{"lineNumber":82,"author":{"gitId":"Victor"},"content":"    return command.equals(Command.DELETE_JOB);"},{"lineNumber":83,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":84,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":84}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/command/handler/job/GetJobsCommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.command.handler.job;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.dispatch.Command;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.handler.CommandHandler;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.domain.model.Job;"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.service.JobService;"},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.service.TelegramService;"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.web.request.UserRequest;"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"import lombok.RequiredArgsConstructor;"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":11,"author":{"gitId":"Victor"},"content":""},{"lineNumber":12,"author":{"gitId":"Victor"},"content":"@Component"},{"lineNumber":13,"author":{"gitId":"Victor"},"content":"@RequiredArgsConstructor"},{"lineNumber":14,"author":{"gitId":"Victor"},"content":"public class GetJobsCommandHandler implements CommandHandler {"},{"lineNumber":15,"author":{"gitId":"Victor"},"content":""},{"lineNumber":16,"author":{"gitId":"Victor"},"content":"  private final JobService jobService;"},{"lineNumber":17,"author":{"gitId":"Victor"},"content":"  private final TelegramService telegramService;"},{"lineNumber":18,"author":{"gitId":"Victor"},"content":""},{"lineNumber":19,"author":{"gitId":"Victor"},"content":"  @Override"},{"lineNumber":20,"author":{"gitId":"Victor"},"content":"  public void handle(UserRequest userRequest) {"},{"lineNumber":21,"author":{"gitId":"Victor"},"content":"    final Long chatId \u003d userRequest.getChatId();"},{"lineNumber":22,"author":{"gitId":"Victor"},"content":"    StringBuilder stringBuilder \u003d new StringBuilder(\"All available jobs:\\n\");"},{"lineNumber":23,"author":{"gitId":"Victor"},"content":"    for (Job job : jobService.getAllJobs()) {"},{"lineNumber":24,"author":{"gitId":"Victor"},"content":"      stringBuilder.append(job.toString()).append(\"\\n\");"},{"lineNumber":25,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Victor"},"content":"    telegramService.sendMessage(chatId, stringBuilder.toString());"},{"lineNumber":27,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":28,"author":{"gitId":"Victor"},"content":""},{"lineNumber":29,"author":{"gitId":"Victor"},"content":"  @Override"},{"lineNumber":30,"author":{"gitId":"Victor"},"content":"  public boolean canHandle(Command command) {"},{"lineNumber":31,"author":{"gitId":"Victor"},"content":"    return command.equals(Command.GET_JOBS);"},{"lineNumber":32,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":33,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":33}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/command/handler/organization/UpdateDepartmentStatusCommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.command.handler.organization;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.dispatch.Command;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.handler.CommandHandler;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.handler.CommandState;"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.domain.dto.department.UpdateDepartmentDTO;"},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.domain.dto.job.UpdateJobDTO;"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.domain.model.Department;"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.domain.model.Job;"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.domain.model.UserState;"},{"lineNumber":11,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.service.DepartmentService;"},{"lineNumber":12,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.service.JobService;"},{"lineNumber":13,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.service.TelegramService;"},{"lineNumber":14,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.service.UserStateService;"},{"lineNumber":15,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.web.request.UserRequest;"},{"lineNumber":16,"author":{"gitId":"Victor"},"content":"import java.util.List;"},{"lineNumber":17,"author":{"gitId":"Victor"},"content":"import java.util.Map;"},{"lineNumber":18,"author":{"gitId":"Victor"},"content":"import java.util.Objects;"},{"lineNumber":19,"author":{"gitId":"Victor"},"content":"import lombok.RequiredArgsConstructor;"},{"lineNumber":20,"author":{"gitId":"Victor"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":21,"author":{"gitId":"Victor"},"content":""},{"lineNumber":22,"author":{"gitId":"Victor"},"content":"@Component"},{"lineNumber":23,"author":{"gitId":"Victor"},"content":"@RequiredArgsConstructor"},{"lineNumber":24,"author":{"gitId":"Victor"},"content":"public class UpdateDepartmentStatusCommandHandler implements CommandHandler {"},{"lineNumber":25,"author":{"gitId":"Victor"},"content":""},{"lineNumber":26,"author":{"gitId":"Victor"},"content":"  private enum UpdateDepartmentStatusState implements CommandState {"},{"lineNumber":27,"author":{"gitId":"Victor"},"content":"    WAITING_FOR_UPDATE_STATUS_DEPARTMENT_ID("},{"lineNumber":28,"author":{"gitId":"Victor"},"content":"        \"UPDATE_STATUS_DEPARTMENT_WAITING_FOR_ID\","},{"lineNumber":29,"author":{"gitId":"Victor"},"content":"        \"Please, enter the department id of which you want to update hiring status\"),"},{"lineNumber":30,"author":{"gitId":"Victor"},"content":"    WAITING_FOR_UPDATE_STATUS_DEPARTMENT_ACTION("},{"lineNumber":31,"author":{"gitId":"Victor"},"content":"        \"UPDATE_STATUS_DEPARTMENT_WAITING_FOR_ACTION\","},{"lineNumber":32,"author":{"gitId":"Victor"},"content":"        \"Do you want to set the hiring status as \u0027We are hiring\u0027(+) or \u0027We are not hiring\u0027(-)?\");"},{"lineNumber":33,"author":{"gitId":"Victor"},"content":""},{"lineNumber":34,"author":{"gitId":"Victor"},"content":"    private final String name;"},{"lineNumber":35,"author":{"gitId":"Victor"},"content":"    private final String message;"},{"lineNumber":36,"author":{"gitId":"Victor"},"content":""},{"lineNumber":37,"author":{"gitId":"Victor"},"content":"    UpdateDepartmentStatusState(String name, String message) {"},{"lineNumber":38,"author":{"gitId":"Victor"},"content":"      this.name \u003d name;"},{"lineNumber":39,"author":{"gitId":"Victor"},"content":"      this.message \u003d message;"},{"lineNumber":40,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Victor"},"content":""},{"lineNumber":42,"author":{"gitId":"Victor"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"Victor"},"content":"    public String getName() {"},{"lineNumber":44,"author":{"gitId":"Victor"},"content":"      return name;"},{"lineNumber":45,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Victor"},"content":""},{"lineNumber":47,"author":{"gitId":"Victor"},"content":"    public String getMessage() {"},{"lineNumber":48,"author":{"gitId":"Victor"},"content":"      return message;"},{"lineNumber":49,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":51,"author":{"gitId":"Victor"},"content":""},{"lineNumber":52,"author":{"gitId":"Victor"},"content":"  private final TelegramService telegramService;"},{"lineNumber":53,"author":{"gitId":"Victor"},"content":"  private final UserStateService userStateService;"},{"lineNumber":54,"author":{"gitId":"Victor"},"content":"  private final DepartmentService depService;"},{"lineNumber":55,"author":{"gitId":"Victor"},"content":"  private final JobService jobService;"},{"lineNumber":56,"author":{"gitId":"Victor"},"content":""},{"lineNumber":57,"author":{"gitId":"Victor"},"content":"  @Override"},{"lineNumber":58,"author":{"gitId":"Victor"},"content":"  public void handle(UserRequest userRequest) {"},{"lineNumber":59,"author":{"gitId":"Victor"},"content":"    final UserState userState \u003d userStateService.getStateForUser(userRequest.getChatId());"},{"lineNumber":60,"author":{"gitId":"Victor"},"content":"    if (userState.isEmpty()) {"},{"lineNumber":61,"author":{"gitId":"Victor"},"content":"      initializeUserState(userRequest, userState);"},{"lineNumber":62,"author":{"gitId":"Victor"},"content":"    } else {"},{"lineNumber":63,"author":{"gitId":"Victor"},"content":"      performStateAction(userRequest, userState);"},{"lineNumber":64,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":66,"author":{"gitId":"Victor"},"content":""},{"lineNumber":67,"author":{"gitId":"Victor"},"content":"  private void performStateAction(UserRequest userRequest, UserState userState) {"},{"lineNumber":68,"author":{"gitId":"Victor"},"content":"    final UpdateDepartmentStatusState currentState \u003d"},{"lineNumber":69,"author":{"gitId":"Victor"},"content":"        (UpdateDepartmentStatusState) userState.getCommandState();"},{"lineNumber":70,"author":{"gitId":"Victor"},"content":"    final String userInput \u003d userRequest.getText();"},{"lineNumber":71,"author":{"gitId":"Victor"},"content":"    final Long chatId \u003d userRequest.getChatId();"},{"lineNumber":72,"author":{"gitId":"Victor"},"content":""},{"lineNumber":73,"author":{"gitId":"Victor"},"content":"    final Department dep;"},{"lineNumber":74,"author":{"gitId":"Victor"},"content":"    final UpdateDepartmentDTO updateDepartmentDTO;"},{"lineNumber":75,"author":{"gitId":"Victor"},"content":"    final Map\u003cString, String\u003e inputs;"},{"lineNumber":76,"author":{"gitId":"Victor"},"content":""},{"lineNumber":77,"author":{"gitId":"Victor"},"content":"    switch (currentState) {"},{"lineNumber":78,"author":{"gitId":"Victor"},"content":"      case WAITING_FOR_UPDATE_STATUS_DEPARTMENT_ID:"},{"lineNumber":79,"author":{"gitId":"Victor"},"content":"        userState.addInput(\"id\", userInput);"},{"lineNumber":80,"author":{"gitId":"Victor"},"content":"        if (depService.getDepartmentById(userInput).isPresent()) {"},{"lineNumber":81,"author":{"gitId":"Victor"},"content":"          dep \u003d depService.getDepartmentById(userInput).get();"},{"lineNumber":82,"author":{"gitId":"Victor"},"content":"          userState.setCommandState("},{"lineNumber":83,"author":{"gitId":"Victor"},"content":"              UpdateDepartmentStatusState.WAITING_FOR_UPDATE_STATUS_DEPARTMENT_ACTION);"},{"lineNumber":84,"author":{"gitId":"Victor"},"content":"          telegramService.sendMessage("},{"lineNumber":85,"author":{"gitId":"Victor"},"content":"              chatId,"},{"lineNumber":86,"author":{"gitId":"Victor"},"content":"              UpdateDepartmentStatusState.WAITING_FOR_UPDATE_STATUS_DEPARTMENT_ACTION.getMessage()"},{"lineNumber":87,"author":{"gitId":"Victor"},"content":"                  + \" Department: \""},{"lineNumber":88,"author":{"gitId":"Victor"},"content":"                  + dep.getName());"},{"lineNumber":89,"author":{"gitId":"Victor"},"content":"          userStateService.setStateForUser(chatId, userState);"},{"lineNumber":90,"author":{"gitId":"Victor"},"content":"        } else {"},{"lineNumber":91,"author":{"gitId":"Victor"},"content":"          telegramService.sendMessage("},{"lineNumber":92,"author":{"gitId":"Victor"},"content":"              chatId, \"Department with provided id doesn\u0027t exists! Please, provide a valid id\");"},{"lineNumber":93,"author":{"gitId":"Victor"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"Victor"},"content":"        break;"},{"lineNumber":95,"author":{"gitId":"Victor"},"content":"      case WAITING_FOR_UPDATE_STATUS_DEPARTMENT_ACTION:"},{"lineNumber":96,"author":{"gitId":"Victor"},"content":"        userState.addInput(\"isHiring\", userInput);"},{"lineNumber":97,"author":{"gitId":"Victor"},"content":"        inputs \u003d userState.getInputs();"},{"lineNumber":98,"author":{"gitId":"Victor"},"content":"        dep \u003d depService.getDepartmentById(inputs.get(\"id\")).get();"},{"lineNumber":99,"author":{"gitId":"Victor"},"content":"        if (Objects.equals(userInput, \"+\")) {"},{"lineNumber":100,"author":{"gitId":"Victor"},"content":"          updateDepartmentDTO \u003d"},{"lineNumber":101,"author":{"gitId":"Victor"},"content":"              UpdateDepartmentDTO.builder()"},{"lineNumber":102,"author":{"gitId":"Victor"},"content":"                  .id(dep.getId())"},{"lineNumber":103,"author":{"gitId":"Victor"},"content":"                  .name(dep.getName())"},{"lineNumber":104,"author":{"gitId":"Victor"},"content":"                  .isHiring(true)"},{"lineNumber":105,"author":{"gitId":"Victor"},"content":"                  .orgId(dep.getOrgId())"},{"lineNumber":106,"author":{"gitId":"Victor"},"content":"                  .build();"},{"lineNumber":107,"author":{"gitId":"Victor"},"content":"          depService.updateDepStatus(updateDepartmentDTO);"},{"lineNumber":108,"author":{"gitId":"Victor"},"content":"          userState.clear();"},{"lineNumber":109,"author":{"gitId":"Victor"},"content":"          userStateService.setStateForUser(chatId, userState);"},{"lineNumber":110,"author":{"gitId":"Victor"},"content":"          telegramService.sendMessage("},{"lineNumber":111,"author":{"gitId":"Victor"},"content":"              chatId,"},{"lineNumber":112,"author":{"gitId":"Victor"},"content":"              \"Successfully updated the status of the department! Now the department is open for\""},{"lineNumber":113,"author":{"gitId":"Victor"},"content":"                  + \" hire!\");"},{"lineNumber":114,"author":{"gitId":"Victor"},"content":"        } else if (Objects.equals(userInput, \"-\")) {"},{"lineNumber":115,"author":{"gitId":"Victor"},"content":"          // Stop hiring"},{"lineNumber":116,"author":{"gitId":"Victor"},"content":"          updateDepartmentDTO \u003d"},{"lineNumber":117,"author":{"gitId":"Victor"},"content":"              UpdateDepartmentDTO.builder()"},{"lineNumber":118,"author":{"gitId":"Victor"},"content":"                  .id(dep.getId())"},{"lineNumber":119,"author":{"gitId":"Victor"},"content":"                  .name(dep.getName())"},{"lineNumber":120,"author":{"gitId":"Victor"},"content":"                  .isHiring(false)"},{"lineNumber":121,"author":{"gitId":"Victor"},"content":"                  .orgId(dep.getOrgId())"},{"lineNumber":122,"author":{"gitId":"Victor"},"content":"                  .build();"},{"lineNumber":123,"author":{"gitId":"Victor"},"content":"          depService.updateDepStatus(updateDepartmentDTO);"},{"lineNumber":124,"author":{"gitId":"Victor"},"content":"          // Deactivate all jobs"},{"lineNumber":125,"author":{"gitId":"Victor"},"content":"          List\u003cJob\u003e jobs \u003d jobService.getAllJobs();"},{"lineNumber":126,"author":{"gitId":"Victor"},"content":"          jobs.removeIf(job -\u003e !job.getDepId().equals(dep.getId()));"},{"lineNumber":127,"author":{"gitId":"Victor"},"content":"          for (Job job : jobs) {"},{"lineNumber":128,"author":{"gitId":"Victor"},"content":"            final UpdateJobDTO updateJobDTO \u003d"},{"lineNumber":129,"author":{"gitId":"Victor"},"content":"                UpdateJobDTO.builder()"},{"lineNumber":130,"author":{"gitId":"Victor"},"content":"                    .id(job.getId())"},{"lineNumber":131,"author":{"gitId":"Victor"},"content":"                    .title(job.getTitle())"},{"lineNumber":132,"author":{"gitId":"Victor"},"content":"                    .description(job.getDescription())"},{"lineNumber":133,"author":{"gitId":"Victor"},"content":"                    .isActive(false)"},{"lineNumber":134,"author":{"gitId":"Victor"},"content":"                    .activities(job.getActivities())"},{"lineNumber":135,"author":{"gitId":"Victor"},"content":"                    .competences(job.getCompetences())"},{"lineNumber":136,"author":{"gitId":"Victor"},"content":"                    .depId(job.getDepId())"},{"lineNumber":137,"author":{"gitId":"Victor"},"content":"                    .build();"},{"lineNumber":138,"author":{"gitId":"Victor"},"content":"            jobService.updateJob(updateJobDTO);"},{"lineNumber":139,"author":{"gitId":"Victor"},"content":"          }"},{"lineNumber":140,"author":{"gitId":"Victor"},"content":"          userState.clear();"},{"lineNumber":141,"author":{"gitId":"Victor"},"content":"          userStateService.setStateForUser(chatId, userState);"},{"lineNumber":142,"author":{"gitId":"Victor"},"content":"          telegramService.sendMessage("},{"lineNumber":143,"author":{"gitId":"Victor"},"content":"              chatId,"},{"lineNumber":144,"author":{"gitId":"Victor"},"content":"              \"Successfully updated the status of the department! Now the department is closed for\""},{"lineNumber":145,"author":{"gitId":"Victor"},"content":"                  + \" hiring!\");"},{"lineNumber":146,"author":{"gitId":"Victor"},"content":"        } else {"},{"lineNumber":147,"author":{"gitId":"Victor"},"content":"          telegramService.sendMessage("},{"lineNumber":148,"author":{"gitId":"Victor"},"content":"              chatId,"},{"lineNumber":149,"author":{"gitId":"Victor"},"content":"              \"Value for hiring status is not valid! Please, provide a valid value (+ or -) for the\""},{"lineNumber":150,"author":{"gitId":"Victor"},"content":"                  + \" hiring status\");"},{"lineNumber":151,"author":{"gitId":"Victor"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"Victor"},"content":"        break;"},{"lineNumber":153,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":155,"author":{"gitId":"Victor"},"content":""},{"lineNumber":156,"author":{"gitId":"Victor"},"content":"  private void initializeUserState(UserRequest userRequest, UserState userState) {"},{"lineNumber":157,"author":{"gitId":"Victor"},"content":"    final Long chatId \u003d userRequest.getChatId();"},{"lineNumber":158,"author":{"gitId":"Victor"},"content":"    userState.setCurrentCommand(Command.UPDATE_DEPARTMENT_STATUS);"},{"lineNumber":159,"author":{"gitId":"Victor"},"content":"    userState.setCommandState(UpdateDepartmentStatusState.WAITING_FOR_UPDATE_STATUS_DEPARTMENT_ID);"},{"lineNumber":160,"author":{"gitId":"Victor"},"content":"    userStateService.setStateForUser(chatId, userState);"},{"lineNumber":161,"author":{"gitId":"Victor"},"content":"    telegramService.sendMessage("},{"lineNumber":162,"author":{"gitId":"Victor"},"content":"        chatId,"},{"lineNumber":163,"author":{"gitId":"Victor"},"content":"        UpdateDepartmentStatusCommandHandler.UpdateDepartmentStatusState"},{"lineNumber":164,"author":{"gitId":"Victor"},"content":"            .WAITING_FOR_UPDATE_STATUS_DEPARTMENT_ID"},{"lineNumber":165,"author":{"gitId":"Victor"},"content":"            .getMessage());"},{"lineNumber":166,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":167,"author":{"gitId":"Victor"},"content":""},{"lineNumber":168,"author":{"gitId":"Victor"},"content":"  @Override"},{"lineNumber":169,"author":{"gitId":"Victor"},"content":"  public boolean canHandle(Command command) {"},{"lineNumber":170,"author":{"gitId":"Victor"},"content":"    return command.equals(Command.UPDATE_DEPARTMENT_STATUS);"},{"lineNumber":171,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":172,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":172}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/config/TelegramProperties.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.config;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import lombok.Builder;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import lombok.Value;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.springframework.boot.context.properties.ConfigurationProperties;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.springframework.boot.context.properties.ConstructorBinding;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"@ConfigurationProperties(prefix \u003d \"telegram\")"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@ConstructorBinding"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@Value"},{"lineNumber":11,"author":{"gitId":"Victor"},"content":"@Builder"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class TelegramProperties {"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"  String botName;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  String botToken;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Victor":2,"-":14}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/domain/dto/cv/AddCVDTO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elina Semenko"},"content":"package edu.kmaooad.domain.dto.cv;"},{"lineNumber":2,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":3,"author":{"gitId":"Elina Semenko"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"Elina Semenko"},"content":"import lombok.Builder;"},{"lineNumber":5,"author":{"gitId":"Elina Semenko"},"content":"import lombok.Value;"},{"lineNumber":6,"author":{"gitId":"Elina Semenko"},"content":"import lombok.extern.jackson.Jacksonized;"},{"lineNumber":7,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":8,"author":{"gitId":"Elina Semenko"},"content":"@Value"},{"lineNumber":9,"author":{"gitId":"Elina Semenko"},"content":"@Builder"},{"lineNumber":10,"author":{"gitId":"Elina Semenko"},"content":"@Jacksonized"},{"lineNumber":11,"author":{"gitId":"Elina Semenko"},"content":"public class AddCVDTO {"},{"lineNumber":12,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":13,"author":{"gitId":"Elina Semenko"},"content":"  String name;"},{"lineNumber":14,"author":{"gitId":"Elina Semenko"},"content":"  String description;"},{"lineNumber":15,"author":{"gitId":"Elina Semenko"},"content":"  Boolean isActive;"},{"lineNumber":16,"author":{"gitId":"Elina Semenko"},"content":"  Boolean isHidden;"},{"lineNumber":17,"author":{"gitId":"Elina Semenko"},"content":"  Boolean manageCompetencies;"},{"lineNumber":18,"author":{"gitId":"Elina Semenko"},"content":"  List\u003cString\u003e activities;"},{"lineNumber":19,"author":{"gitId":"Elina Semenko"},"content":"  List\u003cString\u003e preferences;"},{"lineNumber":20,"author":{"gitId":"Elina Semenko"},"content":"  List\u003cString\u003e competences;"},{"lineNumber":21,"author":{"gitId":"Elina Semenko"},"content":"}"}],"authorContributionMap":{"Elina Semenko":21}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/domain/dto/cv/UpdateCVDTO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elina Semenko"},"content":"package edu.kmaooad.domain.dto.cv;"},{"lineNumber":2,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":3,"author":{"gitId":"Elina Semenko"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"Elina Semenko"},"content":"import lombok.Builder;"},{"lineNumber":5,"author":{"gitId":"Elina Semenko"},"content":"import lombok.Value;"},{"lineNumber":6,"author":{"gitId":"Elina Semenko"},"content":"import lombok.extern.jackson.Jacksonized;"},{"lineNumber":7,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":8,"author":{"gitId":"Elina Semenko"},"content":"@Value"},{"lineNumber":9,"author":{"gitId":"Elina Semenko"},"content":"@Builder"},{"lineNumber":10,"author":{"gitId":"Elina Semenko"},"content":"@Jacksonized"},{"lineNumber":11,"author":{"gitId":"Elina Semenko"},"content":"public class UpdateCVDTO {"},{"lineNumber":12,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":13,"author":{"gitId":"Elina Semenko"},"content":"  String id;"},{"lineNumber":14,"author":{"gitId":"Elina Semenko"},"content":"  String name;"},{"lineNumber":15,"author":{"gitId":"Elina Semenko"},"content":"  String description;"},{"lineNumber":16,"author":{"gitId":"Elina Semenko"},"content":"  Boolean isActive;"},{"lineNumber":17,"author":{"gitId":"Elina Semenko"},"content":"  Boolean isHidden;"},{"lineNumber":18,"author":{"gitId":"Elina Semenko"},"content":"  Boolean manageCompetencies;"},{"lineNumber":19,"author":{"gitId":"Elina Semenko"},"content":"  List\u003cString\u003e activities;"},{"lineNumber":20,"author":{"gitId":"Elina Semenko"},"content":"  List\u003cString\u003e preferences;"},{"lineNumber":21,"author":{"gitId":"Elina Semenko"},"content":"  List\u003cString\u003e competences;"},{"lineNumber":22,"author":{"gitId":"Elina Semenko"},"content":"}"}],"authorContributionMap":{"Elina Semenko":22}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/domain/dto/department/UpdateDepartmentDTO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khrystyna Boiko"},"content":"package edu.kmaooad.domain.dto.department;"},{"lineNumber":2,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":3,"author":{"gitId":"Khrystyna Boiko"},"content":"import lombok.Builder;"},{"lineNumber":4,"author":{"gitId":"Khrystyna Boiko"},"content":"import lombok.Value;"},{"lineNumber":5,"author":{"gitId":"Khrystyna Boiko"},"content":"import lombok.extern.jackson.Jacksonized;"},{"lineNumber":6,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":7,"author":{"gitId":"Khrystyna Boiko"},"content":"@Value"},{"lineNumber":8,"author":{"gitId":"Khrystyna Boiko"},"content":"@Builder"},{"lineNumber":9,"author":{"gitId":"Khrystyna Boiko"},"content":"@Jacksonized"},{"lineNumber":10,"author":{"gitId":"Khrystyna Boiko"},"content":"public class UpdateDepartmentDTO {"},{"lineNumber":11,"author":{"gitId":"Khrystyna Boiko"},"content":"  String id;"},{"lineNumber":12,"author":{"gitId":"Khrystyna Boiko"},"content":"  String name;"},{"lineNumber":13,"author":{"gitId":"Khrystyna Boiko"},"content":"  Boolean isHiring;"},{"lineNumber":14,"author":{"gitId":"Khrystyna Boiko"},"content":"  String orgId;"},{"lineNumber":15,"author":{"gitId":"Khrystyna Boiko"},"content":"}"}],"authorContributionMap":{"Khrystyna Boiko":15}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/domain/dto/job/AddJobDTO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.domain.dto.job;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import lombok.Builder;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import lombok.Value;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import lombok.extern.jackson.Jacksonized;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"@Value"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@Builder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@Jacksonized"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddJobDTO {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"  String title;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  String description;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  List\u003cString\u003e activities;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  List\u003cString\u003e competences;"},{"lineNumber":17,"author":{"gitId":"Khrystyna Boiko"},"content":"  String depId;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Khrystyna Boiko":1,"-":17}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/domain/dto/job/UpdateJobDTO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khrystyna Boiko"},"content":"package edu.kmaooad.domain.dto.job;"},{"lineNumber":2,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"Khrystyna Boiko"},"content":"import lombok.Builder;"},{"lineNumber":5,"author":{"gitId":"Khrystyna Boiko"},"content":"import lombok.Value;"},{"lineNumber":6,"author":{"gitId":"Khrystyna Boiko"},"content":"import lombok.extern.jackson.Jacksonized;"},{"lineNumber":7,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":8,"author":{"gitId":"Khrystyna Boiko"},"content":"@Value"},{"lineNumber":9,"author":{"gitId":"Khrystyna Boiko"},"content":"@Builder"},{"lineNumber":10,"author":{"gitId":"Khrystyna Boiko"},"content":"@Jacksonized"},{"lineNumber":11,"author":{"gitId":"Khrystyna Boiko"},"content":"public class UpdateJobDTO {"},{"lineNumber":12,"author":{"gitId":"Khrystyna Boiko"},"content":"  String id;"},{"lineNumber":13,"author":{"gitId":"Khrystyna Boiko"},"content":"  String title;"},{"lineNumber":14,"author":{"gitId":"Khrystyna Boiko"},"content":"  String description;"},{"lineNumber":15,"author":{"gitId":"Khrystyna Boiko"},"content":"  Boolean isActive;"},{"lineNumber":16,"author":{"gitId":"Khrystyna Boiko"},"content":"  List\u003cString\u003e activities;"},{"lineNumber":17,"author":{"gitId":"Khrystyna Boiko"},"content":"  List\u003cString\u003e competences;"},{"lineNumber":18,"author":{"gitId":"Khrystyna Boiko"},"content":"  String depId;"},{"lineNumber":19,"author":{"gitId":"Khrystyna Boiko"},"content":"}"}],"authorContributionMap":{"Victor":1,"Khrystyna Boiko":18}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/domain/mapper/CVMapper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elina Semenko"},"content":"package edu.kmaooad.domain.mapper;"},{"lineNumber":2,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":3,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.domain.dto.cv.AddCVDTO;"},{"lineNumber":4,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.domain.dto.cv.UpdateCVDTO;"},{"lineNumber":5,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.domain.model.CV;"},{"lineNumber":6,"author":{"gitId":"Elina Semenko"},"content":"import org.mapstruct.Mapper;"},{"lineNumber":7,"author":{"gitId":"Elina Semenko"},"content":"import org.mapstruct.Mapping;"},{"lineNumber":8,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":9,"author":{"gitId":"Elina Semenko"},"content":"@Mapper(componentModel \u003d \"spring\")"},{"lineNumber":10,"author":{"gitId":"Elina Semenko"},"content":"public interface CVMapper {"},{"lineNumber":11,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":12,"author":{"gitId":"Elina Semenko"},"content":"  @Mapping(target \u003d \"name\", source \u003d \"name\")"},{"lineNumber":13,"author":{"gitId":"Elina Semenko"},"content":"  @Mapping(target \u003d \"description\", source \u003d \"description\")"},{"lineNumber":14,"author":{"gitId":"Elina Semenko"},"content":"  @Mapping(target \u003d \"isActive\", source \u003d \"isActive\")"},{"lineNumber":15,"author":{"gitId":"Elina Semenko"},"content":"  @Mapping(target \u003d \"isHidden\", source \u003d \"isHidden\")"},{"lineNumber":16,"author":{"gitId":"Elina Semenko"},"content":"  @Mapping(target \u003d \"activities\", source \u003d \"activities\")"},{"lineNumber":17,"author":{"gitId":"Elina Semenko"},"content":"  @Mapping(target \u003d \"competences\", source \u003d \"competences\")"},{"lineNumber":18,"author":{"gitId":"Elina Semenko"},"content":"  @Mapping(target \u003d \"preferences\", source \u003d \"preferences\")"},{"lineNumber":19,"author":{"gitId":"Elina Semenko"},"content":"  @Mapping(target \u003d \"manageCompetencies\", source \u003d \"manageCompetencies\")"},{"lineNumber":20,"author":{"gitId":"Elina Semenko"},"content":"  CV toCV(AddCVDTO addCVDTO);"},{"lineNumber":21,"author":{"gitId":"Victor"},"content":""},{"lineNumber":22,"author":{"gitId":"Elina Semenko"},"content":"  @Mapping(target \u003d \"id\", source \u003d \"id\")"},{"lineNumber":23,"author":{"gitId":"Elina Semenko"},"content":"  @Mapping(target \u003d \"name\", source \u003d \"name\")"},{"lineNumber":24,"author":{"gitId":"Elina Semenko"},"content":"  @Mapping(target \u003d \"description\", source \u003d \"description\")"},{"lineNumber":25,"author":{"gitId":"Elina Semenko"},"content":"  @Mapping(target \u003d \"isActive\", source \u003d \"isActive\")"},{"lineNumber":26,"author":{"gitId":"Elina Semenko"},"content":"  @Mapping(target \u003d \"isHidden\", source \u003d \"isHidden\")"},{"lineNumber":27,"author":{"gitId":"Elina Semenko"},"content":"  @Mapping(target \u003d \"activities\", source \u003d \"activities\")"},{"lineNumber":28,"author":{"gitId":"Elina Semenko"},"content":"  @Mapping(target \u003d \"competences\", source \u003d \"competences\")"},{"lineNumber":29,"author":{"gitId":"Elina Semenko"},"content":"  @Mapping(target \u003d \"preferences\", source \u003d \"preferences\")"},{"lineNumber":30,"author":{"gitId":"Elina Semenko"},"content":"  @Mapping(target \u003d \"manageCompetencies\", source \u003d \"manageCompetencies\")"},{"lineNumber":31,"author":{"gitId":"Elina Semenko"},"content":"  CV toCV(UpdateCVDTO updateCVDTO);"},{"lineNumber":32,"author":{"gitId":"Elina Semenko"},"content":"}"}],"authorContributionMap":{"Elina Semenko":31,"Victor":1}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/domain/mapper/DepartmentMapper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khrystyna Boiko"},"content":"package edu.kmaooad.domain.mapper;"},{"lineNumber":2,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":3,"author":{"gitId":"Khrystyna Boiko"},"content":"import edu.kmaooad.domain.dto.department.UpdateDepartmentDTO;"},{"lineNumber":4,"author":{"gitId":"Khrystyna Boiko"},"content":"import edu.kmaooad.domain.model.Department;"},{"lineNumber":5,"author":{"gitId":"Khrystyna Boiko"},"content":"import org.mapstruct.Mapper;"},{"lineNumber":6,"author":{"gitId":"Khrystyna Boiko"},"content":"import org.mapstruct.Mapping;"},{"lineNumber":7,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":8,"author":{"gitId":"Khrystyna Boiko"},"content":"@Mapper(componentModel \u003d \"spring\")"},{"lineNumber":9,"author":{"gitId":"Khrystyna Boiko"},"content":"public interface DepartmentMapper {"},{"lineNumber":10,"author":{"gitId":"Khrystyna Boiko"},"content":"  @Mapping(target \u003d \"id\", source \u003d \"id\")"},{"lineNumber":11,"author":{"gitId":"Khrystyna Boiko"},"content":"  @Mapping(target \u003d \"name\", source \u003d \"name\")"},{"lineNumber":12,"author":{"gitId":"Khrystyna Boiko"},"content":"  @Mapping(target \u003d \"isHiring\", source \u003d \"isHiring\")"},{"lineNumber":13,"author":{"gitId":"Khrystyna Boiko"},"content":"  @Mapping(target \u003d \"orgId\", source \u003d \"orgId\")"},{"lineNumber":14,"author":{"gitId":"Khrystyna Boiko"},"content":"  Department toDepartment(UpdateDepartmentDTO updateDepartmentDTO);"},{"lineNumber":15,"author":{"gitId":"Khrystyna Boiko"},"content":"}"}],"authorContributionMap":{"Khrystyna Boiko":15}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/domain/mapper/JobMapper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.domain.mapper;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import edu.kmaooad.domain.dto.job.AddJobDTO;"},{"lineNumber":4,"author":{"gitId":"Khrystyna Boiko"},"content":"import edu.kmaooad.domain.dto.job.UpdateJobDTO;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import edu.kmaooad.domain.model.Job;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.mapstruct.Mapper;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.mapstruct.Mapping;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"@Mapper(componentModel \u003d \"spring\")"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface JobMapper {"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"  @Mapping(target \u003d \"title\", source \u003d \"title\")"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  @Mapping(target \u003d \"description\", source \u003d \"description\")"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  @Mapping(target \u003d \"isActive\", constant \u003d \"true\")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  @Mapping(target \u003d \"activities\", source \u003d \"activities\")"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  @Mapping(target \u003d \"competences\", source \u003d \"competences\")"},{"lineNumber":17,"author":{"gitId":"Khrystyna Boiko"},"content":"  @Mapping(target \u003d \"depId\", source \u003d \"depId\")"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  Job toJob(AddJobDTO addJobDTO);"},{"lineNumber":19,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":20,"author":{"gitId":"Khrystyna Boiko"},"content":"  @Mapping(target \u003d \"id\", source \u003d \"id\")"},{"lineNumber":21,"author":{"gitId":"Khrystyna Boiko"},"content":"  @Mapping(target \u003d \"title\", source \u003d \"title\")"},{"lineNumber":22,"author":{"gitId":"Khrystyna Boiko"},"content":"  @Mapping(target \u003d \"description\", source \u003d \"description\")"},{"lineNumber":23,"author":{"gitId":"Khrystyna Boiko"},"content":"  @Mapping(target \u003d \"isActive\", source \u003d \"isActive\")"},{"lineNumber":24,"author":{"gitId":"Khrystyna Boiko"},"content":"  @Mapping(target \u003d \"activities\", source \u003d \"activities\")"},{"lineNumber":25,"author":{"gitId":"Khrystyna Boiko"},"content":"  @Mapping(target \u003d \"competences\", source \u003d \"competences\")"},{"lineNumber":26,"author":{"gitId":"Khrystyna Boiko"},"content":"  @Mapping(target \u003d \"depId\", source \u003d \"depId\")"},{"lineNumber":27,"author":{"gitId":"Khrystyna Boiko"},"content":"  Job toJob(UpdateJobDTO updateJobDTO);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Khrystyna Boiko":11,"-":17}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/domain/mapper/UserRequestMapper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.domain.mapper;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.web.request.UserRequest;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import java.util.Objects;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"import java.util.Optional;"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"import org.mapstruct.Mapper;"},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"import org.mapstruct.Mapping;"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"import org.telegram.telegrambots.meta.api.objects.Message;"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"import org.telegram.telegrambots.meta.api.objects.Update;"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":""},{"lineNumber":11,"author":{"gitId":"Victor"},"content":"@Mapper("},{"lineNumber":12,"author":{"gitId":"Victor"},"content":"    componentModel \u003d \"spring\","},{"lineNumber":13,"author":{"gitId":"Victor"},"content":"    imports \u003d {Objects.class, Optional.class, Message.class})"},{"lineNumber":14,"author":{"gitId":"Victor"},"content":"public interface UserRequestMapper {"},{"lineNumber":15,"author":{"gitId":"Victor"},"content":""},{"lineNumber":16,"author":{"gitId":"Victor"},"content":"  @Mapping("},{"lineNumber":17,"author":{"gitId":"Victor"},"content":"      target \u003d \"chatId\","},{"lineNumber":18,"author":{"gitId":"Victor"},"content":"      expression \u003d"},{"lineNumber":19,"author":{"gitId":"Victor"},"content":"          \"java(Optional.ofNullable(update.getMessage()).map(Message::getChatId).orElse(null))\")"},{"lineNumber":20,"author":{"gitId":"Victor"},"content":"  @Mapping("},{"lineNumber":21,"author":{"gitId":"Victor"},"content":"      target \u003d \"text\","},{"lineNumber":22,"author":{"gitId":"Victor"},"content":"      expression \u003d"},{"lineNumber":23,"author":{"gitId":"Victor"},"content":"          \"java(Optional.ofNullable(update.getMessage()).map(Message::getText).orElse(null))\")"},{"lineNumber":24,"author":{"gitId":"Victor"},"content":"  @Mapping("},{"lineNumber":25,"author":{"gitId":"Victor"},"content":"      target \u003d \"isCommand\","},{"lineNumber":26,"author":{"gitId":"Victor"},"content":"      expression \u003d \"java(Objects.nonNull(update.getMessage()) \u0026\u0026 update.getMessage().isCommand())\")"},{"lineNumber":27,"author":{"gitId":"Victor"},"content":"  UserRequest toUserRequest(Update update);"},{"lineNumber":28,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":28}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/domain/model/CV.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elina Semenko"},"content":"package edu.kmaooad.domain.model;"},{"lineNumber":2,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":3,"author":{"gitId":"Elina Semenko"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"Elina Semenko"},"content":"import lombok.Builder;"},{"lineNumber":5,"author":{"gitId":"Elina Semenko"},"content":"import lombok.Value;"},{"lineNumber":6,"author":{"gitId":"Elina Semenko"},"content":"import lombok.extern.jackson.Jacksonized;"},{"lineNumber":7,"author":{"gitId":"Elina Semenko"},"content":"import org.springframework.data.annotation.Id;"},{"lineNumber":8,"author":{"gitId":"Elina Semenko"},"content":"import org.springframework.data.mongodb.core.mapping.Document;"},{"lineNumber":9,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":10,"author":{"gitId":"Elina Semenko"},"content":"@Value"},{"lineNumber":11,"author":{"gitId":"Elina Semenko"},"content":"@Builder"},{"lineNumber":12,"author":{"gitId":"Elina Semenko"},"content":"@Jacksonized"},{"lineNumber":13,"author":{"gitId":"Elina Semenko"},"content":"@Document(\"cvs\")"},{"lineNumber":14,"author":{"gitId":"Elina Semenko"},"content":"public class CV {"},{"lineNumber":15,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":16,"author":{"gitId":"Elina Semenko"},"content":"  @Id String id;"},{"lineNumber":17,"author":{"gitId":"Elina Semenko"},"content":"  String name;"},{"lineNumber":18,"author":{"gitId":"Elina Semenko"},"content":"  String description;"},{"lineNumber":19,"author":{"gitId":"Elina Semenko"},"content":"  Boolean isActive; // Open for hires"},{"lineNumber":20,"author":{"gitId":"Elina Semenko"},"content":"  Boolean isHidden; // hidden/shown"},{"lineNumber":21,"author":{"gitId":"Elina Semenko"},"content":"  Boolean manageCompetencies;"},{"lineNumber":22,"author":{"gitId":"Elina Semenko"},"content":"  List\u003cString\u003e activities;"},{"lineNumber":23,"author":{"gitId":"Elina Semenko"},"content":"  List\u003cString\u003e preferences;"},{"lineNumber":24,"author":{"gitId":"Elina Semenko"},"content":"  List\u003cString\u003e competences;"},{"lineNumber":25,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":26,"author":{"gitId":"Elina Semenko"},"content":"  public CV("},{"lineNumber":27,"author":{"gitId":"Elina Semenko"},"content":"      String id,"},{"lineNumber":28,"author":{"gitId":"Elina Semenko"},"content":"      String name,"},{"lineNumber":29,"author":{"gitId":"Elina Semenko"},"content":"      String description,"},{"lineNumber":30,"author":{"gitId":"Elina Semenko"},"content":"      Boolean isActive,"},{"lineNumber":31,"author":{"gitId":"Elina Semenko"},"content":"      Boolean isHidden,"},{"lineNumber":32,"author":{"gitId":"Elina Semenko"},"content":"      Boolean manageCompetencies,"},{"lineNumber":33,"author":{"gitId":"Elina Semenko"},"content":"      List\u003cString\u003e activities,"},{"lineNumber":34,"author":{"gitId":"Elina Semenko"},"content":"      List\u003cString\u003e preferences,"},{"lineNumber":35,"author":{"gitId":"Victor"},"content":"      List\u003cString\u003e competences) {"},{"lineNumber":36,"author":{"gitId":"Elina Semenko"},"content":"    this.id \u003d id;"},{"lineNumber":37,"author":{"gitId":"Elina Semenko"},"content":"    this.name \u003d name;"},{"lineNumber":38,"author":{"gitId":"Elina Semenko"},"content":"    this.description \u003d description;"},{"lineNumber":39,"author":{"gitId":"Elina Semenko"},"content":"    this.isActive \u003d isActive;"},{"lineNumber":40,"author":{"gitId":"Elina Semenko"},"content":"    this.isHidden \u003d isHidden;"},{"lineNumber":41,"author":{"gitId":"Elina Semenko"},"content":"    this.manageCompetencies \u003d manageCompetencies;"},{"lineNumber":42,"author":{"gitId":"Elina Semenko"},"content":"    this.activities \u003d activities;"},{"lineNumber":43,"author":{"gitId":"Elina Semenko"},"content":"    this.preferences \u003d preferences;"},{"lineNumber":44,"author":{"gitId":"Elina Semenko"},"content":"    this.competences \u003d competences;"},{"lineNumber":45,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":46,"author":{"gitId":"Elina Semenko"},"content":"}"}],"authorContributionMap":{"Elina Semenko":45,"Victor":1}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/domain/model/CompetenceCenter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elina Semenko"},"content":"package edu.kmaooad.domain.model;"},{"lineNumber":2,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"Elina Semenko"},"content":"import lombok.Builder;"},{"lineNumber":6,"author":{"gitId":"Elina Semenko"},"content":"import lombok.Value;"},{"lineNumber":7,"author":{"gitId":"Elina Semenko"},"content":"import lombok.extern.jackson.Jacksonized;"},{"lineNumber":8,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":9,"author":{"gitId":"Elina Semenko"},"content":"@Value"},{"lineNumber":10,"author":{"gitId":"Elina Semenko"},"content":"@Builder"},{"lineNumber":11,"author":{"gitId":"Elina Semenko"},"content":"@Jacksonized"},{"lineNumber":12,"author":{"gitId":"Elina Semenko"},"content":"public class CompetenceCenter {"},{"lineNumber":13,"author":{"gitId":"Elina Semenko"},"content":"  public CompetenceCenter() {}"},{"lineNumber":14,"author":{"gitId":"Victor"},"content":""},{"lineNumber":15,"author":{"gitId":"Elina Semenko"},"content":"  public List\u003cString\u003e generateCompetencies(List\u003cString\u003e activities) {"},{"lineNumber":16,"author":{"gitId":"Elina Semenko"},"content":"    List\u003cString\u003e competencies \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"Elina Semenko"},"content":"    for (String activity : activities) {"},{"lineNumber":18,"author":{"gitId":"Elina Semenko"},"content":"      switch (activity) {"},{"lineNumber":19,"author":{"gitId":"Elina Semenko"},"content":"        case \"Backend\":"},{"lineNumber":20,"author":{"gitId":"Elina Semenko"},"content":"          competencies.add(\"Java\");"},{"lineNumber":21,"author":{"gitId":"Elina Semenko"},"content":"          break;"},{"lineNumber":22,"author":{"gitId":"Elina Semenko"},"content":"        case \"iOS\":"},{"lineNumber":23,"author":{"gitId":"Elina Semenko"},"content":"          competencies.add(\"Swift\");"},{"lineNumber":24,"author":{"gitId":"Elina Semenko"},"content":"          break;"},{"lineNumber":25,"author":{"gitId":"Elina Semenko"},"content":"        case \"Android\":"},{"lineNumber":26,"author":{"gitId":"Elina Semenko"},"content":"          competencies.add(\"Kotlin\");"},{"lineNumber":27,"author":{"gitId":"Elina Semenko"},"content":"          break;"},{"lineNumber":28,"author":{"gitId":"Elina Semenko"},"content":"      }"},{"lineNumber":29,"author":{"gitId":"Elina Semenko"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":31,"author":{"gitId":"Elina Semenko"},"content":"    if (competencies.isEmpty()) competencies.add(\"Something important\");"},{"lineNumber":32,"author":{"gitId":"Elina Semenko"},"content":"    return competencies;"},{"lineNumber":33,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":34,"author":{"gitId":"Elina Semenko"},"content":"}"}],"authorContributionMap":{"Elina Semenko":31,"Victor":3}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/domain/model/Department.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khrystyna Boiko"},"content":"package edu.kmaooad.domain.model;"},{"lineNumber":2,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":3,"author":{"gitId":"Khrystyna Boiko"},"content":"import lombok.Builder;"},{"lineNumber":4,"author":{"gitId":"Khrystyna Boiko"},"content":"import lombok.Value;"},{"lineNumber":5,"author":{"gitId":"Khrystyna Boiko"},"content":"import lombok.extern.jackson.Jacksonized;"},{"lineNumber":6,"author":{"gitId":"Khrystyna Boiko"},"content":"import org.springframework.data.annotation.Id;"},{"lineNumber":7,"author":{"gitId":"Khrystyna Boiko"},"content":"import org.springframework.data.mongodb.core.mapping.Document;"},{"lineNumber":8,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":9,"author":{"gitId":"Khrystyna Boiko"},"content":"@Value"},{"lineNumber":10,"author":{"gitId":"Khrystyna Boiko"},"content":"@Builder"},{"lineNumber":11,"author":{"gitId":"Khrystyna Boiko"},"content":"@Jacksonized"},{"lineNumber":12,"author":{"gitId":"Khrystyna Boiko"},"content":"@Document(\"departments\")"},{"lineNumber":13,"author":{"gitId":"Khrystyna Boiko"},"content":"public class Department {"},{"lineNumber":14,"author":{"gitId":"Khrystyna Boiko"},"content":"  @Id String id;"},{"lineNumber":15,"author":{"gitId":"Khrystyna Boiko"},"content":"  String name;"},{"lineNumber":16,"author":{"gitId":"Khrystyna Boiko"},"content":"  Boolean isHiring;"},{"lineNumber":17,"author":{"gitId":"Khrystyna Boiko"},"content":"  String orgId;"},{"lineNumber":18,"author":{"gitId":"Khrystyna Boiko"},"content":"}"}],"authorContributionMap":{"Khrystyna Boiko":18}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/domain/model/Job.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.domain.model;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import lombok.Builder;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import lombok.Value;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import lombok.extern.jackson.Jacksonized;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.springframework.data.annotation.Id;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.springframework.data.mongodb.core.mapping.Document;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"@Value"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@Builder"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@Jacksonized"},{"lineNumber":13,"author":{"gitId":"-"},"content":"@Document(\"jobs\")"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Job {"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"  @Id String id;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"  String title;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  String description;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  Boolean isActive;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  List\u003cString\u003e activities;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  List\u003cString\u003e competences;"},{"lineNumber":23,"author":{"gitId":"Khrystyna Boiko"},"content":"  String depId;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Khrystyna Boiko":1,"-":23}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/domain/model/JobPreference.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elina Semenko"},"content":"package edu.kmaooad.domain.model;"},{"lineNumber":2,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":3,"author":{"gitId":"Elina Semenko"},"content":"import lombok.Builder;"},{"lineNumber":4,"author":{"gitId":"Elina Semenko"},"content":"import lombok.Value;"},{"lineNumber":5,"author":{"gitId":"Elina Semenko"},"content":"import lombok.extern.jackson.Jacksonized;"},{"lineNumber":6,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":7,"author":{"gitId":"Elina Semenko"},"content":"@Value"},{"lineNumber":8,"author":{"gitId":"Elina Semenko"},"content":"@Builder"},{"lineNumber":9,"author":{"gitId":"Elina Semenko"},"content":"@Jacksonized"},{"lineNumber":10,"author":{"gitId":"Elina Semenko"},"content":"public class JobPreference {}"}],"authorContributionMap":{"Elina Semenko":10}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/domain/model/Organization.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khrystyna Boiko"},"content":"package edu.kmaooad.domain.model;"},{"lineNumber":2,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":3,"author":{"gitId":"Khrystyna Boiko"},"content":"import lombok.Builder;"},{"lineNumber":4,"author":{"gitId":"Khrystyna Boiko"},"content":"import lombok.Value;"},{"lineNumber":5,"author":{"gitId":"Khrystyna Boiko"},"content":"import lombok.extern.jackson.Jacksonized;"},{"lineNumber":6,"author":{"gitId":"Khrystyna Boiko"},"content":"import org.springframework.data.annotation.Id;"},{"lineNumber":7,"author":{"gitId":"Khrystyna Boiko"},"content":"import org.springframework.data.mongodb.core.mapping.Document;"},{"lineNumber":8,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":9,"author":{"gitId":"Khrystyna Boiko"},"content":"@Value"},{"lineNumber":10,"author":{"gitId":"Khrystyna Boiko"},"content":"@Builder"},{"lineNumber":11,"author":{"gitId":"Khrystyna Boiko"},"content":"@Jacksonized"},{"lineNumber":12,"author":{"gitId":"Khrystyna Boiko"},"content":"@Document(\"organizations\")"},{"lineNumber":13,"author":{"gitId":"Khrystyna Boiko"},"content":"public class Organization {"},{"lineNumber":14,"author":{"gitId":"Khrystyna Boiko"},"content":"  @Id String id;"},{"lineNumber":15,"author":{"gitId":"Khrystyna Boiko"},"content":"  String name;"},{"lineNumber":16,"author":{"gitId":"Khrystyna Boiko"},"content":"}"}],"authorContributionMap":{"Khrystyna Boiko":16}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/domain/model/UserState.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.domain.model;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.dispatch.Command;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.handler.CommandState;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"import java.util.HashMap;"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"import java.util.Map;"},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"import java.util.Objects;"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"import lombok.*;"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":""},{"lineNumber":10,"author":{"gitId":"Victor"},"content":"@Getter"},{"lineNumber":11,"author":{"gitId":"Victor"},"content":"@Setter"},{"lineNumber":12,"author":{"gitId":"Victor"},"content":"public class UserState {"},{"lineNumber":13,"author":{"gitId":"Victor"},"content":""},{"lineNumber":14,"author":{"gitId":"Victor"},"content":"  private final Long chatId;"},{"lineNumber":15,"author":{"gitId":"Victor"},"content":"  private Command currentCommand;"},{"lineNumber":16,"author":{"gitId":"Victor"},"content":"  private CommandState commandState;"},{"lineNumber":17,"author":{"gitId":"Victor"},"content":"  private final Map\u003cString, String\u003e inputs;"},{"lineNumber":18,"author":{"gitId":"Victor"},"content":""},{"lineNumber":19,"author":{"gitId":"Victor"},"content":"  public UserState("},{"lineNumber":20,"author":{"gitId":"Victor"},"content":"      Long chatId, Command currentCommand, CommandState commandState, Map\u003cString, String\u003e inputs) {"},{"lineNumber":21,"author":{"gitId":"Victor"},"content":"    this.chatId \u003d chatId;"},{"lineNumber":22,"author":{"gitId":"Victor"},"content":"    this.currentCommand \u003d currentCommand;"},{"lineNumber":23,"author":{"gitId":"Victor"},"content":"    this.commandState \u003d commandState;"},{"lineNumber":24,"author":{"gitId":"Victor"},"content":"    this.inputs \u003d inputs;"},{"lineNumber":25,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":26,"author":{"gitId":"Victor"},"content":""},{"lineNumber":27,"author":{"gitId":"Victor"},"content":"  public static UserState newEmptyState(Long chatId) {"},{"lineNumber":28,"author":{"gitId":"Victor"},"content":"    return new UserState(chatId, null, null, new HashMap\u003c\u003e());"},{"lineNumber":29,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":30,"author":{"gitId":"Victor"},"content":""},{"lineNumber":31,"author":{"gitId":"Victor"},"content":"  public void addInput(String property, String input) {"},{"lineNumber":32,"author":{"gitId":"Victor"},"content":"    inputs.put(property, input);"},{"lineNumber":33,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":34,"author":{"gitId":"Victor"},"content":""},{"lineNumber":35,"author":{"gitId":"Victor"},"content":"  public void clear() {"},{"lineNumber":36,"author":{"gitId":"Victor"},"content":"    this.inputs.clear();"},{"lineNumber":37,"author":{"gitId":"Victor"},"content":"    this.currentCommand \u003d null;"},{"lineNumber":38,"author":{"gitId":"Victor"},"content":"    this.commandState \u003d null;"},{"lineNumber":39,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":40,"author":{"gitId":"Victor"},"content":""},{"lineNumber":41,"author":{"gitId":"Victor"},"content":"  public boolean isEmpty() {"},{"lineNumber":42,"author":{"gitId":"Victor"},"content":"    return Objects.isNull(commandState) || Objects.isNull(currentCommand);"},{"lineNumber":43,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":44,"author":{"gitId":"Victor"},"content":""},{"lineNumber":45,"author":{"gitId":"Victor"},"content":"  @Override"},{"lineNumber":46,"author":{"gitId":"Victor"},"content":"  public boolean equals(Object o) {"},{"lineNumber":47,"author":{"gitId":"Victor"},"content":"    if (!(o instanceof UserState)) {"},{"lineNumber":48,"author":{"gitId":"Victor"},"content":"      return false;"},{"lineNumber":49,"author":{"gitId":"Victor"},"content":"    } else {"},{"lineNumber":50,"author":{"gitId":"Victor"},"content":"      final UserState other \u003d (UserState) o;"},{"lineNumber":51,"author":{"gitId":"Victor"},"content":"      return chatId.equals(other.getChatId());"},{"lineNumber":52,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":54,"author":{"gitId":"Victor"},"content":""},{"lineNumber":55,"author":{"gitId":"Victor"},"content":"  @Override"},{"lineNumber":56,"author":{"gitId":"Victor"},"content":"  public int hashCode() {"},{"lineNumber":57,"author":{"gitId":"Victor"},"content":"    return Objects.hashCode(chatId);"},{"lineNumber":58,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":59,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":59}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.exception;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"public class InvalidCommandException extends RuntimeException {"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":""},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"  public InvalidCommandException(String message) {"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"    super(message);"},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":8}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/exception/InvalidRequestBodyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.exception;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"public class InvalidRequestBodyException extends RuntimeException {"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":""},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"  public InvalidRequestBodyException(String message) {"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"    super(message);"},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":8}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/repository/CVRepository.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elina Semenko"},"content":"package edu.kmaooad.repository;"},{"lineNumber":2,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":3,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.domain.model.CV;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import java.util.Optional;"},{"lineNumber":5,"author":{"gitId":"Elina Semenko"},"content":"import org.springframework.data.mongodb.repository.MongoRepository;"},{"lineNumber":6,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"public interface CVRepository extends MongoRepository\u003cCV, String\u003e {"},{"lineNumber":8,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"  Optional\u003cCV\u003e findByName(String name);"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Elina Semenko":6,"Victor":4}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/repository/DepartmentRepository.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khrystyna Boiko"},"content":"package edu.kmaooad.repository;"},{"lineNumber":2,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":3,"author":{"gitId":"Khrystyna Boiko"},"content":"import edu.kmaooad.domain.model.Department;"},{"lineNumber":4,"author":{"gitId":"Khrystyna Boiko"},"content":"import org.springframework.data.mongodb.repository.MongoRepository;"},{"lineNumber":5,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":6,"author":{"gitId":"Khrystyna Boiko"},"content":"public interface DepartmentRepository extends MongoRepository\u003cDepartment, String\u003e {}"}],"authorContributionMap":{"Khrystyna Boiko":6}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/repository/OrganizationRepository.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khrystyna Boiko"},"content":"package edu.kmaooad.repository;"},{"lineNumber":2,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":3,"author":{"gitId":"Khrystyna Boiko"},"content":"import edu.kmaooad.domain.model.Organization;"},{"lineNumber":4,"author":{"gitId":"Khrystyna Boiko"},"content":"import org.springframework.data.mongodb.repository.MongoRepository;"},{"lineNumber":5,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":6,"author":{"gitId":"Khrystyna Boiko"},"content":"public interface OrganizationRepository extends MongoRepository\u003cOrganization, String\u003e {}"}],"authorContributionMap":{"Khrystyna Boiko":6}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/service/CVService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elina Semenko"},"content":"package edu.kmaooad.service;"},{"lineNumber":2,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":3,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.domain.dto.cv.AddCVDTO;"},{"lineNumber":4,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.domain.dto.cv.UpdateCVDTO;"},{"lineNumber":5,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.domain.model.CV;"},{"lineNumber":6,"author":{"gitId":"Elina Semenko"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"Elina Semenko"},"content":"import java.util.Optional;"},{"lineNumber":8,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":9,"author":{"gitId":"Elina Semenko"},"content":"public interface CVService {"},{"lineNumber":10,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":11,"author":{"gitId":"Elina Semenko"},"content":"  Optional\u003cCV\u003e getCVById(String cvId);"},{"lineNumber":12,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":13,"author":{"gitId":"Elina Semenko"},"content":"  Optional\u003cCV\u003e getCVByName(String fullName);"},{"lineNumber":14,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":15,"author":{"gitId":"Elina Semenko"},"content":"  CV addCV(AddCVDTO addCVDTO);"},{"lineNumber":16,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":17,"author":{"gitId":"Elina Semenko"},"content":"  CV updateCV(UpdateCVDTO updateCVDTO);"},{"lineNumber":18,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":19,"author":{"gitId":"Elina Semenko"},"content":"  boolean deleteCV(String jobId);"},{"lineNumber":20,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":21,"author":{"gitId":"Elina Semenko"},"content":"  List\u003cCV\u003e getAllCVs();"},{"lineNumber":22,"author":{"gitId":"Elina Semenko"},"content":"}"}],"authorContributionMap":{"Elina Semenko":22}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/service/CVServiceImpl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elina Semenko"},"content":"package edu.kmaooad.service;"},{"lineNumber":2,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":3,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.domain.dto.cv.AddCVDTO;"},{"lineNumber":4,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.domain.dto.cv.UpdateCVDTO;"},{"lineNumber":5,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.domain.mapper.CVMapper;"},{"lineNumber":6,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.domain.model.CV;"},{"lineNumber":7,"author":{"gitId":"Elina Semenko"},"content":"import edu.kmaooad.repository.CVRepository;"},{"lineNumber":8,"author":{"gitId":"Elina Semenko"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"Elina Semenko"},"content":"import java.util.Optional;"},{"lineNumber":10,"author":{"gitId":"Elina Semenko"},"content":"import lombok.RequiredArgsConstructor;"},{"lineNumber":11,"author":{"gitId":"Elina Semenko"},"content":"import org.springframework.stereotype.Service;"},{"lineNumber":12,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":13,"author":{"gitId":"Elina Semenko"},"content":"@Service"},{"lineNumber":14,"author":{"gitId":"Elina Semenko"},"content":"@RequiredArgsConstructor"},{"lineNumber":15,"author":{"gitId":"Elina Semenko"},"content":"public class CVServiceImpl implements CVService {"},{"lineNumber":16,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":17,"author":{"gitId":"Elina Semenko"},"content":"  private final CVRepository cvRepository;"},{"lineNumber":18,"author":{"gitId":"Elina Semenko"},"content":"  private final CVMapper cvMapper;"},{"lineNumber":19,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":20,"author":{"gitId":"Elina Semenko"},"content":"  @Override"},{"lineNumber":21,"author":{"gitId":"Elina Semenko"},"content":"  public Optional\u003cCV\u003e getCVById(String cvId) {"},{"lineNumber":22,"author":{"gitId":"Elina Semenko"},"content":"    return cvRepository.findById(cvId);"},{"lineNumber":23,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":24,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":25,"author":{"gitId":"Elina Semenko"},"content":"  @Override"},{"lineNumber":26,"author":{"gitId":"Elina Semenko"},"content":"  public Optional\u003cCV\u003e getCVByName(String fullName) {"},{"lineNumber":27,"author":{"gitId":"Victor"},"content":"    return cvRepository.findByName(fullName);"},{"lineNumber":28,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":29,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":30,"author":{"gitId":"Elina Semenko"},"content":"  @Override"},{"lineNumber":31,"author":{"gitId":"Elina Semenko"},"content":"  public CV addCV(AddCVDTO addCVDTO) {"},{"lineNumber":32,"author":{"gitId":"Elina Semenko"},"content":"    final CV cv \u003d cvMapper.toCV(addCVDTO);"},{"lineNumber":33,"author":{"gitId":"Khrystyna Boiko"},"content":"    return cvRepository.save(cv);"},{"lineNumber":34,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":35,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":36,"author":{"gitId":"Elina Semenko"},"content":"  @Override"},{"lineNumber":37,"author":{"gitId":"Elina Semenko"},"content":"  public CV updateCV(UpdateCVDTO updateCVDTO) {"},{"lineNumber":38,"author":{"gitId":"Elina Semenko"},"content":"    final CV cv \u003d cvMapper.toCV(updateCVDTO);"},{"lineNumber":39,"author":{"gitId":"Khrystyna Boiko"},"content":"    return cvRepository.save(cv);"},{"lineNumber":40,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":41,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":42,"author":{"gitId":"Elina Semenko"},"content":"  @Override"},{"lineNumber":43,"author":{"gitId":"Elina Semenko"},"content":"  public boolean deleteCV(String cvID) {"},{"lineNumber":44,"author":{"gitId":"Elina Semenko"},"content":"    cvRepository.deleteById(cvID);"},{"lineNumber":45,"author":{"gitId":"Khrystyna Boiko"},"content":"    return !cvRepository.existsById(cvID);"},{"lineNumber":46,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":47,"author":{"gitId":"Elina Semenko"},"content":""},{"lineNumber":48,"author":{"gitId":"Elina Semenko"},"content":"  @Override"},{"lineNumber":49,"author":{"gitId":"Elina Semenko"},"content":"  public List\u003cCV\u003e getAllCVs() {"},{"lineNumber":50,"author":{"gitId":"Elina Semenko"},"content":"    return cvRepository.findAll();"},{"lineNumber":51,"author":{"gitId":"Elina Semenko"},"content":"  }"},{"lineNumber":52,"author":{"gitId":"Elina Semenko"},"content":"}"}],"authorContributionMap":{"Elina Semenko":48,"Victor":1,"Khrystyna Boiko":3}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/service/DepartmentService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khrystyna Boiko"},"content":"package edu.kmaooad.service;"},{"lineNumber":2,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":3,"author":{"gitId":"Khrystyna Boiko"},"content":"import edu.kmaooad.domain.dto.department.UpdateDepartmentDTO;"},{"lineNumber":4,"author":{"gitId":"Khrystyna Boiko"},"content":"import edu.kmaooad.domain.model.Department;"},{"lineNumber":5,"author":{"gitId":"Khrystyna Boiko"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"Khrystyna Boiko"},"content":"import java.util.Optional;"},{"lineNumber":7,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":8,"author":{"gitId":"Khrystyna Boiko"},"content":"public interface DepartmentService {"},{"lineNumber":9,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":10,"author":{"gitId":"Khrystyna Boiko"},"content":"  Optional\u003cDepartment\u003e getDepartmentById(String depId);"},{"lineNumber":11,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":12,"author":{"gitId":"Khrystyna Boiko"},"content":"  Department updateDepStatus(UpdateDepartmentDTO updateDepartmentDTO);"},{"lineNumber":13,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":14,"author":{"gitId":"Khrystyna Boiko"},"content":"  List\u003cDepartment\u003e getAllDepartments();"},{"lineNumber":15,"author":{"gitId":"Khrystyna Boiko"},"content":"}"}],"authorContributionMap":{"Khrystyna Boiko":15}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/service/DepartmentServiceImpl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khrystyna Boiko"},"content":"package edu.kmaooad.service;"},{"lineNumber":2,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":3,"author":{"gitId":"Khrystyna Boiko"},"content":"import edu.kmaooad.domain.dto.department.UpdateDepartmentDTO;"},{"lineNumber":4,"author":{"gitId":"Khrystyna Boiko"},"content":"import edu.kmaooad.domain.mapper.DepartmentMapper;"},{"lineNumber":5,"author":{"gitId":"Khrystyna Boiko"},"content":"import edu.kmaooad.domain.model.Department;"},{"lineNumber":6,"author":{"gitId":"Khrystyna Boiko"},"content":"import edu.kmaooad.repository.DepartmentRepository;"},{"lineNumber":7,"author":{"gitId":"Khrystyna Boiko"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"Khrystyna Boiko"},"content":"import java.util.Optional;"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"import lombok.RequiredArgsConstructor;"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":"import org.springframework.stereotype.Service;"},{"lineNumber":11,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":12,"author":{"gitId":"Khrystyna Boiko"},"content":"@Service"},{"lineNumber":13,"author":{"gitId":"Khrystyna Boiko"},"content":"@RequiredArgsConstructor"},{"lineNumber":14,"author":{"gitId":"Khrystyna Boiko"},"content":"public class DepartmentServiceImpl implements DepartmentService {"},{"lineNumber":15,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":16,"author":{"gitId":"Khrystyna Boiko"},"content":"  private final DepartmentRepository depRepository;"},{"lineNumber":17,"author":{"gitId":"Khrystyna Boiko"},"content":"  private final DepartmentMapper depMapper;"},{"lineNumber":18,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":19,"author":{"gitId":"Khrystyna Boiko"},"content":"  @Override"},{"lineNumber":20,"author":{"gitId":"Khrystyna Boiko"},"content":"  public Optional\u003cDepartment\u003e getDepartmentById(String depId) {"},{"lineNumber":21,"author":{"gitId":"Khrystyna Boiko"},"content":"    return depRepository.findById(depId);"},{"lineNumber":22,"author":{"gitId":"Khrystyna Boiko"},"content":"  }"},{"lineNumber":23,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":24,"author":{"gitId":"Khrystyna Boiko"},"content":"  @Override"},{"lineNumber":25,"author":{"gitId":"Khrystyna Boiko"},"content":"  public Department updateDepStatus(UpdateDepartmentDTO updateDepartmentDTO) {"},{"lineNumber":26,"author":{"gitId":"Khrystyna Boiko"},"content":"    final Department dep \u003d depMapper.toDepartment(updateDepartmentDTO);"},{"lineNumber":27,"author":{"gitId":"Khrystyna Boiko"},"content":"    return depRepository.save(dep);"},{"lineNumber":28,"author":{"gitId":"Khrystyna Boiko"},"content":"  }"},{"lineNumber":29,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":30,"author":{"gitId":"Khrystyna Boiko"},"content":"  @Override"},{"lineNumber":31,"author":{"gitId":"Khrystyna Boiko"},"content":"  public List\u003cDepartment\u003e getAllDepartments() {"},{"lineNumber":32,"author":{"gitId":"Khrystyna Boiko"},"content":"    return depRepository.findAll();"},{"lineNumber":33,"author":{"gitId":"Khrystyna Boiko"},"content":"  }"},{"lineNumber":34,"author":{"gitId":"Khrystyna Boiko"},"content":"}"}],"authorContributionMap":{"Victor":2,"Khrystyna Boiko":32}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/service/JobService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.service;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import edu.kmaooad.domain.dto.job.AddJobDTO;"},{"lineNumber":4,"author":{"gitId":"Khrystyna Boiko"},"content":"import edu.kmaooad.domain.dto.job.UpdateJobDTO;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import edu.kmaooad.domain.model.Job;"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"import java.util.Optional;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface JobService {"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"Victor"},"content":"  List\u003cJob\u003e getAllJobs();"},{"lineNumber":12,"author":{"gitId":"Victor"},"content":""},{"lineNumber":13,"author":{"gitId":"Victor"},"content":"  Optional\u003cJob\u003e getJobById(String jobId);"},{"lineNumber":14,"author":{"gitId":"Victor"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"  Job addJob(AddJobDTO addJobDTO);"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"Khrystyna Boiko"},"content":"  Job updateJob(UpdateJobDTO updateJobDTO);"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"  boolean deleteJob(String jobId);"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Victor":6,"Khrystyna Boiko":2,"-":12}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/service/JobServiceImpl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package edu.kmaooad.service;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import edu.kmaooad.domain.dto.job.AddJobDTO;"},{"lineNumber":4,"author":{"gitId":"Khrystyna Boiko"},"content":"import edu.kmaooad.domain.dto.job.UpdateJobDTO;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import edu.kmaooad.domain.mapper.JobMapper;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import edu.kmaooad.domain.model.Job;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import edu.kmaooad.repository.JobRepository;"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"import java.util.Optional;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import lombok.RequiredArgsConstructor;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.springframework.stereotype.Service;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"@Service"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@RequiredArgsConstructor"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JobServiceImpl implements JobService {"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"  private final JobRepository jobRepository;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  private final JobMapper jobMapper;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"Victor"},"content":"  @Override"},{"lineNumber":21,"author":{"gitId":"Victor"},"content":"  public List\u003cJob\u003e getAllJobs() {"},{"lineNumber":22,"author":{"gitId":"Victor"},"content":"    return jobRepository.findAll();"},{"lineNumber":23,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":24,"author":{"gitId":"Victor"},"content":""},{"lineNumber":25,"author":{"gitId":"Victor"},"content":"  @Override"},{"lineNumber":26,"author":{"gitId":"Victor"},"content":"  public Optional\u003cJob\u003e getJobById(String jobId) {"},{"lineNumber":27,"author":{"gitId":"Victor"},"content":"    return jobRepository.findById(jobId);"},{"lineNumber":28,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":29,"author":{"gitId":"Victor"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  @Override"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  public Job addJob(AddJobDTO addJobDTO) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    final Job job \u003d jobMapper.toJob(addJobDTO);"},{"lineNumber":33,"author":{"gitId":"Victor"},"content":"    return jobRepository.save(job);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"Khrystyna Boiko"},"content":"  @Override"},{"lineNumber":37,"author":{"gitId":"Khrystyna Boiko"},"content":"  public Job updateJob(UpdateJobDTO updateJobDTO) {"},{"lineNumber":38,"author":{"gitId":"Khrystyna Boiko"},"content":"    final Job job \u003d jobMapper.toJob(updateJobDTO);"},{"lineNumber":39,"author":{"gitId":"Victor"},"content":"    return jobRepository.save(job);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"  @Override"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  public boolean deleteJob(String jobId) {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    jobRepository.deleteById(jobId);"},{"lineNumber":45,"author":{"gitId":"Victor"},"content":"    return !jobRepository.existsById(jobId);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Victor":15,"Khrystyna Boiko":4,"-":28}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/service/TelegramService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.service;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboard;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":""},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"public interface TelegramService {"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":""},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"  void sendMessage(Long chatId, String message, ReplyKeyboard replyKeyboard);"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":""},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"  default void sendMessage(Long chatId, String message) {"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":"    sendMessage(chatId, message, null);"},{"lineNumber":11,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":12,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":12}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/service/TelegramServiceImpl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.service;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.telegram.TelegramMessageSender;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import lombok.RequiredArgsConstructor;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"import lombok.extern.slf4j.Slf4j;"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"import org.telegram.telegrambots.meta.api.methods.ParseMode;"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"import org.telegram.telegrambots.meta.api.methods.send.SendMessage;"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboard;"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":"import org.telegram.telegrambots.meta.exceptions.TelegramApiException;"},{"lineNumber":11,"author":{"gitId":"Victor"},"content":""},{"lineNumber":12,"author":{"gitId":"Victor"},"content":"@Component"},{"lineNumber":13,"author":{"gitId":"Victor"},"content":"@RequiredArgsConstructor"},{"lineNumber":14,"author":{"gitId":"Victor"},"content":"@Slf4j"},{"lineNumber":15,"author":{"gitId":"Victor"},"content":"public class TelegramServiceImpl implements TelegramService {"},{"lineNumber":16,"author":{"gitId":"Victor"},"content":""},{"lineNumber":17,"author":{"gitId":"Victor"},"content":"  private final TelegramMessageSender telegramMessageSender;"},{"lineNumber":18,"author":{"gitId":"Victor"},"content":""},{"lineNumber":19,"author":{"gitId":"Victor"},"content":"  @Override"},{"lineNumber":20,"author":{"gitId":"Victor"},"content":"  public void sendMessage(Long chatId, String message, ReplyKeyboard replyKeyboard) {"},{"lineNumber":21,"author":{"gitId":"Victor"},"content":"    final SendMessage sendMessage \u003d"},{"lineNumber":22,"author":{"gitId":"Victor"},"content":"        SendMessage.builder()"},{"lineNumber":23,"author":{"gitId":"Victor"},"content":"            .chatId(chatId)"},{"lineNumber":24,"author":{"gitId":"Victor"},"content":"            .text(message)"},{"lineNumber":25,"author":{"gitId":"Victor"},"content":"            .parseMode(ParseMode.HTML)"},{"lineNumber":26,"author":{"gitId":"Victor"},"content":"            .replyMarkup(replyKeyboard)"},{"lineNumber":27,"author":{"gitId":"Victor"},"content":"            .build();"},{"lineNumber":28,"author":{"gitId":"Victor"},"content":"    try {"},{"lineNumber":29,"author":{"gitId":"Victor"},"content":"      telegramMessageSender.execute(sendMessage);"},{"lineNumber":30,"author":{"gitId":"Victor"},"content":"    } catch (TelegramApiException e) {"},{"lineNumber":31,"author":{"gitId":"Victor"},"content":"      log.error(\"Error while sending message to telegram!\", e);"},{"lineNumber":32,"author":{"gitId":"Victor"},"content":"      throw new RuntimeException(e);"},{"lineNumber":33,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":35,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":35}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/service/UserStateService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.service;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.domain.model.UserState;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":""},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"public interface UserStateService {"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":""},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"  UserState getStateForUser(Long chatId);"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":""},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"  void setStateForUser(Long chatId, UserState userState);"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":10}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/service/UserStateServiceImpl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.service;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.domain.model.UserState;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import java.util.HashMap;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"import java.util.Map;"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"import org.springframework.stereotype.Service;"},{"lineNumber":7,"author":{"gitId":"Victor"},"content":""},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"@Service"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"public class UserStateServiceImpl implements UserStateService {"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":""},{"lineNumber":11,"author":{"gitId":"Victor"},"content":"  private final Map\u003cLong, UserState\u003e userStateMap;"},{"lineNumber":12,"author":{"gitId":"Victor"},"content":""},{"lineNumber":13,"author":{"gitId":"Victor"},"content":"  public UserStateServiceImpl() {"},{"lineNumber":14,"author":{"gitId":"Victor"},"content":"    userStateMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":16,"author":{"gitId":"Victor"},"content":""},{"lineNumber":17,"author":{"gitId":"Victor"},"content":"  @Override"},{"lineNumber":18,"author":{"gitId":"Victor"},"content":"  public UserState getStateForUser(Long chatId) {"},{"lineNumber":19,"author":{"gitId":"Victor"},"content":"    if (!userStateMap.containsKey(chatId)) {"},{"lineNumber":20,"author":{"gitId":"Victor"},"content":"      userStateMap.put(chatId, UserState.newEmptyState(chatId));"},{"lineNumber":21,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Victor"},"content":"    return userStateMap.get(chatId);"},{"lineNumber":23,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":24,"author":{"gitId":"Victor"},"content":""},{"lineNumber":25,"author":{"gitId":"Victor"},"content":"  @Override"},{"lineNumber":26,"author":{"gitId":"Victor"},"content":"  public void setStateForUser(Long chatId, UserState userState) {"},{"lineNumber":27,"author":{"gitId":"Victor"},"content":"    userStateMap.put(chatId, userState);"},{"lineNumber":28,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":29,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":29}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/telegram/TelegramMessageSender.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.telegram;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.config.TelegramProperties;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"import org.telegram.telegrambots.bots.DefaultAbsSender;"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"import org.telegram.telegrambots.bots.DefaultBotOptions;"},{"lineNumber":7,"author":{"gitId":"Victor"},"content":""},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"@Component"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"public class TelegramMessageSender extends DefaultAbsSender {"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":""},{"lineNumber":11,"author":{"gitId":"Victor"},"content":"  private final TelegramProperties telegramProperties;"},{"lineNumber":12,"author":{"gitId":"Victor"},"content":""},{"lineNumber":13,"author":{"gitId":"Victor"},"content":"  public TelegramMessageSender(TelegramProperties telegramProperties) {"},{"lineNumber":14,"author":{"gitId":"Victor"},"content":"    super(new DefaultBotOptions());"},{"lineNumber":15,"author":{"gitId":"Victor"},"content":"    this.telegramProperties \u003d telegramProperties;"},{"lineNumber":16,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":17,"author":{"gitId":"Victor"},"content":""},{"lineNumber":18,"author":{"gitId":"Victor"},"content":"  @Override"},{"lineNumber":19,"author":{"gitId":"Victor"},"content":"  public String getBotToken() {"},{"lineNumber":20,"author":{"gitId":"Victor"},"content":"    return telegramProperties.getBotToken();"},{"lineNumber":21,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":22,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":22}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/web/request/UserRequest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.web.request;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import lombok.Builder;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import lombok.Value;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"import lombok.extern.jackson.Jacksonized;"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":""},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"@Value"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"@Builder"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"@Jacksonized"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":"public class UserRequest {"},{"lineNumber":11,"author":{"gitId":"Victor"},"content":""},{"lineNumber":12,"author":{"gitId":"Victor"},"content":"  Long chatId;"},{"lineNumber":13,"author":{"gitId":"Victor"},"content":"  String text;"},{"lineNumber":14,"author":{"gitId":"Victor"},"content":"  boolean isCommand;"},{"lineNumber":15,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":15}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/web/response/ErrorResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.web.response;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import lombok.Builder;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import lombok.Value;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"import lombok.extern.jackson.Jacksonized;"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":""},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"@Value"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"@Builder"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"@Jacksonized"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":"public class ErrorResponse {"},{"lineNumber":11,"author":{"gitId":"Victor"},"content":""},{"lineNumber":12,"author":{"gitId":"Victor"},"content":"  String message;"},{"lineNumber":13,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":13}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/web/webhook/TelegramWebhook.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.web.webhook;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.dispatch.CommandDispatcher;"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.domain.mapper.UserRequestMapper;"},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.exception.InvalidRequestBodyException;"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.web.request.UserRequest;"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"import java.util.Optional;"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":"import java.util.function.Function;"},{"lineNumber":11,"author":{"gitId":"Victor"},"content":"import lombok.RequiredArgsConstructor;"},{"lineNumber":12,"author":{"gitId":"Victor"},"content":"import lombok.extern.slf4j.Slf4j;"},{"lineNumber":13,"author":{"gitId":"Victor"},"content":"import org.springframework.stereotype.Component;"},{"lineNumber":14,"author":{"gitId":"Victor"},"content":"import org.telegram.telegrambots.meta.api.objects.Update;"},{"lineNumber":15,"author":{"gitId":"Victor"},"content":""},{"lineNumber":16,"author":{"gitId":"Victor"},"content":"@Component"},{"lineNumber":17,"author":{"gitId":"Victor"},"content":"@RequiredArgsConstructor"},{"lineNumber":18,"author":{"gitId":"Victor"},"content":"@Slf4j"},{"lineNumber":19,"author":{"gitId":"Victor"},"content":"public class TelegramWebhook implements Function\u003cOptional\u003cString\u003e, Void\u003e {"},{"lineNumber":20,"author":{"gitId":"Victor"},"content":""},{"lineNumber":21,"author":{"gitId":"Victor"},"content":"  private static final Void EMPTY_OBJECT \u003d null;"},{"lineNumber":22,"author":{"gitId":"Victor"},"content":"  private final ObjectMapper objectMapper;"},{"lineNumber":23,"author":{"gitId":"Victor"},"content":"  private final UserRequestMapper userRequestMapper;"},{"lineNumber":24,"author":{"gitId":"Victor"},"content":"  private final CommandDispatcher commandDispatcher;"},{"lineNumber":25,"author":{"gitId":"Victor"},"content":""},{"lineNumber":26,"author":{"gitId":"Victor"},"content":"  @Override"},{"lineNumber":27,"author":{"gitId":"Victor"},"content":"  public Void apply(Optional\u003cString\u003e requestBody) {"},{"lineNumber":28,"author":{"gitId":"Victor"},"content":"    requestBody"},{"lineNumber":29,"author":{"gitId":"Victor"},"content":"        .map(this::logRequestBody)"},{"lineNumber":30,"author":{"gitId":"Victor"},"content":"        .map(this::requestBodyToUpdate)"},{"lineNumber":31,"author":{"gitId":"Victor"},"content":"        .map(this::telegramUpdateToUserRequest)"},{"lineNumber":32,"author":{"gitId":"Victor"},"content":"        .ifPresentOrElse(commandDispatcher::dispatch, this::throwExceptionAboutNullBody);"},{"lineNumber":33,"author":{"gitId":"Victor"},"content":"    return EMPTY_OBJECT;"},{"lineNumber":34,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":35,"author":{"gitId":"Victor"},"content":""},{"lineNumber":36,"author":{"gitId":"Victor"},"content":"  private String logRequestBody(String requestBody) {"},{"lineNumber":37,"author":{"gitId":"Victor"},"content":"    log.info(\"Request body: {}\", requestBody);"},{"lineNumber":38,"author":{"gitId":"Victor"},"content":"    return requestBody;"},{"lineNumber":39,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":40,"author":{"gitId":"Victor"},"content":""},{"lineNumber":41,"author":{"gitId":"Victor"},"content":"  private Update requestBodyToUpdate(String requestBody) {"},{"lineNumber":42,"author":{"gitId":"Victor"},"content":"    try {"},{"lineNumber":43,"author":{"gitId":"Victor"},"content":"      return objectMapper.readValue(requestBody, Update.class);"},{"lineNumber":44,"author":{"gitId":"Victor"},"content":"    } catch (JsonProcessingException ex) {"},{"lineNumber":45,"author":{"gitId":"Victor"},"content":"      log.error(\"Error while parsing request body!\", ex);"},{"lineNumber":46,"author":{"gitId":"Victor"},"content":"      throw new InvalidRequestBodyException(ex.getMessage());"},{"lineNumber":47,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":49,"author":{"gitId":"Victor"},"content":""},{"lineNumber":50,"author":{"gitId":"Victor"},"content":"  private UserRequest telegramUpdateToUserRequest(Update update) {"},{"lineNumber":51,"author":{"gitId":"Victor"},"content":"    final UserRequest userRequest \u003d userRequestMapper.toUserRequest(update);"},{"lineNumber":52,"author":{"gitId":"Victor"},"content":"    log.info(\"Mapped UserRequest: {}\", userRequest);"},{"lineNumber":53,"author":{"gitId":"Victor"},"content":"    return userRequest;"},{"lineNumber":54,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":55,"author":{"gitId":"Victor"},"content":""},{"lineNumber":56,"author":{"gitId":"Victor"},"content":"  private void throwExceptionAboutNullBody() {"},{"lineNumber":57,"author":{"gitId":"Victor"},"content":"    throw new InvalidRequestBodyException(\"Request body must not be null\");"},{"lineNumber":58,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":59,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":59}},{"path":"kmaooad-functions/src/main/java/edu/kmaooad/web/webhook/TelegramWebhookHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.web.webhook;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.microsoft.azure.functions.ExecutionContext;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.microsoft.azure.functions.HttpMethod;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import com.microsoft.azure.functions.HttpRequestMessage;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.microsoft.azure.functions.HttpResponseMessage;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.microsoft.azure.functions.HttpStatus;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.microsoft.azure.functions.annotation.AuthorizationLevel;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.microsoft.azure.functions.annotation.FunctionName;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.microsoft.azure.functions.annotation.HttpTrigger;"},{"lineNumber":11,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.web.response.ErrorResponse;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.springframework.cloud.function.adapter.azure.FunctionInvoker;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"Victor"},"content":"public class TelegramWebhookHandler extends FunctionInvoker\u003cOptional\u003cString\u003e, Void\u003e {"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"  @FunctionName(\"TelegramWebhook\")"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  public HttpResponseMessage run("},{"lineNumber":19,"author":{"gitId":"-"},"content":"      @HttpTrigger("},{"lineNumber":20,"author":{"gitId":"-"},"content":"              name \u003d \"req\","},{"lineNumber":21,"author":{"gitId":"-"},"content":"              methods \u003d {HttpMethod.POST},"},{"lineNumber":22,"author":{"gitId":"-"},"content":"              authLevel \u003d AuthorizationLevel.FUNCTION)"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          HttpRequestMessage\u003cOptional\u003cString\u003e\u003e request,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      final ExecutionContext context) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    try {"},{"lineNumber":26,"author":{"gitId":"Victor"},"content":"      this.handleRequest(request.getBody(), context);"},{"lineNumber":27,"author":{"gitId":"Victor"},"content":"      return request.createResponseBuilder(HttpStatus.OK).build();"},{"lineNumber":28,"author":{"gitId":"Victor"},"content":"    } catch (Exception ex) {"},{"lineNumber":29,"author":{"gitId":"Victor"},"content":"      return request"},{"lineNumber":30,"author":{"gitId":"Victor"},"content":"          .createResponseBuilder(HttpStatus.OK)"},{"lineNumber":31,"author":{"gitId":"Victor"},"content":"          .body(ErrorResponse.builder().message(ex.getMessage()).build())"},{"lineNumber":32,"author":{"gitId":"Victor"},"content":"          .build();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Victor":10,"-":25}},{"path":"kmaooad-functions/src/main/resources/application-development.yml","fileType":"yml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"server:"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  port: 8080"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"spring:"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  data:"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mongodb:"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      uri: mongodb+srv://user:Password1@cluster0.jtpouhq.mongodb.net/?retryWrites\u003dtrue\u0026w\u003dmajority"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      database: telegram"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"telegram:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  api-url: https://api.telegram.org/"},{"lineNumber":12,"author":{"gitId":"Victor"},"content":"  set-webhook-path: https://api.telegram.org/bot%s/setWebhook?url\u003d%s"},{"lineNumber":13,"author":{"gitId":"Victor"},"content":"  webhook-path: https://8ddc-31-128-76-0.eu.ngrok.io/api/TelegramWebhook # should be adjusted during local development"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  bot-name: kmaooad-botfarm"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  bot-token: 5427359670:AAHPbqL79O20rV2MAEJz1TFEKQeVTTXBq_Y"}],"authorContributionMap":{"Victor":2,"-":13}},{"path":"kmaooad-functions/src/main/resources/application-production.yml","fileType":"yml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"spring:"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  data:"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    mongodb:"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      uri: mongodb+srv://user:Password1@cluster0.jtpouhq.mongodb.net/?retryWrites\u003dtrue\u0026w\u003dmajority"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      database: telegram"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"telegram:"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  api-url: https://api.telegram.org/"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"  set-webhook-path: https://api.telegram.org/bot%s/setWebhook?url\u003d%s"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  webhook-path: https://kmaooad-bot-farm.azurewebsites.net/api/TelegramWebhook"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  bot-name: kmaooad-botfarm"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  bot-token: 5427359670:AAHPbqL79O20rV2MAEJz1TFEKQeVTTXBq_Y"}],"authorContributionMap":{"Victor":1,"-":11}},{"path":"kmaooad-functions/src/main/resources/application.yml","fileType":"yml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"spring:"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  profiles:"},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"    active: production # should be set to \u0027development\u0027 if testing locally"}],"authorContributionMap":{"Victor":1,"-":2}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/command/dispatch/CommandDispatcherTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.command.dispatch;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import static org.mockito.ArgumentMatchers.any;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import static org.mockito.Mockito.*;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":""},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.handler.CommandHandler;"},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.handler.CommandState;"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.domain.model.UserState;"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.service.UserStateService;"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.web.request.UserRequest;"},{"lineNumber":11,"author":{"gitId":"Victor"},"content":"import java.util.HashMap;"},{"lineNumber":12,"author":{"gitId":"Victor"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitId":"Victor"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":14,"author":{"gitId":"Victor"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":15,"author":{"gitId":"Victor"},"content":""},{"lineNumber":16,"author":{"gitId":"Victor"},"content":"public class CommandDispatcherTest {"},{"lineNumber":17,"author":{"gitId":"Victor"},"content":""},{"lineNumber":18,"author":{"gitId":"Victor"},"content":"  private UserStateService userStateService;"},{"lineNumber":19,"author":{"gitId":"Victor"},"content":"  private CommandHandler commandHandler;"},{"lineNumber":20,"author":{"gitId":"Victor"},"content":"  private CommandHandler unknownCommandHandler;"},{"lineNumber":21,"author":{"gitId":"Victor"},"content":""},{"lineNumber":22,"author":{"gitId":"Victor"},"content":"  private CommandDispatcher commandDispatcher;"},{"lineNumber":23,"author":{"gitId":"Victor"},"content":""},{"lineNumber":24,"author":{"gitId":"Victor"},"content":"  @BeforeEach"},{"lineNumber":25,"author":{"gitId":"Victor"},"content":"  public void setup() {"},{"lineNumber":26,"author":{"gitId":"Victor"},"content":"    userStateService \u003d mock(UserStateService.class);"},{"lineNumber":27,"author":{"gitId":"Victor"},"content":"    commandHandler \u003d mock(CommandHandler.class);"},{"lineNumber":28,"author":{"gitId":"Victor"},"content":"    unknownCommandHandler \u003d mock(CommandHandler.class);"},{"lineNumber":29,"author":{"gitId":"Victor"},"content":"    commandDispatcher \u003d"},{"lineNumber":30,"author":{"gitId":"Victor"},"content":"        new CommandDispatcher(List.of(commandHandler), unknownCommandHandler, userStateService);"},{"lineNumber":31,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":32,"author":{"gitId":"Victor"},"content":""},{"lineNumber":33,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":34,"author":{"gitId":"Victor"},"content":"  public void shouldCreateCommandFromRequestStringAndSendToHandler() {"},{"lineNumber":35,"author":{"gitId":"Victor"},"content":"    UserRequest userRequest \u003d"},{"lineNumber":36,"author":{"gitId":"Victor"},"content":"        UserRequest.builder().chatId(1L).text(\"/cancel\").isCommand(true).build();"},{"lineNumber":37,"author":{"gitId":"Victor"},"content":"    when(commandHandler.canHandle(any(Command.class))).thenReturn(true);"},{"lineNumber":38,"author":{"gitId":"Victor"},"content":""},{"lineNumber":39,"author":{"gitId":"Victor"},"content":"    commandDispatcher.dispatch(userRequest);"},{"lineNumber":40,"author":{"gitId":"Victor"},"content":""},{"lineNumber":41,"author":{"gitId":"Victor"},"content":"    verify(commandHandler, times(1)).canHandle(Command.CANCEL);"},{"lineNumber":42,"author":{"gitId":"Victor"},"content":"    verify(commandHandler, times(1)).handle(eq(userRequest));"},{"lineNumber":43,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":44,"author":{"gitId":"Victor"},"content":""},{"lineNumber":45,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":46,"author":{"gitId":"Victor"},"content":"  public void shouldSendUnknownCommandToDefaultHandler() {"},{"lineNumber":47,"author":{"gitId":"Victor"},"content":"    UserRequest userRequest \u003d"},{"lineNumber":48,"author":{"gitId":"Victor"},"content":"        UserRequest.builder().chatId(1L).text(\"/someUnknownCommand\").isCommand(true).build();"},{"lineNumber":49,"author":{"gitId":"Victor"},"content":"    when(commandHandler.canHandle(any(Command.class))).thenReturn(false);"},{"lineNumber":50,"author":{"gitId":"Victor"},"content":""},{"lineNumber":51,"author":{"gitId":"Victor"},"content":"    commandDispatcher.dispatch(userRequest);"},{"lineNumber":52,"author":{"gitId":"Victor"},"content":""},{"lineNumber":53,"author":{"gitId":"Victor"},"content":"    verify(commandHandler, times(1)).canHandle(Command.UNKNOWN_COMMAND);"},{"lineNumber":54,"author":{"gitId":"Victor"},"content":"    verify(unknownCommandHandler, times(1)).handle(eq(userRequest));"},{"lineNumber":55,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":56,"author":{"gitId":"Victor"},"content":""},{"lineNumber":57,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":58,"author":{"gitId":"Victor"},"content":"  public void shouldGetCurrentCommandFromUserStateAndSendToHandler() {"},{"lineNumber":59,"author":{"gitId":"Victor"},"content":"    UserRequest userRequest \u003d"},{"lineNumber":60,"author":{"gitId":"Victor"},"content":"        UserRequest.builder().chatId(1L).text(\"some-text\").isCommand(false).build();"},{"lineNumber":61,"author":{"gitId":"Victor"},"content":"    UserState userState \u003d"},{"lineNumber":62,"author":{"gitId":"Victor"},"content":"        new UserState(1L, Command.CANCEL, new TestCommandState(), new HashMap\u003c\u003e());"},{"lineNumber":63,"author":{"gitId":"Victor"},"content":"    when(userStateService.getStateForUser(anyLong())).thenReturn(userState);"},{"lineNumber":64,"author":{"gitId":"Victor"},"content":"    when(commandHandler.canHandle(any(Command.class))).thenReturn(true);"},{"lineNumber":65,"author":{"gitId":"Victor"},"content":""},{"lineNumber":66,"author":{"gitId":"Victor"},"content":"    commandDispatcher.dispatch(userRequest);"},{"lineNumber":67,"author":{"gitId":"Victor"},"content":""},{"lineNumber":68,"author":{"gitId":"Victor"},"content":"    verify(userStateService, times(1)).getStateForUser(eq(1L));"},{"lineNumber":69,"author":{"gitId":"Victor"},"content":"    verify(commandHandler, times(1)).canHandle(Command.CANCEL);"},{"lineNumber":70,"author":{"gitId":"Victor"},"content":"    verify(commandHandler, times(1)).handle(eq(userRequest));"},{"lineNumber":71,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":72,"author":{"gitId":"Victor"},"content":""},{"lineNumber":73,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":74,"author":{"gitId":"Victor"},"content":"  public void shouldIgnoreSimpleTextMessageIfUserStateIsEmpty() {"},{"lineNumber":75,"author":{"gitId":"Victor"},"content":"    UserRequest userRequest \u003d"},{"lineNumber":76,"author":{"gitId":"Victor"},"content":"        UserRequest.builder().chatId(1L).text(\"some-text\").isCommand(false).build();"},{"lineNumber":77,"author":{"gitId":"Victor"},"content":"    UserState userState \u003d new UserState(1L, null, null, new HashMap\u003c\u003e());"},{"lineNumber":78,"author":{"gitId":"Victor"},"content":"    when(userStateService.getStateForUser(anyLong())).thenReturn(userState);"},{"lineNumber":79,"author":{"gitId":"Victor"},"content":""},{"lineNumber":80,"author":{"gitId":"Victor"},"content":"    commandDispatcher.dispatch(userRequest);"},{"lineNumber":81,"author":{"gitId":"Victor"},"content":""},{"lineNumber":82,"author":{"gitId":"Victor"},"content":"    verify(userStateService, times(1)).getStateForUser(eq(1L));"},{"lineNumber":83,"author":{"gitId":"Victor"},"content":"    verify(commandHandler, never()).canHandle(Command.CANCEL);"},{"lineNumber":84,"author":{"gitId":"Victor"},"content":"    verify(commandHandler, never()).handle(eq(userRequest));"},{"lineNumber":85,"author":{"gitId":"Victor"},"content":"    verify(unknownCommandHandler, never()).handle(eq(userRequest));"},{"lineNumber":86,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":87,"author":{"gitId":"Victor"},"content":""},{"lineNumber":88,"author":{"gitId":"Victor"},"content":"  private static class TestCommandState implements CommandState {"},{"lineNumber":89,"author":{"gitId":"Victor"},"content":""},{"lineNumber":90,"author":{"gitId":"Victor"},"content":"    @Override"},{"lineNumber":91,"author":{"gitId":"Victor"},"content":"    public String getName() {"},{"lineNumber":92,"author":{"gitId":"Victor"},"content":"      return \"test-state\";"},{"lineNumber":93,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":95,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":95}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/command/dispatch/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.command.dispatch;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":""},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"public class CommandTest {"},{"lineNumber":7,"author":{"gitId":"Victor"},"content":""},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"  public void shouldReturnCommandByItsName() {"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":"    Command actual \u003d Command.fromString(\"/cancel\");"},{"lineNumber":11,"author":{"gitId":"Victor"},"content":""},{"lineNumber":12,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(actual, Command.CANCEL);"},{"lineNumber":13,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":14,"author":{"gitId":"Victor"},"content":""},{"lineNumber":15,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":16,"author":{"gitId":"Victor"},"content":"  public void shouldReturnUnknownCommandIfValueIsWrong() {"},{"lineNumber":17,"author":{"gitId":"Victor"},"content":"    Command actual \u003d Command.fromString(\"some-unknown-command\");"},{"lineNumber":18,"author":{"gitId":"Victor"},"content":""},{"lineNumber":19,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(actual, Command.UNKNOWN_COMMAND);"},{"lineNumber":20,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":21,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":21}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/domain/mapper/CVMapperTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khrystyna Boiko"},"content":"package edu.kmaooad.domain.mapper;"},{"lineNumber":2,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":3,"author":{"gitId":"Khrystyna Boiko"},"content":"import edu.kmaooad.domain.dto.cv.AddCVDTO;"},{"lineNumber":4,"author":{"gitId":"Khrystyna Boiko"},"content":"import edu.kmaooad.domain.dto.cv.UpdateCVDTO;"},{"lineNumber":5,"author":{"gitId":"Khrystyna Boiko"},"content":"import edu.kmaooad.domain.model.CV;"},{"lineNumber":6,"author":{"gitId":"Khrystyna Boiko"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":7,"author":{"gitId":"Khrystyna Boiko"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":8,"author":{"gitId":"Khrystyna Boiko"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":10,"author":{"gitId":"Khrystyna Boiko"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":12,"author":{"gitId":"Khrystyna Boiko"},"content":"public class CVMapperTest {"},{"lineNumber":13,"author":{"gitId":"Khrystyna Boiko"},"content":"    private CVMapper cvMapper;"},{"lineNumber":14,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":15,"author":{"gitId":"Khrystyna Boiko"},"content":"    @BeforeEach"},{"lineNumber":16,"author":{"gitId":"Khrystyna Boiko"},"content":"    public void setup() {"},{"lineNumber":17,"author":{"gitId":"Khrystyna Boiko"},"content":"        cvMapper \u003d new CVMapperImpl();"},{"lineNumber":18,"author":{"gitId":"Khrystyna Boiko"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":20,"author":{"gitId":"Khrystyna Boiko"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"Khrystyna Boiko"},"content":"    public void shouldMapAddCVDTOToCVEntity() {"},{"lineNumber":22,"author":{"gitId":"Khrystyna Boiko"},"content":"        AddCVDTO addCVDTO \u003d"},{"lineNumber":23,"author":{"gitId":"Khrystyna Boiko"},"content":"                AddCVDTO.builder()"},{"lineNumber":24,"author":{"gitId":"Khrystyna Boiko"},"content":"                        .name(\"name\")"},{"lineNumber":25,"author":{"gitId":"Khrystyna Boiko"},"content":"                        .description(\"description\")"},{"lineNumber":26,"author":{"gitId":"Khrystyna Boiko"},"content":"                        .isHidden(false)"},{"lineNumber":27,"author":{"gitId":"Khrystyna Boiko"},"content":"                        .activities(List.of(\"activity\"))"},{"lineNumber":28,"author":{"gitId":"Khrystyna Boiko"},"content":"                        .competences(List.of(\"competence\"))"},{"lineNumber":29,"author":{"gitId":"Khrystyna Boiko"},"content":"                        .preferences(List.of(\"preference\"))"},{"lineNumber":30,"author":{"gitId":"Khrystyna Boiko"},"content":"                        .manageCompetencies(true)"},{"lineNumber":31,"author":{"gitId":"Khrystyna Boiko"},"content":"                        .build();"},{"lineNumber":32,"author":{"gitId":"Khrystyna Boiko"},"content":"        CV cv \u003d cvMapper.toCV(addCVDTO);"},{"lineNumber":33,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertEquals(cv.getName(), addCVDTO.getName());"},{"lineNumber":34,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertEquals(cv.getDescription(), addCVDTO.getDescription());"},{"lineNumber":35,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertFalse(addCVDTO.getIsHidden());"},{"lineNumber":36,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertEquals(cv.getActivities(), addCVDTO.getActivities());"},{"lineNumber":37,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertEquals(cv.getCompetences(), addCVDTO.getCompetences());"},{"lineNumber":38,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertEquals(cv.getPreferences(), addCVDTO.getPreferences());"},{"lineNumber":39,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertTrue(addCVDTO.getManageCompetencies());"},{"lineNumber":40,"author":{"gitId":"Khrystyna Boiko"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":42,"author":{"gitId":"Khrystyna Boiko"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"Khrystyna Boiko"},"content":"    public void shouldMapUpdateCVDTOToCVEntity() {"},{"lineNumber":44,"author":{"gitId":"Khrystyna Boiko"},"content":"        UpdateCVDTO updateCVDTO \u003d"},{"lineNumber":45,"author":{"gitId":"Khrystyna Boiko"},"content":"                UpdateCVDTO.builder()"},{"lineNumber":46,"author":{"gitId":"Khrystyna Boiko"},"content":"                        .id(\"cv-id\")"},{"lineNumber":47,"author":{"gitId":"Khrystyna Boiko"},"content":"                        .name(\"name\")"},{"lineNumber":48,"author":{"gitId":"Khrystyna Boiko"},"content":"                        .description(\"description\")"},{"lineNumber":49,"author":{"gitId":"Khrystyna Boiko"},"content":"                        .isHidden(false)"},{"lineNumber":50,"author":{"gitId":"Khrystyna Boiko"},"content":"                        .activities(List.of(\"activity\"))"},{"lineNumber":51,"author":{"gitId":"Khrystyna Boiko"},"content":"                        .competences(List.of(\"competence\"))"},{"lineNumber":52,"author":{"gitId":"Khrystyna Boiko"},"content":"                        .preferences(List.of(\"preference\"))"},{"lineNumber":53,"author":{"gitId":"Khrystyna Boiko"},"content":"                        .manageCompetencies(true)"},{"lineNumber":54,"author":{"gitId":"Khrystyna Boiko"},"content":"                        .build();"},{"lineNumber":55,"author":{"gitId":"Khrystyna Boiko"},"content":"        CV cv \u003d cvMapper.toCV(updateCVDTO);"},{"lineNumber":56,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertEquals(cv.getName(), updateCVDTO.getName());"},{"lineNumber":57,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertEquals(cv.getDescription(), updateCVDTO.getDescription());"},{"lineNumber":58,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertEquals(cv.getIsHidden(), updateCVDTO.getIsHidden());"},{"lineNumber":59,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertEquals(cv.getActivities(), updateCVDTO.getActivities());"},{"lineNumber":60,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertEquals(cv.getCompetences(), updateCVDTO.getCompetences());"},{"lineNumber":61,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertEquals(cv.getPreferences(), updateCVDTO.getPreferences());"},{"lineNumber":62,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertEquals(cv.getManageCompetencies(), updateCVDTO.getManageCompetencies());"},{"lineNumber":63,"author":{"gitId":"Khrystyna Boiko"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":65,"author":{"gitId":"Khrystyna Boiko"},"content":"}"}],"authorContributionMap":{"Khrystyna Boiko":65}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/domain/mapper/DepartmentMapperTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khrystyna Boiko"},"content":"package edu.kmaooad.domain.mapper;"},{"lineNumber":2,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":3,"author":{"gitId":"Khrystyna Boiko"},"content":"import edu.kmaooad.domain.dto.department.UpdateDepartmentDTO;"},{"lineNumber":4,"author":{"gitId":"Khrystyna Boiko"},"content":"import edu.kmaooad.domain.model.Department;"},{"lineNumber":5,"author":{"gitId":"Khrystyna Boiko"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":6,"author":{"gitId":"Khrystyna Boiko"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":7,"author":{"gitId":"Khrystyna Boiko"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":9,"author":{"gitId":"Khrystyna Boiko"},"content":"public class DepartmentMapperTest {"},{"lineNumber":10,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":11,"author":{"gitId":"Khrystyna Boiko"},"content":"    private DepartmentMapper depMapper;"},{"lineNumber":12,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":13,"author":{"gitId":"Khrystyna Boiko"},"content":"    @BeforeEach"},{"lineNumber":14,"author":{"gitId":"Khrystyna Boiko"},"content":"    public void setup() {"},{"lineNumber":15,"author":{"gitId":"Khrystyna Boiko"},"content":"        depMapper \u003d new DepartmentMapperImpl();"},{"lineNumber":16,"author":{"gitId":"Khrystyna Boiko"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":18,"author":{"gitId":"Khrystyna Boiko"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"Khrystyna Boiko"},"content":"    public void shouldMapUpdateDepartmentDTOToDepartmentEntity() {"},{"lineNumber":20,"author":{"gitId":"Khrystyna Boiko"},"content":"        UpdateDepartmentDTO updateDepartmentDTO \u003d"},{"lineNumber":21,"author":{"gitId":"Khrystyna Boiko"},"content":"                UpdateDepartmentDTO.builder()"},{"lineNumber":22,"author":{"gitId":"Khrystyna Boiko"},"content":"                        .id(\"dep-id\")"},{"lineNumber":23,"author":{"gitId":"Khrystyna Boiko"},"content":"                        .name(\"name\")"},{"lineNumber":24,"author":{"gitId":"Khrystyna Boiko"},"content":"                        .isHiring(true)"},{"lineNumber":25,"author":{"gitId":"Khrystyna Boiko"},"content":"                        .orgId(\"org-id\")"},{"lineNumber":26,"author":{"gitId":"Khrystyna Boiko"},"content":"                        .build();"},{"lineNumber":27,"author":{"gitId":"Khrystyna Boiko"},"content":"        Department dep \u003d depMapper.toDepartment(updateDepartmentDTO);"},{"lineNumber":28,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertEquals(dep.getName(), updateDepartmentDTO.getName());"},{"lineNumber":29,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertEquals(dep.getIsHiring(), updateDepartmentDTO.getIsHiring());"},{"lineNumber":30,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertEquals(dep.getOrgId(), updateDepartmentDTO.getOrgId());"},{"lineNumber":31,"author":{"gitId":"Khrystyna Boiko"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":33,"author":{"gitId":"Khrystyna Boiko"},"content":"}"}],"authorContributionMap":{"Khrystyna Boiko":33}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/domain/mapper/JobMapperTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.domain.mapper;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.domain.dto.job.AddJobDTO;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.domain.dto.job.UpdateJobDTO;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.domain.model.Job;"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":""},{"lineNumber":11,"author":{"gitId":"Victor"},"content":"public class JobMapperTest {"},{"lineNumber":12,"author":{"gitId":"Victor"},"content":""},{"lineNumber":13,"author":{"gitId":"Victor"},"content":"  private JobMapper jobMapper;"},{"lineNumber":14,"author":{"gitId":"Victor"},"content":""},{"lineNumber":15,"author":{"gitId":"Victor"},"content":"  @BeforeEach"},{"lineNumber":16,"author":{"gitId":"Victor"},"content":"  public void setup() {"},{"lineNumber":17,"author":{"gitId":"Victor"},"content":"    jobMapper \u003d new JobMapperImpl();"},{"lineNumber":18,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":19,"author":{"gitId":"Victor"},"content":""},{"lineNumber":20,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":21,"author":{"gitId":"Victor"},"content":"  public void shouldMapAddJobDTOToJobEntity() {"},{"lineNumber":22,"author":{"gitId":"Victor"},"content":"    AddJobDTO addJobDTO \u003d"},{"lineNumber":23,"author":{"gitId":"Victor"},"content":"        AddJobDTO.builder()"},{"lineNumber":24,"author":{"gitId":"Victor"},"content":"            .title(\"title\")"},{"lineNumber":25,"author":{"gitId":"Victor"},"content":"            .description(\"description\")"},{"lineNumber":26,"author":{"gitId":"Victor"},"content":"            .competences(List.of(\"competence\"))"},{"lineNumber":27,"author":{"gitId":"Victor"},"content":"            .activities(List.of(\"activity\"))"},{"lineNumber":28,"author":{"gitId":"Victor"},"content":"            .depId(\"dep-id\")"},{"lineNumber":29,"author":{"gitId":"Victor"},"content":"            .build();"},{"lineNumber":30,"author":{"gitId":"Victor"},"content":""},{"lineNumber":31,"author":{"gitId":"Victor"},"content":"    Job job \u003d jobMapper.toJob(addJobDTO);"},{"lineNumber":32,"author":{"gitId":"Victor"},"content":""},{"lineNumber":33,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(job.getTitle(), addJobDTO.getTitle());"},{"lineNumber":34,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(job.getDescription(), addJobDTO.getDescription());"},{"lineNumber":35,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(job.getCompetences(), addJobDTO.getCompetences());"},{"lineNumber":36,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(job.getActivities(), addJobDTO.getActivities());"},{"lineNumber":37,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(job.getDepId(), addJobDTO.getDepId());"},{"lineNumber":38,"author":{"gitId":"Victor"},"content":"    Assertions.assertTrue(job.getIsActive());"},{"lineNumber":39,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":40,"author":{"gitId":"Victor"},"content":""},{"lineNumber":41,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":42,"author":{"gitId":"Victor"},"content":"  public void shouldMapUpdateJobDTOToJobEntity() {"},{"lineNumber":43,"author":{"gitId":"Victor"},"content":"    UpdateJobDTO updateJobDTO \u003d"},{"lineNumber":44,"author":{"gitId":"Victor"},"content":"        UpdateJobDTO.builder()"},{"lineNumber":45,"author":{"gitId":"Victor"},"content":"            .id(\"job-id\")"},{"lineNumber":46,"author":{"gitId":"Victor"},"content":"            .title(\"title\")"},{"lineNumber":47,"author":{"gitId":"Victor"},"content":"            .description(\"description\")"},{"lineNumber":48,"author":{"gitId":"Victor"},"content":"            .competences(List.of(\"competence\"))"},{"lineNumber":49,"author":{"gitId":"Victor"},"content":"            .activities(List.of(\"activity\"))"},{"lineNumber":50,"author":{"gitId":"Victor"},"content":"            .isActive(false)"},{"lineNumber":51,"author":{"gitId":"Victor"},"content":"            .depId(\"dep-id\")"},{"lineNumber":52,"author":{"gitId":"Victor"},"content":"            .build();"},{"lineNumber":53,"author":{"gitId":"Victor"},"content":""},{"lineNumber":54,"author":{"gitId":"Victor"},"content":"    Job job \u003d jobMapper.toJob(updateJobDTO);"},{"lineNumber":55,"author":{"gitId":"Victor"},"content":""},{"lineNumber":56,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(job.getId(), updateJobDTO.getId());"},{"lineNumber":57,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(job.getTitle(), updateJobDTO.getTitle());"},{"lineNumber":58,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(job.getDescription(), updateJobDTO.getDescription());"},{"lineNumber":59,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(job.getCompetences(), updateJobDTO.getCompetences());"},{"lineNumber":60,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(job.getActivities(), updateJobDTO.getActivities());"},{"lineNumber":61,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(job.getIsActive(), updateJobDTO.getIsActive());"},{"lineNumber":62,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(job.getDepId(), updateJobDTO.getDepId());"},{"lineNumber":63,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":64,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":64}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/domain/mapper/UserRequestMapperTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.domain.mapper;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.web.request.UserRequest;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"import org.telegram.telegrambots.meta.api.objects.Chat;"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"import org.telegram.telegrambots.meta.api.objects.Message;"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"import org.telegram.telegrambots.meta.api.objects.Update;"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":""},{"lineNumber":11,"author":{"gitId":"Victor"},"content":"public class UserRequestMapperTest {"},{"lineNumber":12,"author":{"gitId":"Victor"},"content":""},{"lineNumber":13,"author":{"gitId":"Victor"},"content":"  private UserRequestMapper userRequestMapper;"},{"lineNumber":14,"author":{"gitId":"Victor"},"content":""},{"lineNumber":15,"author":{"gitId":"Victor"},"content":"  @BeforeEach"},{"lineNumber":16,"author":{"gitId":"Victor"},"content":"  public void setup() {"},{"lineNumber":17,"author":{"gitId":"Victor"},"content":"    userRequestMapper \u003d new UserRequestMapperImpl();"},{"lineNumber":18,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":19,"author":{"gitId":"Victor"},"content":""},{"lineNumber":20,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":21,"author":{"gitId":"Victor"},"content":"  public void shouldMapUpdateToUserRequest() {"},{"lineNumber":22,"author":{"gitId":"Victor"},"content":"    Long chatId \u003d 1L;"},{"lineNumber":23,"author":{"gitId":"Victor"},"content":"    String text \u003d \"message-text\";"},{"lineNumber":24,"author":{"gitId":"Victor"},"content":"    Chat chat \u003d new Chat();"},{"lineNumber":25,"author":{"gitId":"Victor"},"content":"    chat.setId(chatId);"},{"lineNumber":26,"author":{"gitId":"Victor"},"content":"    Message message \u003d new Message();"},{"lineNumber":27,"author":{"gitId":"Victor"},"content":"    message.setChat(chat);"},{"lineNumber":28,"author":{"gitId":"Victor"},"content":"    message.setText(text);"},{"lineNumber":29,"author":{"gitId":"Victor"},"content":"    Update update \u003d new Update();"},{"lineNumber":30,"author":{"gitId":"Victor"},"content":"    update.setMessage(message);"},{"lineNumber":31,"author":{"gitId":"Victor"},"content":""},{"lineNumber":32,"author":{"gitId":"Victor"},"content":"    UserRequest userRequest \u003d userRequestMapper.toUserRequest(update);"},{"lineNumber":33,"author":{"gitId":"Victor"},"content":""},{"lineNumber":34,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(userRequest.getChatId(), chatId);"},{"lineNumber":35,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(userRequest.getText(), text);"},{"lineNumber":36,"author":{"gitId":"Victor"},"content":"    Assertions.assertFalse(userRequest.isCommand());"},{"lineNumber":37,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":38,"author":{"gitId":"Victor"},"content":""},{"lineNumber":39,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":40,"author":{"gitId":"Victor"},"content":"  public void shouldMapNullMessageToNullPropertiesInUserRequest() {"},{"lineNumber":41,"author":{"gitId":"Victor"},"content":"    Update update \u003d new Update();"},{"lineNumber":42,"author":{"gitId":"Victor"},"content":""},{"lineNumber":43,"author":{"gitId":"Victor"},"content":"    UserRequest userRequest \u003d userRequestMapper.toUserRequest(update);"},{"lineNumber":44,"author":{"gitId":"Victor"},"content":""},{"lineNumber":45,"author":{"gitId":"Victor"},"content":"    Assertions.assertNull(userRequest.getChatId());"},{"lineNumber":46,"author":{"gitId":"Victor"},"content":"    Assertions.assertNull(userRequest.getText());"},{"lineNumber":47,"author":{"gitId":"Victor"},"content":"    Assertions.assertFalse(userRequest.isCommand());"},{"lineNumber":48,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":49,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":49}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/domain/model/UserStateTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.domain.model;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.dispatch.Command;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.handler.CommandState;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"import java.util.HashMap;"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":""},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"public class UserStateTest {"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":""},{"lineNumber":11,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":12,"author":{"gitId":"Victor"},"content":"  public void shouldCreateEmptyUserState() {"},{"lineNumber":13,"author":{"gitId":"Victor"},"content":"    UserState userState \u003d UserState.newEmptyState(1L);"},{"lineNumber":14,"author":{"gitId":"Victor"},"content":""},{"lineNumber":15,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(userState.getChatId(), 1L);"},{"lineNumber":16,"author":{"gitId":"Victor"},"content":"    Assertions.assertNull(userState.getCurrentCommand());"},{"lineNumber":17,"author":{"gitId":"Victor"},"content":"    Assertions.assertNull(userState.getCommandState());"},{"lineNumber":18,"author":{"gitId":"Victor"},"content":"    Assertions.assertNotNull(userState.getInputs());"},{"lineNumber":19,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(userState.getInputs().size(), 0);"},{"lineNumber":20,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":21,"author":{"gitId":"Victor"},"content":""},{"lineNumber":22,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":23,"author":{"gitId":"Victor"},"content":"  public void shouldReturnFalseForEmptyStateIfCommandAndCommandStateIsNotNull() {"},{"lineNumber":24,"author":{"gitId":"Victor"},"content":"    UserState userState \u003d"},{"lineNumber":25,"author":{"gitId":"Victor"},"content":"        new UserState(1L, Command.UNKNOWN_COMMAND, new TestCommandState(), new HashMap\u003c\u003e());"},{"lineNumber":26,"author":{"gitId":"Victor"},"content":""},{"lineNumber":27,"author":{"gitId":"Victor"},"content":"    Assertions.assertFalse(userState.isEmpty());"},{"lineNumber":28,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":29,"author":{"gitId":"Victor"},"content":""},{"lineNumber":30,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":31,"author":{"gitId":"Victor"},"content":"  public void shouldReturnTrueForEmptyStateIfCommandIsNull() {"},{"lineNumber":32,"author":{"gitId":"Victor"},"content":"    UserState userState \u003d new UserState(1L, null, new TestCommandState(), new HashMap\u003c\u003e());"},{"lineNumber":33,"author":{"gitId":"Victor"},"content":""},{"lineNumber":34,"author":{"gitId":"Victor"},"content":"    Assertions.assertTrue(userState.isEmpty());"},{"lineNumber":35,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":36,"author":{"gitId":"Victor"},"content":""},{"lineNumber":37,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":38,"author":{"gitId":"Victor"},"content":"  public void shouldReturnTrueForEmptyStateIfCommandStateIsNull() {"},{"lineNumber":39,"author":{"gitId":"Victor"},"content":"    UserState userState \u003d new UserState(1L, Command.UNKNOWN_COMMAND, null, new HashMap\u003c\u003e());"},{"lineNumber":40,"author":{"gitId":"Victor"},"content":""},{"lineNumber":41,"author":{"gitId":"Victor"},"content":"    Assertions.assertTrue(userState.isEmpty());"},{"lineNumber":42,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":43,"author":{"gitId":"Victor"},"content":""},{"lineNumber":44,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":45,"author":{"gitId":"Victor"},"content":"  public void shouldReturnTrueForEmptyStateIfCommandAndCommandStateIsNull() {"},{"lineNumber":46,"author":{"gitId":"Victor"},"content":"    UserState userState \u003d new UserState(1L, null, null, new HashMap\u003c\u003e());"},{"lineNumber":47,"author":{"gitId":"Victor"},"content":""},{"lineNumber":48,"author":{"gitId":"Victor"},"content":"    Assertions.assertTrue(userState.isEmpty());"},{"lineNumber":49,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":50,"author":{"gitId":"Victor"},"content":""},{"lineNumber":51,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":52,"author":{"gitId":"Victor"},"content":"  public void shouldAddInputToUserInputs() {"},{"lineNumber":53,"author":{"gitId":"Victor"},"content":"    UserState userState \u003d UserState.newEmptyState(1L);"},{"lineNumber":54,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(userState.getInputs().size(), 0);"},{"lineNumber":55,"author":{"gitId":"Victor"},"content":""},{"lineNumber":56,"author":{"gitId":"Victor"},"content":"    userState.addInput(\"input\", \"some-input\");"},{"lineNumber":57,"author":{"gitId":"Victor"},"content":""},{"lineNumber":58,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(userState.getInputs().size(), 1);"},{"lineNumber":59,"author":{"gitId":"Victor"},"content":"    Assertions.assertTrue(userState.getInputs().containsKey(\"input\"));"},{"lineNumber":60,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(userState.getInputs().get(\"input\"), \"some-input\");"},{"lineNumber":61,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":62,"author":{"gitId":"Victor"},"content":""},{"lineNumber":63,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":64,"author":{"gitId":"Victor"},"content":"  public void shouldClearUserState() {"},{"lineNumber":65,"author":{"gitId":"Victor"},"content":"    UserState userState \u003d"},{"lineNumber":66,"author":{"gitId":"Victor"},"content":"        new UserState(1L, Command.UNKNOWN_COMMAND, new TestCommandState(), new HashMap\u003c\u003e());"},{"lineNumber":67,"author":{"gitId":"Victor"},"content":"    Assertions.assertNotNull(userState.getCurrentCommand());"},{"lineNumber":68,"author":{"gitId":"Victor"},"content":"    Assertions.assertNotNull(userState.getCommandState());"},{"lineNumber":69,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(userState.getInputs().size(), 0);"},{"lineNumber":70,"author":{"gitId":"Victor"},"content":""},{"lineNumber":71,"author":{"gitId":"Victor"},"content":"    userState.addInput(\"input\", \"some-input\");"},{"lineNumber":72,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(userState.getInputs().size(), 1);"},{"lineNumber":73,"author":{"gitId":"Victor"},"content":""},{"lineNumber":74,"author":{"gitId":"Victor"},"content":"    userState.clear();"},{"lineNumber":75,"author":{"gitId":"Victor"},"content":""},{"lineNumber":76,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(userState.getInputs().size(), 0);"},{"lineNumber":77,"author":{"gitId":"Victor"},"content":"    Assertions.assertNull(userState.getCurrentCommand());"},{"lineNumber":78,"author":{"gitId":"Victor"},"content":"    Assertions.assertNull(userState.getCommandState());"},{"lineNumber":79,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":80,"author":{"gitId":"Victor"},"content":""},{"lineNumber":81,"author":{"gitId":"Victor"},"content":"  private static class TestCommandState implements CommandState {"},{"lineNumber":82,"author":{"gitId":"Victor"},"content":""},{"lineNumber":83,"author":{"gitId":"Victor"},"content":"    @Override"},{"lineNumber":84,"author":{"gitId":"Victor"},"content":"    public String getName() {"},{"lineNumber":85,"author":{"gitId":"Victor"},"content":"      return \"testState\";"},{"lineNumber":86,"author":{"gitId":"Victor"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":88,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":88}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/service/CVServiceTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khrystyna Boiko"},"content":"package edu.kmaooad.service;"},{"lineNumber":2,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":3,"author":{"gitId":"Khrystyna Boiko"},"content":"import edu.kmaooad.domain.dto.cv.AddCVDTO;"},{"lineNumber":4,"author":{"gitId":"Khrystyna Boiko"},"content":"import edu.kmaooad.domain.dto.cv.UpdateCVDTO;"},{"lineNumber":5,"author":{"gitId":"Khrystyna Boiko"},"content":"import edu.kmaooad.domain.mapper.CVMapper;"},{"lineNumber":6,"author":{"gitId":"Khrystyna Boiko"},"content":"import edu.kmaooad.domain.model.CV;"},{"lineNumber":7,"author":{"gitId":"Khrystyna Boiko"},"content":"import edu.kmaooad.repository.CVRepository;"},{"lineNumber":8,"author":{"gitId":"Khrystyna Boiko"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":9,"author":{"gitId":"Khrystyna Boiko"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":10,"author":{"gitId":"Khrystyna Boiko"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":11,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":12,"author":{"gitId":"Khrystyna Boiko"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitId":"Khrystyna Boiko"},"content":"import java.util.Optional;"},{"lineNumber":14,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":15,"author":{"gitId":"Khrystyna Boiko"},"content":"import static org.mockito.Mockito.*;"},{"lineNumber":16,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":17,"author":{"gitId":"Khrystyna Boiko"},"content":"public class CVServiceTest {"},{"lineNumber":18,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":19,"author":{"gitId":"Khrystyna Boiko"},"content":"    private CVRepository cvRepository;"},{"lineNumber":20,"author":{"gitId":"Khrystyna Boiko"},"content":"    private CVMapper cvMapper;"},{"lineNumber":21,"author":{"gitId":"Khrystyna Boiko"},"content":"    private CVService cvService;"},{"lineNumber":22,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":23,"author":{"gitId":"Khrystyna Boiko"},"content":"    @BeforeEach"},{"lineNumber":24,"author":{"gitId":"Khrystyna Boiko"},"content":"    public void setup() {"},{"lineNumber":25,"author":{"gitId":"Khrystyna Boiko"},"content":"        cvRepository \u003d mock(CVRepository.class);"},{"lineNumber":26,"author":{"gitId":"Khrystyna Boiko"},"content":"        cvMapper \u003d mock(CVMapper.class);"},{"lineNumber":27,"author":{"gitId":"Khrystyna Boiko"},"content":"        cvService \u003d new CVServiceImpl(cvRepository, cvMapper);"},{"lineNumber":28,"author":{"gitId":"Khrystyna Boiko"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":30,"author":{"gitId":"Khrystyna Boiko"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"Khrystyna Boiko"},"content":"    public void shouldGetAllCVs() {"},{"lineNumber":32,"author":{"gitId":"Khrystyna Boiko"},"content":"        CV expected \u003d CV.builder().id(\"cv-id\").build();"},{"lineNumber":33,"author":{"gitId":"Khrystyna Boiko"},"content":"        when(cvRepository.findAll()).thenReturn(List.of(expected));"},{"lineNumber":34,"author":{"gitId":"Khrystyna Boiko"},"content":"        List\u003cCV\u003e cvs \u003d cvService.getAllCVs();"},{"lineNumber":35,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertEquals(cvs.size(), 1);"},{"lineNumber":36,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertEquals(cvs.get(0), expected);"},{"lineNumber":37,"author":{"gitId":"Khrystyna Boiko"},"content":"        verify(cvRepository, times(1)).findAll();"},{"lineNumber":38,"author":{"gitId":"Khrystyna Boiko"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":40,"author":{"gitId":"Khrystyna Boiko"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"Khrystyna Boiko"},"content":"    public void shouldGetCVById() {"},{"lineNumber":42,"author":{"gitId":"Khrystyna Boiko"},"content":"        CV expected \u003d CV.builder().id(\"cv-id\").build();"},{"lineNumber":43,"author":{"gitId":"Khrystyna Boiko"},"content":"        when(cvRepository.findById(anyString())).thenReturn(Optional.of(expected));"},{"lineNumber":44,"author":{"gitId":"Khrystyna Boiko"},"content":"        Optional\u003cCV\u003e cv \u003d cvService.getCVById(\"cv-id\");"},{"lineNumber":45,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertTrue(cv.isPresent());"},{"lineNumber":46,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertEquals(cv.get(), expected);"},{"lineNumber":47,"author":{"gitId":"Khrystyna Boiko"},"content":"        verify(cvRepository, times(1)).findById(eq(\"cv-id\"));"},{"lineNumber":48,"author":{"gitId":"Khrystyna Boiko"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":50,"author":{"gitId":"Khrystyna Boiko"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"Khrystyna Boiko"},"content":"    public void shouldGetCVByName() {"},{"lineNumber":52,"author":{"gitId":"Khrystyna Boiko"},"content":"        CV expected \u003d CV.builder().name(\"cv-name\").build();"},{"lineNumber":53,"author":{"gitId":"Khrystyna Boiko"},"content":"        when(cvRepository.findByName(anyString())).thenReturn(Optional.of(expected));"},{"lineNumber":54,"author":{"gitId":"Khrystyna Boiko"},"content":"        Optional\u003cCV\u003e cv \u003d cvService.getCVByName(\"cv-name\");"},{"lineNumber":55,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertTrue(cv.isPresent());"},{"lineNumber":56,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertEquals(cv.get(), expected);"},{"lineNumber":57,"author":{"gitId":"Khrystyna Boiko"},"content":"        verify(cvRepository, times(1)).findByName(eq(\"cv-name\"));"},{"lineNumber":58,"author":{"gitId":"Khrystyna Boiko"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":60,"author":{"gitId":"Khrystyna Boiko"},"content":"    @Test"},{"lineNumber":61,"author":{"gitId":"Khrystyna Boiko"},"content":"    public void shouldAddNewCV() {"},{"lineNumber":62,"author":{"gitId":"Khrystyna Boiko"},"content":"        CV expected \u003d CV.builder()"},{"lineNumber":63,"author":{"gitId":"Khrystyna Boiko"},"content":"                .id(\"cv-id\")"},{"lineNumber":64,"author":{"gitId":"Khrystyna Boiko"},"content":"                .name(\"name\")"},{"lineNumber":65,"author":{"gitId":"Khrystyna Boiko"},"content":"                .description(\"description\")"},{"lineNumber":66,"author":{"gitId":"Khrystyna Boiko"},"content":"                .isHidden(false)"},{"lineNumber":67,"author":{"gitId":"Khrystyna Boiko"},"content":"                .activities(List.of(\"activity\"))"},{"lineNumber":68,"author":{"gitId":"Khrystyna Boiko"},"content":"                .competences(List.of(\"competence\"))"},{"lineNumber":69,"author":{"gitId":"Khrystyna Boiko"},"content":"                .preferences(List.of(\"preference\"))"},{"lineNumber":70,"author":{"gitId":"Khrystyna Boiko"},"content":"                .manageCompetencies(true)"},{"lineNumber":71,"author":{"gitId":"Khrystyna Boiko"},"content":"                .build();"},{"lineNumber":72,"author":{"gitId":"Khrystyna Boiko"},"content":"        CV cvToSave \u003d CV.builder().build();"},{"lineNumber":73,"author":{"gitId":"Khrystyna Boiko"},"content":"        when(cvMapper.toCV(any(AddCVDTO.class))).thenReturn(cvToSave);"},{"lineNumber":74,"author":{"gitId":"Khrystyna Boiko"},"content":"        when(cvRepository.save(any(CV.class))).thenReturn(expected);"},{"lineNumber":75,"author":{"gitId":"Khrystyna Boiko"},"content":"        AddCVDTO addCVDTO \u003d AddCVDTO.builder().build();"},{"lineNumber":76,"author":{"gitId":"Khrystyna Boiko"},"content":"        CV actual \u003d cvService.addCV(addCVDTO);"},{"lineNumber":77,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertEquals(expected, actual);"},{"lineNumber":78,"author":{"gitId":"Khrystyna Boiko"},"content":"        verify(cvMapper, times(1)).toCV(eq(addCVDTO));"},{"lineNumber":79,"author":{"gitId":"Khrystyna Boiko"},"content":"        verify(cvRepository, times(1)).save(eq(cvToSave));"},{"lineNumber":80,"author":{"gitId":"Khrystyna Boiko"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":82,"author":{"gitId":"Khrystyna Boiko"},"content":"    @Test"},{"lineNumber":83,"author":{"gitId":"Khrystyna Boiko"},"content":"    public void shouldUpdateCV(){"},{"lineNumber":84,"author":{"gitId":"Khrystyna Boiko"},"content":"        CV expected \u003d CV.builder().id(\"cv-id\").build();"},{"lineNumber":85,"author":{"gitId":"Khrystyna Boiko"},"content":"        CV cvToUpdate \u003d CV.builder().build();"},{"lineNumber":86,"author":{"gitId":"Khrystyna Boiko"},"content":"        when(cvMapper.toCV(any(UpdateCVDTO.class))).thenReturn(cvToUpdate);"},{"lineNumber":87,"author":{"gitId":"Khrystyna Boiko"},"content":"        when(cvRepository.save(any(CV.class))).thenReturn(expected);"},{"lineNumber":88,"author":{"gitId":"Khrystyna Boiko"},"content":"        UpdateCVDTO updateJobDTO \u003d UpdateCVDTO.builder().build();"},{"lineNumber":89,"author":{"gitId":"Khrystyna Boiko"},"content":"        CV actual \u003d cvService.updateCV(updateJobDTO);"},{"lineNumber":90,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertEquals(expected, actual);"},{"lineNumber":91,"author":{"gitId":"Khrystyna Boiko"},"content":"        verify(cvMapper, times(1)).toCV(eq(updateJobDTO));"},{"lineNumber":92,"author":{"gitId":"Khrystyna Boiko"},"content":"        verify(cvRepository, times(1)).save(eq(cvToUpdate));"},{"lineNumber":93,"author":{"gitId":"Khrystyna Boiko"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":95,"author":{"gitId":"Khrystyna Boiko"},"content":"    @Test"},{"lineNumber":96,"author":{"gitId":"Khrystyna Boiko"},"content":"    public void shouldDeleteCV() {"},{"lineNumber":97,"author":{"gitId":"Khrystyna Boiko"},"content":"        boolean exists \u003d false;"},{"lineNumber":98,"author":{"gitId":"Khrystyna Boiko"},"content":"        when(cvRepository.existsById(anyString())).thenReturn(exists);"},{"lineNumber":99,"author":{"gitId":"Khrystyna Boiko"},"content":"        boolean actual \u003d cvService.deleteCV(\"cv-id\");"},{"lineNumber":100,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertEquals(actual, !exists);"},{"lineNumber":101,"author":{"gitId":"Khrystyna Boiko"},"content":"        verify(cvRepository, times(1)).deleteById(eq(\"cv-id\"));"},{"lineNumber":102,"author":{"gitId":"Khrystyna Boiko"},"content":"        verify(cvRepository, times(1)).existsById(eq(\"cv-id\"));"},{"lineNumber":103,"author":{"gitId":"Khrystyna Boiko"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":105,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":106,"author":{"gitId":"Khrystyna Boiko"},"content":"}"}],"authorContributionMap":{"Khrystyna Boiko":106}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/service/DepartmentServiceTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khrystyna Boiko"},"content":"package edu.kmaooad.service;"},{"lineNumber":2,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":3,"author":{"gitId":"Khrystyna Boiko"},"content":"import edu.kmaooad.domain.dto.department.UpdateDepartmentDTO;"},{"lineNumber":4,"author":{"gitId":"Khrystyna Boiko"},"content":"import edu.kmaooad.domain.mapper.DepartmentMapper;"},{"lineNumber":5,"author":{"gitId":"Khrystyna Boiko"},"content":"import edu.kmaooad.domain.model.Department;"},{"lineNumber":6,"author":{"gitId":"Khrystyna Boiko"},"content":"import edu.kmaooad.repository.DepartmentRepository;"},{"lineNumber":7,"author":{"gitId":"Khrystyna Boiko"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":8,"author":{"gitId":"Khrystyna Boiko"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":9,"author":{"gitId":"Khrystyna Boiko"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":11,"author":{"gitId":"Khrystyna Boiko"},"content":"import java.util.List;"},{"lineNumber":12,"author":{"gitId":"Khrystyna Boiko"},"content":"import java.util.Optional;"},{"lineNumber":13,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":14,"author":{"gitId":"Khrystyna Boiko"},"content":"import static org.mockito.Mockito.*;"},{"lineNumber":15,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":16,"author":{"gitId":"Khrystyna Boiko"},"content":"public class DepartmentServiceTest {"},{"lineNumber":17,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":18,"author":{"gitId":"Khrystyna Boiko"},"content":"    private DepartmentRepository depRepository;"},{"lineNumber":19,"author":{"gitId":"Khrystyna Boiko"},"content":"    private DepartmentMapper depMapper;"},{"lineNumber":20,"author":{"gitId":"Khrystyna Boiko"},"content":"    private DepartmentService depService;"},{"lineNumber":21,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":22,"author":{"gitId":"Khrystyna Boiko"},"content":"    @BeforeEach"},{"lineNumber":23,"author":{"gitId":"Khrystyna Boiko"},"content":"    public void setup() {"},{"lineNumber":24,"author":{"gitId":"Khrystyna Boiko"},"content":"        depRepository \u003d mock(DepartmentRepository.class);"},{"lineNumber":25,"author":{"gitId":"Khrystyna Boiko"},"content":"        depMapper \u003d mock(DepartmentMapper.class);"},{"lineNumber":26,"author":{"gitId":"Khrystyna Boiko"},"content":"        depService \u003d new DepartmentServiceImpl(depRepository, depMapper);"},{"lineNumber":27,"author":{"gitId":"Khrystyna Boiko"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":29,"author":{"gitId":"Khrystyna Boiko"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"Khrystyna Boiko"},"content":"    public void shouldGetAllDepartments() {"},{"lineNumber":31,"author":{"gitId":"Khrystyna Boiko"},"content":"        Department expected \u003d Department.builder().id(\"dep-id\").build();"},{"lineNumber":32,"author":{"gitId":"Khrystyna Boiko"},"content":"        when(depRepository.findAll()).thenReturn(List.of(expected));"},{"lineNumber":33,"author":{"gitId":"Khrystyna Boiko"},"content":"        List\u003cDepartment\u003e departments \u003d depService.getAllDepartments();"},{"lineNumber":34,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertEquals(departments.size(), 1);"},{"lineNumber":35,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertEquals(departments.get(0), expected);"},{"lineNumber":36,"author":{"gitId":"Khrystyna Boiko"},"content":"        verify(depRepository, times(1)).findAll();"},{"lineNumber":37,"author":{"gitId":"Khrystyna Boiko"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":39,"author":{"gitId":"Khrystyna Boiko"},"content":"    @Test"},{"lineNumber":40,"author":{"gitId":"Khrystyna Boiko"},"content":"    public void shouldGetDepartmentById() {"},{"lineNumber":41,"author":{"gitId":"Khrystyna Boiko"},"content":"        Department expected \u003d Department.builder().id(\"dep-id\").build();"},{"lineNumber":42,"author":{"gitId":"Khrystyna Boiko"},"content":"        when(depRepository.findById(anyString())).thenReturn(Optional.of(expected));"},{"lineNumber":43,"author":{"gitId":"Khrystyna Boiko"},"content":"        Optional\u003cDepartment\u003e dep \u003d depService.getDepartmentById(\"dep-id\");"},{"lineNumber":44,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertTrue(dep.isPresent());"},{"lineNumber":45,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertEquals(dep.get(), expected);"},{"lineNumber":46,"author":{"gitId":"Khrystyna Boiko"},"content":"        verify(depRepository, times(1)).findById(eq(\"dep-id\"));"},{"lineNumber":47,"author":{"gitId":"Khrystyna Boiko"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":49,"author":{"gitId":"Khrystyna Boiko"},"content":"    @Test"},{"lineNumber":50,"author":{"gitId":"Khrystyna Boiko"},"content":"    public void shouldUpdateDepartmentStatus(){"},{"lineNumber":51,"author":{"gitId":"Khrystyna Boiko"},"content":"        Department expected \u003d Department.builder().isHiring(false).build();"},{"lineNumber":52,"author":{"gitId":"Khrystyna Boiko"},"content":"        Department depToUpdate \u003d Department.builder().build();"},{"lineNumber":53,"author":{"gitId":"Khrystyna Boiko"},"content":"        when(depMapper.toDepartment(any(UpdateDepartmentDTO.class))).thenReturn(depToUpdate);"},{"lineNumber":54,"author":{"gitId":"Khrystyna Boiko"},"content":"        when(depRepository.save(any(Department.class))).thenReturn(expected);"},{"lineNumber":55,"author":{"gitId":"Khrystyna Boiko"},"content":"        UpdateDepartmentDTO updateDepartmentDTO \u003d UpdateDepartmentDTO.builder().build();"},{"lineNumber":56,"author":{"gitId":"Khrystyna Boiko"},"content":"        Department actual \u003d depService.updateDepStatus(updateDepartmentDTO);"},{"lineNumber":57,"author":{"gitId":"Khrystyna Boiko"},"content":"        Assertions.assertEquals(expected, actual);"},{"lineNumber":58,"author":{"gitId":"Khrystyna Boiko"},"content":"        verify(depMapper, times(1)).toDepartment(eq(updateDepartmentDTO));"},{"lineNumber":59,"author":{"gitId":"Khrystyna Boiko"},"content":"        verify(depRepository, times(1)).save(eq(depToUpdate));"},{"lineNumber":60,"author":{"gitId":"Khrystyna Boiko"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"Khrystyna Boiko"},"content":""},{"lineNumber":62,"author":{"gitId":"Khrystyna Boiko"},"content":"}"}],"authorContributionMap":{"Khrystyna Boiko":62}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/service/JobServiceTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.service;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import static org.mockito.Mockito.*;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":""},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.domain.dto.job.AddJobDTO;"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.domain.dto.job.UpdateJobDTO;"},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.domain.mapper.JobMapper;"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.domain.model.Job;"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.repository.JobRepository;"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"Victor"},"content":"import java.util.Optional;"},{"lineNumber":12,"author":{"gitId":"Victor"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":13,"author":{"gitId":"Victor"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":14,"author":{"gitId":"Victor"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":15,"author":{"gitId":"Victor"},"content":""},{"lineNumber":16,"author":{"gitId":"Victor"},"content":"public class JobServiceTest {"},{"lineNumber":17,"author":{"gitId":"Victor"},"content":""},{"lineNumber":18,"author":{"gitId":"Victor"},"content":"  private JobRepository jobRepository;"},{"lineNumber":19,"author":{"gitId":"Victor"},"content":"  private JobMapper jobMapper;"},{"lineNumber":20,"author":{"gitId":"Victor"},"content":"  private JobService jobService;"},{"lineNumber":21,"author":{"gitId":"Victor"},"content":""},{"lineNumber":22,"author":{"gitId":"Victor"},"content":"  @BeforeEach"},{"lineNumber":23,"author":{"gitId":"Victor"},"content":"  public void setup() {"},{"lineNumber":24,"author":{"gitId":"Victor"},"content":"    jobRepository \u003d mock(JobRepository.class);"},{"lineNumber":25,"author":{"gitId":"Victor"},"content":"    jobMapper \u003d mock(JobMapper.class);"},{"lineNumber":26,"author":{"gitId":"Victor"},"content":"    jobService \u003d new JobServiceImpl(jobRepository, jobMapper);"},{"lineNumber":27,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":28,"author":{"gitId":"Victor"},"content":""},{"lineNumber":29,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":30,"author":{"gitId":"Victor"},"content":"  public void shouldGetAllJobs() {"},{"lineNumber":31,"author":{"gitId":"Victor"},"content":"    Job expected \u003d Job.builder().id(\"job-id\").build();"},{"lineNumber":32,"author":{"gitId":"Victor"},"content":"    when(jobRepository.findAll()).thenReturn(List.of(expected));"},{"lineNumber":33,"author":{"gitId":"Victor"},"content":""},{"lineNumber":34,"author":{"gitId":"Victor"},"content":"    List\u003cJob\u003e jobs \u003d jobService.getAllJobs();"},{"lineNumber":35,"author":{"gitId":"Victor"},"content":""},{"lineNumber":36,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(jobs.size(), 1);"},{"lineNumber":37,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(jobs.get(0), expected);"},{"lineNumber":38,"author":{"gitId":"Victor"},"content":""},{"lineNumber":39,"author":{"gitId":"Victor"},"content":"    verify(jobRepository, times(1)).findAll();"},{"lineNumber":40,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":41,"author":{"gitId":"Victor"},"content":""},{"lineNumber":42,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":43,"author":{"gitId":"Victor"},"content":"  public void shouldGetJobById() {"},{"lineNumber":44,"author":{"gitId":"Victor"},"content":"    Job expected \u003d Job.builder().id(\"job-id\").build();"},{"lineNumber":45,"author":{"gitId":"Victor"},"content":"    when(jobRepository.findById(anyString())).thenReturn(Optional.of(expected));"},{"lineNumber":46,"author":{"gitId":"Victor"},"content":""},{"lineNumber":47,"author":{"gitId":"Victor"},"content":"    Optional\u003cJob\u003e job \u003d jobService.getJobById(\"job-id\");"},{"lineNumber":48,"author":{"gitId":"Victor"},"content":""},{"lineNumber":49,"author":{"gitId":"Victor"},"content":"    Assertions.assertTrue(job.isPresent());"},{"lineNumber":50,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(job.get(), expected);"},{"lineNumber":51,"author":{"gitId":"Victor"},"content":""},{"lineNumber":52,"author":{"gitId":"Victor"},"content":"    verify(jobRepository, times(1)).findById(eq(\"job-id\"));"},{"lineNumber":53,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":54,"author":{"gitId":"Victor"},"content":""},{"lineNumber":55,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":56,"author":{"gitId":"Victor"},"content":"  public void shouldAddNewJob() {"},{"lineNumber":57,"author":{"gitId":"Victor"},"content":"    Job expected \u003d Job.builder().id(\"job-id\").build();"},{"lineNumber":58,"author":{"gitId":"Victor"},"content":"    Job jobToSave \u003d Job.builder().build();"},{"lineNumber":59,"author":{"gitId":"Victor"},"content":"    when(jobMapper.toJob(any(AddJobDTO.class))).thenReturn(jobToSave);"},{"lineNumber":60,"author":{"gitId":"Victor"},"content":"    when(jobRepository.save(any(Job.class))).thenReturn(expected);"},{"lineNumber":61,"author":{"gitId":"Victor"},"content":""},{"lineNumber":62,"author":{"gitId":"Victor"},"content":"    AddJobDTO addJobDTO \u003d AddJobDTO.builder().build();"},{"lineNumber":63,"author":{"gitId":"Victor"},"content":"    Job actual \u003d jobService.addJob(addJobDTO);"},{"lineNumber":64,"author":{"gitId":"Victor"},"content":""},{"lineNumber":65,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(expected, actual);"},{"lineNumber":66,"author":{"gitId":"Victor"},"content":""},{"lineNumber":67,"author":{"gitId":"Victor"},"content":"    verify(jobMapper, times(1)).toJob(eq(addJobDTO));"},{"lineNumber":68,"author":{"gitId":"Victor"},"content":"    verify(jobRepository, times(1)).save(eq(jobToSave));"},{"lineNumber":69,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":70,"author":{"gitId":"Victor"},"content":""},{"lineNumber":71,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":72,"author":{"gitId":"Victor"},"content":"  public void shouldUpdateJob() {"},{"lineNumber":73,"author":{"gitId":"Victor"},"content":"    Job expected \u003d Job.builder().id(\"job-id\").build();"},{"lineNumber":74,"author":{"gitId":"Victor"},"content":"    Job jobToUpdate \u003d Job.builder().build();"},{"lineNumber":75,"author":{"gitId":"Victor"},"content":"    when(jobMapper.toJob(any(UpdateJobDTO.class))).thenReturn(jobToUpdate);"},{"lineNumber":76,"author":{"gitId":"Victor"},"content":"    when(jobRepository.save(any(Job.class))).thenReturn(expected);"},{"lineNumber":77,"author":{"gitId":"Victor"},"content":""},{"lineNumber":78,"author":{"gitId":"Victor"},"content":"    UpdateJobDTO updateJobDTO \u003d UpdateJobDTO.builder().build();"},{"lineNumber":79,"author":{"gitId":"Victor"},"content":"    Job actual \u003d jobService.updateJob(updateJobDTO);"},{"lineNumber":80,"author":{"gitId":"Victor"},"content":""},{"lineNumber":81,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(expected, actual);"},{"lineNumber":82,"author":{"gitId":"Victor"},"content":""},{"lineNumber":83,"author":{"gitId":"Victor"},"content":"    verify(jobMapper, times(1)).toJob(eq(updateJobDTO));"},{"lineNumber":84,"author":{"gitId":"Victor"},"content":"    verify(jobRepository, times(1)).save(eq(jobToUpdate));"},{"lineNumber":85,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":86,"author":{"gitId":"Victor"},"content":""},{"lineNumber":87,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":88,"author":{"gitId":"Victor"},"content":"  public void shouldDeleteJob() {"},{"lineNumber":89,"author":{"gitId":"Victor"},"content":"    boolean exists \u003d false;"},{"lineNumber":90,"author":{"gitId":"Victor"},"content":"    when(jobRepository.existsById(anyString())).thenReturn(exists);"},{"lineNumber":91,"author":{"gitId":"Victor"},"content":""},{"lineNumber":92,"author":{"gitId":"Victor"},"content":"    boolean actual \u003d jobService.deleteJob(\"job-id\");"},{"lineNumber":93,"author":{"gitId":"Victor"},"content":""},{"lineNumber":94,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(actual, !exists);"},{"lineNumber":95,"author":{"gitId":"Victor"},"content":""},{"lineNumber":96,"author":{"gitId":"Victor"},"content":"    verify(jobRepository, times(1)).deleteById(eq(\"job-id\"));"},{"lineNumber":97,"author":{"gitId":"Victor"},"content":"    verify(jobRepository, times(1)).existsById(eq(\"job-id\"));"},{"lineNumber":98,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":99,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":99}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/service/TelegramServiceTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.service;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import static org.mockito.ArgumentMatchers.any;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import static org.mockito.Mockito.*;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":""},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.telegram.TelegramMessageSender;"},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":"import org.telegram.telegrambots.meta.api.methods.ParseMode;"},{"lineNumber":11,"author":{"gitId":"Victor"},"content":"import org.telegram.telegrambots.meta.api.methods.send.SendMessage;"},{"lineNumber":12,"author":{"gitId":"Victor"},"content":"import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboard;"},{"lineNumber":13,"author":{"gitId":"Victor"},"content":"import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;"},{"lineNumber":14,"author":{"gitId":"Victor"},"content":"import org.telegram.telegrambots.meta.exceptions.TelegramApiException;"},{"lineNumber":15,"author":{"gitId":"Victor"},"content":""},{"lineNumber":16,"author":{"gitId":"Victor"},"content":"public class TelegramServiceTest {"},{"lineNumber":17,"author":{"gitId":"Victor"},"content":""},{"lineNumber":18,"author":{"gitId":"Victor"},"content":"  private TelegramMessageSender telegramMessageSender;"},{"lineNumber":19,"author":{"gitId":"Victor"},"content":"  private TelegramService telegramService;"},{"lineNumber":20,"author":{"gitId":"Victor"},"content":""},{"lineNumber":21,"author":{"gitId":"Victor"},"content":"  @BeforeEach"},{"lineNumber":22,"author":{"gitId":"Victor"},"content":"  public void setup() {"},{"lineNumber":23,"author":{"gitId":"Victor"},"content":"    telegramMessageSender \u003d mock(TelegramMessageSender.class);"},{"lineNumber":24,"author":{"gitId":"Victor"},"content":"    telegramService \u003d new TelegramServiceImpl(telegramMessageSender);"},{"lineNumber":25,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":26,"author":{"gitId":"Victor"},"content":""},{"lineNumber":27,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":28,"author":{"gitId":"Victor"},"content":"  public void shouldSendMessageWithoutKeyboardSuccessfully() throws TelegramApiException {"},{"lineNumber":29,"author":{"gitId":"Victor"},"content":"    Long chatId \u003d 1L;"},{"lineNumber":30,"author":{"gitId":"Victor"},"content":"    String message \u003d \"message\";"},{"lineNumber":31,"author":{"gitId":"Victor"},"content":"    when(telegramMessageSender.execute(any(SendMessage.class))).thenReturn(null);"},{"lineNumber":32,"author":{"gitId":"Victor"},"content":""},{"lineNumber":33,"author":{"gitId":"Victor"},"content":"    Assertions.assertDoesNotThrow(() -\u003e telegramService.sendMessage(chatId, message));"},{"lineNumber":34,"author":{"gitId":"Victor"},"content":""},{"lineNumber":35,"author":{"gitId":"Victor"},"content":"    verify(telegramMessageSender, times(1))"},{"lineNumber":36,"author":{"gitId":"Victor"},"content":"        .execute("},{"lineNumber":37,"author":{"gitId":"Victor"},"content":"            eq("},{"lineNumber":38,"author":{"gitId":"Victor"},"content":"                SendMessage.builder()"},{"lineNumber":39,"author":{"gitId":"Victor"},"content":"                    .chatId(chatId)"},{"lineNumber":40,"author":{"gitId":"Victor"},"content":"                    .text(message)"},{"lineNumber":41,"author":{"gitId":"Victor"},"content":"                    .parseMode(ParseMode.HTML)"},{"lineNumber":42,"author":{"gitId":"Victor"},"content":"                    .replyMarkup(null)"},{"lineNumber":43,"author":{"gitId":"Victor"},"content":"                    .build()));"},{"lineNumber":44,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":45,"author":{"gitId":"Victor"},"content":""},{"lineNumber":46,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":47,"author":{"gitId":"Victor"},"content":"  public void shouldSendMessageWithKeyboardSuccessfully() throws TelegramApiException {"},{"lineNumber":48,"author":{"gitId":"Victor"},"content":"    Long chatId \u003d 1L;"},{"lineNumber":49,"author":{"gitId":"Victor"},"content":"    String message \u003d \"message\";"},{"lineNumber":50,"author":{"gitId":"Victor"},"content":"    ReplyKeyboard replyKeyboard \u003d new ReplyKeyboardMarkup();"},{"lineNumber":51,"author":{"gitId":"Victor"},"content":"    when(telegramMessageSender.execute(any(SendMessage.class))).thenReturn(null);"},{"lineNumber":52,"author":{"gitId":"Victor"},"content":""},{"lineNumber":53,"author":{"gitId":"Victor"},"content":"    Assertions.assertDoesNotThrow("},{"lineNumber":54,"author":{"gitId":"Victor"},"content":"        () -\u003e telegramService.sendMessage(chatId, message, replyKeyboard));"},{"lineNumber":55,"author":{"gitId":"Victor"},"content":""},{"lineNumber":56,"author":{"gitId":"Victor"},"content":"    verify(telegramMessageSender, times(1))"},{"lineNumber":57,"author":{"gitId":"Victor"},"content":"        .execute("},{"lineNumber":58,"author":{"gitId":"Victor"},"content":"            eq("},{"lineNumber":59,"author":{"gitId":"Victor"},"content":"                SendMessage.builder()"},{"lineNumber":60,"author":{"gitId":"Victor"},"content":"                    .chatId(chatId)"},{"lineNumber":61,"author":{"gitId":"Victor"},"content":"                    .text(message)"},{"lineNumber":62,"author":{"gitId":"Victor"},"content":"                    .parseMode(ParseMode.HTML)"},{"lineNumber":63,"author":{"gitId":"Victor"},"content":"                    .replyMarkup(replyKeyboard)"},{"lineNumber":64,"author":{"gitId":"Victor"},"content":"                    .build()));"},{"lineNumber":65,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":66,"author":{"gitId":"Victor"},"content":""},{"lineNumber":67,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":68,"author":{"gitId":"Victor"},"content":"  public void shouldThrowExceptionWhenSendingMessageFailed() throws TelegramApiException {"},{"lineNumber":69,"author":{"gitId":"Victor"},"content":"    Long chatId \u003d 1L;"},{"lineNumber":70,"author":{"gitId":"Victor"},"content":"    String message \u003d \"message\";"},{"lineNumber":71,"author":{"gitId":"Victor"},"content":"    when(telegramMessageSender.execute(any(SendMessage.class)))"},{"lineNumber":72,"author":{"gitId":"Victor"},"content":"        .thenThrow(TelegramApiException.class);"},{"lineNumber":73,"author":{"gitId":"Victor"},"content":""},{"lineNumber":74,"author":{"gitId":"Victor"},"content":"    Assertions.assertThrows("},{"lineNumber":75,"author":{"gitId":"Victor"},"content":"        RuntimeException.class, () -\u003e telegramService.sendMessage(chatId, message));"},{"lineNumber":76,"author":{"gitId":"Victor"},"content":""},{"lineNumber":77,"author":{"gitId":"Victor"},"content":"    verify(telegramMessageSender, times(1))"},{"lineNumber":78,"author":{"gitId":"Victor"},"content":"        .execute("},{"lineNumber":79,"author":{"gitId":"Victor"},"content":"            eq("},{"lineNumber":80,"author":{"gitId":"Victor"},"content":"                SendMessage.builder()"},{"lineNumber":81,"author":{"gitId":"Victor"},"content":"                    .chatId(chatId)"},{"lineNumber":82,"author":{"gitId":"Victor"},"content":"                    .text(message)"},{"lineNumber":83,"author":{"gitId":"Victor"},"content":"                    .parseMode(ParseMode.HTML)"},{"lineNumber":84,"author":{"gitId":"Victor"},"content":"                    .replyMarkup(null)"},{"lineNumber":85,"author":{"gitId":"Victor"},"content":"                    .build()));"},{"lineNumber":86,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":87,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":87}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/service/UserStateServiceTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.service;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.dispatch.Command;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.domain.model.UserState;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"import java.util.HashMap;"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":""},{"lineNumber":10,"author":{"gitId":"Victor"},"content":"public class UserStateServiceTest {"},{"lineNumber":11,"author":{"gitId":"Victor"},"content":""},{"lineNumber":12,"author":{"gitId":"Victor"},"content":"  private UserStateService userStateService;"},{"lineNumber":13,"author":{"gitId":"Victor"},"content":""},{"lineNumber":14,"author":{"gitId":"Victor"},"content":"  @BeforeEach"},{"lineNumber":15,"author":{"gitId":"Victor"},"content":"  public void setup() {"},{"lineNumber":16,"author":{"gitId":"Victor"},"content":"    userStateService \u003d new UserStateServiceImpl();"},{"lineNumber":17,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":18,"author":{"gitId":"Victor"},"content":""},{"lineNumber":19,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":20,"author":{"gitId":"Victor"},"content":"  public void shouldCreateEmptyStateIfUserStateIsNotPresent() {"},{"lineNumber":21,"author":{"gitId":"Victor"},"content":"    UserState userState \u003d userStateService.getStateForUser(1L);"},{"lineNumber":22,"author":{"gitId":"Victor"},"content":""},{"lineNumber":23,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(userState.getChatId(), 1);"},{"lineNumber":24,"author":{"gitId":"Victor"},"content":"    Assertions.assertNull(userState.getCurrentCommand());"},{"lineNumber":25,"author":{"gitId":"Victor"},"content":"    Assertions.assertNull(userState.getCommandState());"},{"lineNumber":26,"author":{"gitId":"Victor"},"content":"    Assertions.assertNotNull(userState.getInputs());"},{"lineNumber":27,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(userState.getInputs().size(), 0);"},{"lineNumber":28,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":29,"author":{"gitId":"Victor"},"content":""},{"lineNumber":30,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":31,"author":{"gitId":"Victor"},"content":"  public void shouldAddStateForUser() {"},{"lineNumber":32,"author":{"gitId":"Victor"},"content":"    UserState userState \u003d new UserState(1L, Command.UNKNOWN_COMMAND, null, new HashMap\u003c\u003e());"},{"lineNumber":33,"author":{"gitId":"Victor"},"content":""},{"lineNumber":34,"author":{"gitId":"Victor"},"content":"    userStateService.setStateForUser(1L, userState);"},{"lineNumber":35,"author":{"gitId":"Victor"},"content":""},{"lineNumber":36,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(userStateService.getStateForUser(1L), userState);"},{"lineNumber":37,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":38,"author":{"gitId":"Victor"},"content":""},{"lineNumber":39,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":40,"author":{"gitId":"Victor"},"content":"  public void shouldReplaceExistingStateForUser() {"},{"lineNumber":41,"author":{"gitId":"Victor"},"content":"    UserState firstUserState \u003d new UserState(1L, Command.UNKNOWN_COMMAND, null, new HashMap\u003c\u003e());"},{"lineNumber":42,"author":{"gitId":"Victor"},"content":"    userStateService.setStateForUser(1L, firstUserState);"},{"lineNumber":43,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(userStateService.getStateForUser(1L), firstUserState);"},{"lineNumber":44,"author":{"gitId":"Victor"},"content":""},{"lineNumber":45,"author":{"gitId":"Victor"},"content":"    UserState secondUserState \u003d new UserState(1L, Command.ADD_JOB, null, new HashMap\u003c\u003e());"},{"lineNumber":46,"author":{"gitId":"Victor"},"content":"    userStateService.setStateForUser(1L, secondUserState);"},{"lineNumber":47,"author":{"gitId":"Victor"},"content":""},{"lineNumber":48,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(userStateService.getStateForUser(1L), secondUserState);"},{"lineNumber":49,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":50,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":50}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/telegram/TelegramMessageSenderTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.telegram;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.config.TelegramProperties;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":""},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"public class TelegramMessageSenderTest {"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":""},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":"  public void shouldUseTelegramPropertiesForReadingToken() {"},{"lineNumber":11,"author":{"gitId":"Victor"},"content":"    String botToken \u003d \"bot-token\";"},{"lineNumber":12,"author":{"gitId":"Victor"},"content":"    TelegramProperties telegramProperties \u003d TelegramProperties.builder().botToken(botToken).build();"},{"lineNumber":13,"author":{"gitId":"Victor"},"content":"    TelegramMessageSender telegramMessageSender \u003d new TelegramMessageSender(telegramProperties);"},{"lineNumber":14,"author":{"gitId":"Victor"},"content":""},{"lineNumber":15,"author":{"gitId":"Victor"},"content":"    Assertions.assertEquals(telegramMessageSender.getBotToken(), botToken);"},{"lineNumber":16,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":17,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":17}},{"path":"kmaooad-functions/src/test/java/edu/kmaooad/web/webhook/TelegramWebhookTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Victor"},"content":"package edu.kmaooad.web.webhook;"},{"lineNumber":2,"author":{"gitId":"Victor"},"content":""},{"lineNumber":3,"author":{"gitId":"Victor"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"},{"lineNumber":4,"author":{"gitId":"Victor"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":5,"author":{"gitId":"Victor"},"content":"import static org.mockito.Mockito.*;"},{"lineNumber":6,"author":{"gitId":"Victor"},"content":""},{"lineNumber":7,"author":{"gitId":"Victor"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;"},{"lineNumber":8,"author":{"gitId":"Victor"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;"},{"lineNumber":9,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.command.dispatch.CommandDispatcher;"},{"lineNumber":10,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.domain.mapper.UserRequestMapper;"},{"lineNumber":11,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.exception.InvalidRequestBodyException;"},{"lineNumber":12,"author":{"gitId":"Victor"},"content":"import edu.kmaooad.web.request.UserRequest;"},{"lineNumber":13,"author":{"gitId":"Victor"},"content":"import java.util.Optional;"},{"lineNumber":14,"author":{"gitId":"Victor"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":15,"author":{"gitId":"Victor"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":16,"author":{"gitId":"Victor"},"content":"import org.telegram.telegrambots.meta.api.objects.Update;"},{"lineNumber":17,"author":{"gitId":"Victor"},"content":""},{"lineNumber":18,"author":{"gitId":"Victor"},"content":"public class TelegramWebhookTest {"},{"lineNumber":19,"author":{"gitId":"Victor"},"content":""},{"lineNumber":20,"author":{"gitId":"Victor"},"content":"  private ObjectMapper objectMapper;"},{"lineNumber":21,"author":{"gitId":"Victor"},"content":"  private UserRequestMapper userRequestMapper;"},{"lineNumber":22,"author":{"gitId":"Victor"},"content":"  private CommandDispatcher commandDispatcher;"},{"lineNumber":23,"author":{"gitId":"Victor"},"content":"  private TelegramWebhook telegramWebhook;"},{"lineNumber":24,"author":{"gitId":"Victor"},"content":""},{"lineNumber":25,"author":{"gitId":"Victor"},"content":"  @BeforeEach"},{"lineNumber":26,"author":{"gitId":"Victor"},"content":"  public void setup() {"},{"lineNumber":27,"author":{"gitId":"Victor"},"content":"    objectMapper \u003d mock(ObjectMapper.class);"},{"lineNumber":28,"author":{"gitId":"Victor"},"content":"    userRequestMapper \u003d mock(UserRequestMapper.class);"},{"lineNumber":29,"author":{"gitId":"Victor"},"content":"    commandDispatcher \u003d mock(CommandDispatcher.class);"},{"lineNumber":30,"author":{"gitId":"Victor"},"content":"    telegramWebhook \u003d new TelegramWebhook(objectMapper, userRequestMapper, commandDispatcher);"},{"lineNumber":31,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":32,"author":{"gitId":"Victor"},"content":""},{"lineNumber":33,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":34,"author":{"gitId":"Victor"},"content":"  public void shouldHandleUpdateSuccessfully() throws Exception {"},{"lineNumber":35,"author":{"gitId":"Victor"},"content":"    String testBody \u003d \"Some string\";"},{"lineNumber":36,"author":{"gitId":"Victor"},"content":"    when(objectMapper.readValue(anyString(), eq(Update.class))).thenReturn(new Update());"},{"lineNumber":37,"author":{"gitId":"Victor"},"content":"    when(userRequestMapper.toUserRequest(any(Update.class)))"},{"lineNumber":38,"author":{"gitId":"Victor"},"content":"        .thenReturn(UserRequest.builder().chatId(1L).build());"},{"lineNumber":39,"author":{"gitId":"Victor"},"content":""},{"lineNumber":40,"author":{"gitId":"Victor"},"content":"    assertDoesNotThrow(() -\u003e telegramWebhook.apply(Optional.of(testBody)));"},{"lineNumber":41,"author":{"gitId":"Victor"},"content":""},{"lineNumber":42,"author":{"gitId":"Victor"},"content":"    verify(objectMapper, times(1)).readValue(eq(testBody), eq(Update.class));"},{"lineNumber":43,"author":{"gitId":"Victor"},"content":"    verify(userRequestMapper, times(1)).toUserRequest(eq(new Update()));"},{"lineNumber":44,"author":{"gitId":"Victor"},"content":"    verify(commandDispatcher, times(1)).dispatch(eq(UserRequest.builder().chatId(1L).build()));"},{"lineNumber":45,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":46,"author":{"gitId":"Victor"},"content":""},{"lineNumber":47,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":48,"author":{"gitId":"Victor"},"content":"  public void shouldThrowExceptionIfRequestBodyIsNull() throws JsonProcessingException {"},{"lineNumber":49,"author":{"gitId":"Victor"},"content":"    assertThrows(InvalidRequestBodyException.class, () -\u003e telegramWebhook.apply(Optional.empty()));"},{"lineNumber":50,"author":{"gitId":"Victor"},"content":""},{"lineNumber":51,"author":{"gitId":"Victor"},"content":"    verify(objectMapper, never()).readValue(anyString(), eq(Update.class));"},{"lineNumber":52,"author":{"gitId":"Victor"},"content":"    verify(userRequestMapper, never()).toUserRequest(any(Update.class));"},{"lineNumber":53,"author":{"gitId":"Victor"},"content":"    verify(commandDispatcher, never()).dispatch(any(UserRequest.class));"},{"lineNumber":54,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":55,"author":{"gitId":"Victor"},"content":""},{"lineNumber":56,"author":{"gitId":"Victor"},"content":"  @Test"},{"lineNumber":57,"author":{"gitId":"Victor"},"content":"  public void shouldThrowExceptionIfParsingOfRequestBodyFailed() throws Exception {"},{"lineNumber":58,"author":{"gitId":"Victor"},"content":"    String testBody \u003d \"Wrong body\";"},{"lineNumber":59,"author":{"gitId":"Victor"},"content":"    when(objectMapper.readValue(anyString(), eq(Update.class)))"},{"lineNumber":60,"author":{"gitId":"Victor"},"content":"        .thenThrow(JsonProcessingException.class);"},{"lineNumber":61,"author":{"gitId":"Victor"},"content":""},{"lineNumber":62,"author":{"gitId":"Victor"},"content":"    assertThrows("},{"lineNumber":63,"author":{"gitId":"Victor"},"content":"        InvalidRequestBodyException.class, () -\u003e telegramWebhook.apply(Optional.of(testBody)));"},{"lineNumber":64,"author":{"gitId":"Victor"},"content":""},{"lineNumber":65,"author":{"gitId":"Victor"},"content":"    verify(objectMapper, times(1)).readValue(eq(testBody), eq(Update.class));"},{"lineNumber":66,"author":{"gitId":"Victor"},"content":"    verify(userRequestMapper, never()).toUserRequest(any(Update.class));"},{"lineNumber":67,"author":{"gitId":"Victor"},"content":"    verify(commandDispatcher, never()).dispatch(any(UserRequest.class));"},{"lineNumber":68,"author":{"gitId":"Victor"},"content":"  }"},{"lineNumber":69,"author":{"gitId":"Victor"},"content":"}"}],"authorContributionMap":{"Victor":69}}]
